[WRN 2020-05-13 15:23:32     2 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:32     2 sec]  mark net vss as vss 
[WRN 2020-05-13 15:23:32     2 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:32     2 sec]  Symnet parser: reading ./Gm2_v5_Practice_schematic.symnet...
[INF 2020-05-13 15:23:32     2 sec]  ParserSymNet:: left net vom 4
, right net vop 5
[INF 2020-05-13 15:23:32     2 sec]  ParserSymNet:: left net vip 3
, right net vim 2
[INF 2020-05-13 15:23:32     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:32     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 0 Gm2_v5_Practice_schematic_xm20  pin 0 0-> cell 6 Gm2_v5_Practice_schematic_xm23 pin 22 2 -> cell 6 Gm2_v5_Practice_schematic_xm23 pin 20 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 -> pin 41  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 6 Gm2_v5_Practice_schematic_xm23  pin 20 0-> cell 13 Gm2_v5_Practice_schematic_xm13 pin 41 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 pin 43 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 0 Gm2_v5_Practice_schematic_xm20  pin 0 0-> cell 7 Gm2_v5_Practice_schematic_xm14 pin 26 2 -> cell 7 Gm2_v5_Practice_schematic_xm14 pin 24 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 -> pin 44  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 7 Gm2_v5_Practice_schematic_xm14  pin 24 0-> cell 14 Gm2_v5_Practice_schematic_xm21 pin 44 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 pin 46 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 1 Gm2_v5_Practice_schematic_xm18  pin 4 0-> cell 6 Gm2_v5_Practice_schematic_xm23 pin 22 2 -> cell 6 Gm2_v5_Practice_schematic_xm23 pin 20 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 -> pin 41  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 6 Gm2_v5_Practice_schematic_xm23  pin 20 0-> cell 13 Gm2_v5_Practice_schematic_xm13 pin 41 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 pin 43 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 1 Gm2_v5_Practice_schematic_xm18  pin 4 0-> cell 7 Gm2_v5_Practice_schematic_xm14 pin 26 2 -> cell 7 Gm2_v5_Practice_schematic_xm14 pin 24 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 -> pin 44  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 7 Gm2_v5_Practice_schematic_xm14  pin 24 0-> cell 14 Gm2_v5_Practice_schematic_xm21 pin 44 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 pin 46 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 6 Gm2_v5_Practice_schematic_xm23  pin 20 0-> cell 13 Gm2_v5_Practice_schematic_xm13 pin 41 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 pin 43 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 7 Gm2_v5_Practice_schematic_xm14  pin 24 0-> cell 14 Gm2_v5_Practice_schematic_xm21 pin 44 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 pin 46 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 1 Gm2_v5_Practice_schematic_xm18  pin 4 0-> cell 6 Gm2_v5_Practice_schematic_xm23 pin 22 2 -> cell 6 Gm2_v5_Practice_schematic_xm23 pin 20 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 -> pin 41  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 6 Gm2_v5_Practice_schematic_xm23  pin 20 0-> cell 13 Gm2_v5_Practice_schematic_xm13 pin 41 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 pin 43 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 1 Gm2_v5_Practice_schematic_xm18  pin 4 0-> cell 7 Gm2_v5_Practice_schematic_xm14 pin 26 2 -> cell 7 Gm2_v5_Practice_schematic_xm14 pin 24 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 -> pin 44  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 7 Gm2_v5_Practice_schematic_xm14  pin 24 0-> cell 14 Gm2_v5_Practice_schematic_xm21 pin 44 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 pin 46 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 0 Gm2_v5_Practice_schematic_xm20  pin 0 0-> cell 6 Gm2_v5_Practice_schematic_xm23 pin 22 2 -> cell 6 Gm2_v5_Practice_schematic_xm23 pin 20 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 -> pin 41  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 6 Gm2_v5_Practice_schematic_xm23  pin 20 0-> cell 13 Gm2_v5_Practice_schematic_xm13 pin 41 0 -> cell 13 Gm2_v5_Practice_schematic_xm13 pin 43 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 0 Gm2_v5_Practice_schematic_xm20  pin 0 0-> cell 7 Gm2_v5_Practice_schematic_xm14 pin 26 2 -> cell 7 Gm2_v5_Practice_schematic_xm14 pin 24 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 -> pin 44  0
[DBG 2020-05-13 15:23:32     0 sec]  SigPathMgr: add cell 7 Gm2_v5_Practice_schematic_xm14  pin 24 0-> cell 14 Gm2_v5_Practice_schematic_xm21 pin 44 0 -> cell 14 Gm2_v5_Practice_schematic_xm21 pin 46 2 -> cell 10 Gm2_v5_Practice_schematic_xm22 -> pin 32  0
[DBG 2020-05-13 15:23:32     0 sec]  start current flow 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm20 -> cell Gm2_v5_Practice_schematic_xm23 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm13 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm20 -> cell Gm2_v5_Practice_schematic_xm14 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm21 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm18 -> cell Gm2_v5_Practice_schematic_xm23 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm13 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm18 -> cell Gm2_v5_Practice_schematic_xm14 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm21 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm13 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm21 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm18 -> cell Gm2_v5_Practice_schematic_xm23 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm13 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm18 -> cell Gm2_v5_Practice_schematic_xm14 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm21 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm20 -> cell Gm2_v5_Practice_schematic_xm23 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm23 -> cell Gm2_v5_Practice_schematic_xm13 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm13 -> cell Gm2_v5_Practice_schematic_xm22 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm20 -> cell Gm2_v5_Practice_schematic_xm14 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm14 -> cell Gm2_v5_Practice_schematic_xm21 
[DBG 2020-05-13 15:23:32     0 sec]  NlpGPlacer:: add current cell Gm2_v5_Practice_schematic_xm21 -> cell Gm2_v5_Practice_schematic_xm22 
[INF 2020-05-13 15:23:32     0 sec]  Ideaplace global placement:: number of operators 151, hpwl 7 ovl 105 oob 0 asym 1 sigFlow 0 power 2 crf 
[DBG 2020-05-13 15:23:32     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 0.000000 
[DBG 2020-05-13 15:23:32     0 sec]  init mult: ovl 0.084718 oob 0.084718 asym 0.954044 current flow 2.453255
[DBG 2020-05-13 15:23:32     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:32     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:32     0 sec]  iter 0 
[DBG 2020-05-13 15:23:32     0 sec]  adam: 90.647012 hpwl 61.438787 cos 17.185391 ovl 11.969561 oob 0.000000 asym 0.053273 
[DBG 2020-05-13 15:23:32     0 sec]  gradient norm 0.508476 
[DBG 2020-05-13 15:23:32     0 sec]  converge at iter 2069 
[DBG 2020-05-13 15:23:32     0 sec]  update mult: raw ovl 141.287409 oob 0.000000 asym 0.055839 cos 0.572846 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:32     0 sec]  update mult:  before ovl 0.084718 oob 0.084718 asym 0.954044 current flow 2.453255 
[DBG 2020-05-13 15:23:32     0 sec]  update mult: afterafter  ovl 1.497592 oob 0.084718 asym 0.954602 cos 30.005728 current flow 2.453255 
[DBG 2020-05-13 15:23:32     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:32     0 sec]  update alpha:: new alpha idx 1 0.402629 
[DBG 2020-05-13 15:23:32     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:32     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:32     0 sec]  obj 290.268362 hpwl 61.438787 ovl 211.590880 oob 0.000000 asym 0.053304 cos 17.185391 
[DBG 2020-05-13 15:23:32     0 sec]  iter 1 
[DBG 2020-05-13 15:23:33     1 sec]  adam: 105.459483 hpwl 74.012276 cos 21.994891 ovl 9.316483 oob 0.000000 asym 0.135832 
[DBG 2020-05-13 15:23:33     1 sec]  gradient norm 2.235311 
[DBG 2020-05-13 15:23:33     1 sec]  converge at iter 620 
[DBG 2020-05-13 15:23:33     1 sec]  update mult: raw ovl 6.220976 oob 0.000000 asym 0.142292 cos 21.994891 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:33     1 sec]  update mult:  before ovl 1.497592 oob 0.084718 asym 0.954602 current flow 2.453255 
[DBG 2020-05-13 15:23:33     1 sec]  update mult: afterafter  ovl 1.559802 oob 0.084718 asym 0.956025 cos 1.219949 current flow 2.453255 
[DBG 2020-05-13 15:23:33     1 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.980000 power wl 0.073406 
[DBG 2020-05-13 15:23:33     1 sec]  update alpha:: new alpha idx 1 0.401965 
[DBG 2020-05-13 15:23:33     1 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:33     1 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:33     1 sec]  obj 105.846691 hpwl 74.012276 ovl 9.703489 oob 0.000000 asym 0.136035 cos 21.994891 
[DBG 2020-05-13 15:23:33     1 sec]  iter 2 
[DBG 2020-05-13 15:23:33     1 sec]  adam: 97.815868 hpwl 80.983804 cos 12.803856 ovl 3.937754 oob 0.000000 asym 0.090454 
[DBG 2020-05-13 15:23:33     1 sec]  gradient norm 0.293786 
[DBG 2020-05-13 15:23:33     1 sec]  converge at iter 1479 
[DBG 2020-05-13 15:23:33     1 sec]  update mult: raw ovl 2.524522 oob 0.000000 asym 0.094614 cos 13.065159 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:33     1 sec]  update mult:  before ovl 1.559802 oob 0.084718 asym 0.956025 current flow 2.453255 
[DBG 2020-05-13 15:23:33     1 sec]  update mult: afterafter  ovl 1.585047 oob 0.084718 asym 0.956971 cos 1.110652 current flow 2.453255 
[DBG 2020-05-13 15:23:33     1 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.960400 power wl 0.070983 
[DBG 2020-05-13 15:23:33     1 sec]  update alpha:: new alpha idx 1 0.400817 
[DBG 2020-05-13 15:23:33     1 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:33     1 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:33     1 sec]  obj 97.879689 hpwl 80.983804 ovl 4.001486 oob 0.000000 asym 0.090543 cos 12.803856 
[DBG 2020-05-13 15:23:33     1 sec]  ovl area 0.039150 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.089323 target 0.500000 
[INF 2020-05-13 15:23:33     1 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:33     1 sec]  CG legalizer: legalize horizontal LP...
========================================================
    MAGICAL: Machine Generated Analog IC Layout            
        https://github.com/magical-eda/MAGICAL
========================================================
[I] parameters = {'hspice_netlist': u'CTDSM_CORE_NEW_hspice.sp', 'resultDir': u'./', 'simple_tech_file': '/home/local/eda09/keren/benchmarks/tech/techfile', 'spectre_netlist': None}
('PnR: working on ', u'Gm2_v5_Practice_schematic')
('countNumberOfCells', u'Gm2_v5_Practice_schematic')
('nmos', 5, 'numPmos', 6, 'cap', 2, 'res', 2, 'unset:')
end
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm20')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm20')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm20')
('add pin', u'3', 'to cell', u'Gm2_v5_Practice_schematic_xm20')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm18')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm18')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm18')
('add pin', u'3', 'to cell', u'Gm2_v5_Practice_schematic_xm18')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xc0')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xc0')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xc1')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xc1')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm0')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm0')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm0')
('add pin', u'3', 'to cell', u'Gm2_v5_Practice_schematic_xm0')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm24')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm24')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm24')
('add pin', u'3', 'to cell', u'Gm2_v5_Practice_schematic_xm24')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm23')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm23')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm23')
('add pin', u'3', 'to cell', u'Gm2_v5_Practice_schematic_xm23')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm14')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm14')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm14')
('add pin', u'3', 'to cell', u'Gm2_v5_Practice_schematic_xm14')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xr11')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xr11')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xr12')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xr12')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm22')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm22')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm22')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm12')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm12')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm12')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm11')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm11')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm11')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm13')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm13')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm13')
('add pin', u'0', 'to cell', u'Gm2_v5_Practice_schematic_xm21')
('add pin', u'1', 'to cell', u'Gm2_v5_Practice_schematic_xm21')
('add pin', u'2', 'to cell', u'Gm2_v5_Practice_schematic_xm21')
computeAndAddPowerCurrentFlow
('allocate signal path', 0)
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm20', u'2')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm20', u'0')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm18', u'2')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm18', u'0')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm23', u'2')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm23', u'0')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm13', u'0')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm13', u'2')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 0, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 1)
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm20', u'2')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm20', u'0')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm18', u'2')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm18', u'0')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm21', u'0')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm21', u'2')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 1, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 2)
('add pin to signal path', 2, u'Gm2_v5_Practice_schematic_xm20', u'2')
('add pin to signal path', 2, u'Gm2_v5_Practice_schematic_xm20', u'0')
('add pin to signal path', 2, u'Gm2_v5_Practice_schematic_xm23', u'2')
('add pin to signal path', 2, u'Gm2_v5_Practice_schematic_xm23', u'0')
('add pin to signal path', 2, u'Gm2_v5_Practice_schematic_xm13', u'0')
('add pin to signal path', 2, u'Gm2_v5_Practice_schematic_xm13', u'2')
('add pin to signal path', 2, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 2, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 3)
('add pin to signal path', 3, u'Gm2_v5_Practice_schematic_xm20', u'2')
('add pin to signal path', 3, u'Gm2_v5_Practice_schematic_xm20', u'0')
('add pin to signal path', 3, u'Gm2_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 3, u'Gm2_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 3, u'Gm2_v5_Practice_schematic_xm21', u'0')
('add pin to signal path', 3, u'Gm2_v5_Practice_schematic_xm21', u'2')
('add pin to signal path', 3, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 3, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 4)
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm18', u'2')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm18', u'0')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm20', u'2')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm20', u'0')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm23', u'2')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm23', u'0')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm13', u'0')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm13', u'2')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 4, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 5)
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm18', u'2')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm18', u'0')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm20', u'2')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm20', u'0')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm21', u'0')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm21', u'2')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 5, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 6)
('add pin to signal path', 6, u'Gm2_v5_Practice_schematic_xm18', u'2')
('add pin to signal path', 6, u'Gm2_v5_Practice_schematic_xm18', u'0')
('add pin to signal path', 6, u'Gm2_v5_Practice_schematic_xm23', u'2')
('add pin to signal path', 6, u'Gm2_v5_Practice_schematic_xm23', u'0')
('add pin to signal path', 6, u'Gm2_v5_Practice_schematic_xm13', u'0')
('add pin to signal path', 6, u'Gm2_v5_Practice_schematic_xm13', u'2')
('add pin to signal path', 6, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 6, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 7)
('add pin to signal path', 7, u'Gm2_v5_Practice_schematic_xm18', u'2')
('add pin to signal path', 7, u'Gm2_v5_Practice_schematic_xm18', u'0')
('add pin to signal path', 7, u'Gm2_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 7, u'Gm2_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 7, u'Gm2_v5_Practice_schematic_xm21', u'0')
('add pin to signal path', 7, u'Gm2_v5_Practice_schematic_xm21', u'2')
('add pin to signal path', 7, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 7, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 8)
('add pin to signal path', 8, u'Gm2_v5_Practice_schematic_xm23', u'2')
('add pin to signal path', 8, u'Gm2_v5_Practice_schematic_xm23', u'0')
('add pin to signal path', 8, u'Gm2_v5_Practice_schematic_xm13', u'0')
('add pin to signal path', 8, u'Gm2_v5_Practice_schematic_xm13', u'2')
('add pin to signal path', 8, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 8, u'Gm2_v5_Practice_schematic_xm22', u'2')
('allocate signal path', 9)
('add pin to signal path', 9, u'Gm2_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 9, u'Gm2_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 9, u'Gm2_v5_Practice_schematic_xm21', u'0')
('add pin to signal path', 9, u'Gm2_v5_Practice_schematic_xm21', u'2')
('add pin to signal path', 9, u'Gm2_v5_Practice_schematic_xm22', u'0')
('add pin to signal path', 9, u'Gm2_v5_Practice_schematic_xm22', u'2')
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:33     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:33     1 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:33     1 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 3195 us 
[INF 2020-05-13 15:23:33     1 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:33     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:33     1 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:33     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:33     1 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:33     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:33     1 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:33     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:33     1 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 4249 us 
[INF 2020-05-13 15:23:33     1 sec]  IdeaPlaceEx:: HPWL 7000 
[INF 2020-05-13 15:23:33     1 sec]  IdeaPlaceEx:: HPWL with virtual pin: 7000 
[INF 2020-05-13 15:23:33     1 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:33     1 sec]  Align to grid 200 
[INF 2020-05-13 15:23:33     1 sec]  Alignment symaxis 21500 
[INF 2020-05-13 15:23:33     1 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 0 Gm2_v5_Practice_schematic_xm20 center 24700 27500
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 1 Gm2_v5_Practice_schematic_xm18 center 18300 27500
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 2 Gm2_v5_Practice_schematic_xc0 center 25300 18000
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 3 Gm2_v5_Practice_schematic_xc1 center 17700 18000
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 4 Gm2_v5_Practice_schematic_xm0 center 23100 23600
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 5 Gm2_v5_Practice_schematic_xm24 center 19900 23600
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 6 Gm2_v5_Practice_schematic_xm23 center 23500 20700
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 7 Gm2_v5_Practice_schematic_xm14 center 19500 20700
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 8 Gm2_v5_Practice_schematic_xr11 center 13700 13200
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 9 Gm2_v5_Practice_schematic_xr12 center 29300 13200
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 10 Gm2_v5_Practice_schematic_xm22 center 21500 13900
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 11 Gm2_v5_Practice_schematic_xm12 center 23300 11200
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 12 Gm2_v5_Practice_schematic_xm11 center 19700 11200
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 13 Gm2_v5_Practice_schematic_xm13 center 23500 15800
 [INF 2020-05-13 15:23:33     1 sec]  IDEAPLACE::align cell 14 Gm2_v5_Practice_schematic_xm21 center 19500 15800
 Academic license - for non-commercial use only
 io pin assignment time 3213 us 
[INF 2020-05-13 15:23:33     6 sec]  Flow::GdsWriter:: Write circuit Gm2_v5_Practice_schematic layout to ./Gm2_v5_Practice_schematic.place.gds 
[WRN 2020-05-13 15:23:34     2 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:34     2 sec]  mark net vss as vss 
[WRN 2020-05-13 15:23:34     2 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:34     2 sec]  Symnet parser: reading ./Gm1_v5_Practice_schematic.symnet...
[INF 2020-05-13 15:23:34     2 sec]  ParserSymNet:: left net vom 4
, right net vop 5
[INF 2020-05-13 15:23:34     2 sec]  ParserSymNet:: left net vip 3
, right net vim 2
[INF 2020-05-13 15:23:34     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:34     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 1 Gm1_v5_Practice_schematic_xm2  pin 3 0-> cell 4 Gm1_v5_Practice_schematic_xm11 pin 17 2 -> cell 4 Gm1_v5_Practice_schematic_xm11 pin 15 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 -> pin 40  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 4 Gm1_v5_Practice_schematic_xm11  pin 15 0-> cell 12 Gm1_v5_Practice_schematic_xm27 pin 40 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 pin 42 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 1 Gm1_v5_Practice_schematic_xm2  pin 3 0-> cell 6 Gm1_v5_Practice_schematic_xm14 pin 25 2 -> cell 6 Gm1_v5_Practice_schematic_xm14 pin 23 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 -> pin 37  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 6 Gm1_v5_Practice_schematic_xm14  pin 23 0-> cell 11 Gm1_v5_Practice_schematic_xm26 pin 37 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 pin 39 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 2 Gm1_v5_Practice_schematic_xm4  pin 7 0-> cell 4 Gm1_v5_Practice_schematic_xm11 pin 17 2 -> cell 4 Gm1_v5_Practice_schematic_xm11 pin 15 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 -> pin 40  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 4 Gm1_v5_Practice_schematic_xm11  pin 15 0-> cell 12 Gm1_v5_Practice_schematic_xm27 pin 40 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 pin 42 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 2 Gm1_v5_Practice_schematic_xm4  pin 7 0-> cell 6 Gm1_v5_Practice_schematic_xm14 pin 25 2 -> cell 6 Gm1_v5_Practice_schematic_xm14 pin 23 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 -> pin 37  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 6 Gm1_v5_Practice_schematic_xm14  pin 23 0-> cell 11 Gm1_v5_Practice_schematic_xm26 pin 37 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 pin 39 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 4 Gm1_v5_Practice_schematic_xm11  pin 15 0-> cell 12 Gm1_v5_Practice_schematic_xm27 pin 40 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 pin 42 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 6 Gm1_v5_Practice_schematic_xm14  pin 23 0-> cell 11 Gm1_v5_Practice_schematic_xm26 pin 37 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 pin 39 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 2 Gm1_v5_Practice_schematic_xm4  pin 7 0-> cell 4 Gm1_v5_Practice_schematic_xm11 pin 17 2 -> cell 4 Gm1_v5_Practice_schematic_xm11 pin 15 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 -> pin 40  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 4 Gm1_v5_Practice_schematic_xm11  pin 15 0-> cell 12 Gm1_v5_Practice_schematic_xm27 pin 40 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 pin 42 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 2 Gm1_v5_Practice_schematic_xm4  pin 7 0-> cell 6 Gm1_v5_Practice_schematic_xm14 pin 25 2 -> cell 6 Gm1_v5_Practice_schematic_xm14 pin 23 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 -> pin 37  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 6 Gm1_v5_Practice_schematic_xm14  pin 23 0-> cell 11 Gm1_v5_Practice_schematic_xm26 pin 37 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 pin 39 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 1 Gm1_v5_Practice_schematic_xm2  pin 3 0-> cell 4 Gm1_v5_Practice_schematic_xm11 pin 17 2 -> cell 4 Gm1_v5_Practice_schematic_xm11 pin 15 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 -> pin 40  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 4 Gm1_v5_Practice_schematic_xm11  pin 15 0-> cell 12 Gm1_v5_Practice_schematic_xm27 pin 40 0 -> cell 12 Gm1_v5_Practice_schematic_xm27 pin 42 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 1 Gm1_v5_Practice_schematic_xm2  pin 3 0-> cell 6 Gm1_v5_Practice_schematic_xm14 pin 25 2 -> cell 6 Gm1_v5_Practice_schematic_xm14 pin 23 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 -> pin 37  0
[DBG 2020-05-13 15:23:34     0 sec]  SigPathMgr: add cell 6 Gm1_v5_Practice_schematic_xm14  pin 23 0-> cell 11 Gm1_v5_Practice_schematic_xm26 pin 37 0 -> cell 11 Gm1_v5_Practice_schematic_xm26 pin 39 2 -> cell 0 Gm1_v5_Practice_schematic_xm8 -> pin 0  0
[DBG 2020-05-13 15:23:34     0 sec]  start current flow 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm2 -> cell Gm1_v5_Practice_schematic_xm11 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm27 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm2 -> cell Gm1_v5_Practice_schematic_xm14 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm26 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm4 -> cell Gm1_v5_Practice_schematic_xm11 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm27 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm4 -> cell Gm1_v5_Practice_schematic_xm14 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm26 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm27 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm26 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm4 -> cell Gm1_v5_Practice_schematic_xm11 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm27 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm4 -> cell Gm1_v5_Practice_schematic_xm14 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm26 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm2 -> cell Gm1_v5_Practice_schematic_xm11 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm11 -> cell Gm1_v5_Practice_schematic_xm27 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm27 -> cell Gm1_v5_Practice_schematic_xm8 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm2 -> cell Gm1_v5_Practice_schematic_xm14 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm14 -> cell Gm1_v5_Practice_schematic_xm26 
[DBG 2020-05-13 15:23:34     0 sec]  NlpGPlacer:: add current cell Gm1_v5_Practice_schematic_xm26 -> cell Gm1_v5_Practice_schematic_xm8 
[INF 2020-05-13 15:23:34     0 sec]  Ideaplace global placement:: number of operators 151, hpwl 7 ovl 105 oob 0 asym 1 sigFlow 0 power 2 crf 
[DBG 2020-05-13 15:23:34     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 0.000000 
[DBG 2020-05-13 15:23:34     0 sec]  init mult: ovl 0.104603 oob 0.104603 asym 1.056681 current flow 2.717180
[DBG 2020-05-13 15:23:34     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:34     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:34     0 sec]  iter 0 
[DBG 2020-05-13 15:23:34     0 sec]  adam: 95.268261 hpwl 64.895724 cos 17.578614 ovl 12.749247 oob 0.000000 asym 0.044676 
[DBG 2020-05-13 15:23:34     0 sec]  gradient norm 0.531803 
[DBG 2020-05-13 15:23:34     0 sec]  converge at iter 2223 
[DBG 2020-05-13 15:23:34     0 sec]  update mult: raw ovl 121.881810 oob 0.000000 asym 0.042279 cos 0.585954 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:34     0 sec]  update mult:  before ovl 0.104603 oob 0.104603 asym 1.056681 current flow 2.717180 
[DBG 2020-05-13 15:23:34     0 sec]  update mult: afterafter  ovl 1.323421 oob 0.104603 asym 1.057104 cos 30.005860 current flow 2.717180 
[DBG 2020-05-13 15:23:34     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:34     0 sec]  update alpha:: new alpha idx 1 0.403840 
[DBG 2020-05-13 15:23:34     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:34     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:34     0 sec]  obj 243.820037 hpwl 64.895724 ovl 161.301004 oob 0.000000 asym 0.044694 cos 17.578614 
[DBG 2020-05-13 15:23:34     0 sec]  iter 1 
[DBG 2020-05-13 15:23:34     0 sec]  adam: 104.266982 hpwl 77.333564 cos 20.385343 ovl 6.431649 oob 0.000000 asym 0.116425 
[DBG 2020-05-13 15:23:34     0 sec]  gradient norm 1.721551 
[DBG 2020-05-13 15:23:34     0 sec]  converge at iter 1037 
[DBG 2020-05-13 15:23:34     0 sec]  update mult: raw ovl 4.859865 oob 0.000000 asym 0.110136 cos 20.385343 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:34     0 sec]  update mult:  before ovl 1.323421 oob 0.104603 asym 1.057104 current flow 2.717180 
[DBG 2020-05-13 15:23:34     0 sec]  update mult: afterafter  ovl 1.372020 oob 0.104603 asym 1.058205 cos 1.203853 current flow 2.717180 
[DBG 2020-05-13 15:23:34     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.980000 power wl 0.087547 
[DBG 2020-05-13 15:23:34     0 sec]  update alpha:: new alpha idx 1 0.401869 
[DBG 2020-05-13 15:23:34     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:34     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:34     0 sec]  obj 104.503286 hpwl 77.333564 ovl 6.667832 oob 0.000000 asym 0.116546 cos 20.385343 
[DBG 2020-05-13 15:23:34     0 sec]  ovl area 0.681510 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.093554 target 0.500000 
[INF 2020-05-13 15:23:34     0 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:34     0 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'Gm2_v5_Practice_schematic')
('origin, ', 6900, 10200)
('pin shape', 28700, 18935, 29700, 19065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 28700, 6935, 29700, 7065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 6935, 500, 7065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 4935, 500, 5065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 28700, 4935, 29700, 5065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'Gm2_v5_Practice_schematic_xm20', 16000, 15800)
Gm2_v5_Practice_schematic_xm20 Gm2_v5_Practice_schematic_xm20 16000 15800 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm18', 9400, 15800)
Gm2_v5_Practice_schematic_xm18 Gm2_v5_Practice_schematic_xm18 9400 15800 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xc0', 15200, 7000)
Gm2_v5_Practice_schematic_xc0 Gm2_v5_Practice_schematic_xc0 15200 7000 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xc1', 7600, 7000)
Gm2_v5_Practice_schematic_xc1 Gm2_v5_Practice_schematic_xc1 7600 7000 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm0', 15800, 13000)
Gm2_v5_Practice_schematic_xm0 Gm2_v5_Practice_schematic_xm0 15800 13000 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm24', 12600, 13000)
Gm2_v5_Practice_schematic_xm24 Gm2_v5_Practice_schematic_xm24 12600 13000 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm23', 15800, 10200)
Gm2_v5_Practice_schematic_xm23 Gm2_v5_Practice_schematic_xm23 15800 10200 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm14', 11800, 10200)
Gm2_v5_Practice_schematic_xm14 Gm2_v5_Practice_schematic_xm14 11800 10200 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xr11', 3200, 200)
Gm2_v5_Practice_schematic_xr11 Gm2_v5_Practice_schematic_xr11 3200 200 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xr12', 18800, 200)
Gm2_v5_Practice_schematic_xr12 Gm2_v5_Practice_schematic_xr12 18800 200 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm22', 13800, 3200)
Gm2_v5_Practice_schematic_xm22 Gm2_v5_Practice_schematic_xm22 13800 3200 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm12', 15200, 0)
Gm2_v5_Practice_schematic_xm12 Gm2_v5_Practice_schematic_xm12 15200 0 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm11', 11600, 0)
Gm2_v5_Practice_schematic_xm11 Gm2_v5_Practice_schematic_xm11 11600 0 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm13', 15800, 5400)
Gm2_v5_Practice_schematic_xm13 Gm2_v5_Practice_schematic_xm13 15800 5400 PLACEMENT
('node ', u'Gm2_v5_Practice_schematic_xm21', 11800, 5400)
Gm2_v5_Practice_schematic_xm21 Gm2_v5_Practice_schematic_xm21 11800 5400 PLACEMENT
Adding GuardRing to Cell
('origin', 6900, 10200)
('addPowerStripe length ', 23280, 30200)
('width', 30600)
('width', 31000)
('fWidth', 31.0)
('width, ', 31.000000000000007, 'height', 1.8, 'vdd offset', -0.9000000000000037, 20.415)
('width, ', 31.000000000000007, 'height', 1.8, 'vss offset', -0.9000000000000037, -3.9)
generated vdd
generated vss




 add vdd 
('metal ', -900, 20415, 30100, 22215, 36)
('pin shape', -900, 20415, 30100, 22215)
('layer ', 6)
('adjust bbox ', 900, -20415, 30100, 22215)




 add vss 
('metal ', -900, -3900, 30100, -2100, 36)
('pin shape', -900, -3900, 30100, -2100)
('layer ', 6)
('adjust bbox ', 900, 3900, 30100, -2100)
('PnR: placement finished ', u'Gm2_v5_Practice_schematic')
('PnR: working on ', u'Gm1_v5_Practice_schematic')
('countNumberOfCells', u'Gm1_v5_Practice_schematic')
('nmos', 5, 'numPmos', 6, 'cap', 2, 'res', 2, 'unset:')
end
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm8')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm8')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm8')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm2')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm2')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm2')
('add pin', u'3', 'to cell', u'Gm1_v5_Practice_schematic_xm2')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm4')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm4')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm4')
('add pin', u'3', 'to cell', u'Gm1_v5_Practice_schematic_xm4')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm12')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm12')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm12')
('add pin', u'3', 'to cell', u'Gm1_v5_Practice_schematic_xm12')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm11')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm11')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm11')
('add pin', u'3', 'to cell', u'Gm1_v5_Practice_schematic_xm11')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm15')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm15')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm15')
('add pin', u'3', 'to cell', u'Gm1_v5_Practice_schematic_xm15')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm14')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm14')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm14')
('add pin', u'3', 'to cell', u'Gm1_v5_Practice_schematic_xm14')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xr12')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xr12')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xr11')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xr11')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm3')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm3')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm3')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm0')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm0')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm0')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm26')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm26')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm26')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xm27')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xm27')
('add pin', u'2', 'to cell', u'Gm1_v5_Practice_schematic_xm27')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xc1')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xc1')
('add pin', u'0', 'to cell', u'Gm1_v5_Practice_schematic_xc0')
('add pin', u'1', 'to cell', u'Gm1_v5_Practice_schematic_xc0')
computeAndAddPowerCurrentFlow
('allocate signal path', 0)
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm2', u'2')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm2', u'0')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm4', u'2')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm4', u'0')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm11', u'2')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm11', u'0')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm27', u'0')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm27', u'2')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 0, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 1)
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm2', u'2')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm2', u'0')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm4', u'2')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm4', u'0')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm26', u'0')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm26', u'2')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 1, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 2)
('add pin to signal path', 2, u'Gm1_v5_Practice_schematic_xm2', u'2')
('add pin to signal path', 2, u'Gm1_v5_Practice_schematic_xm2', u'0')
('add pin to signal path', 2, u'Gm1_v5_Practice_schematic_xm11', u'2')
('add pin to signal path', 2, u'Gm1_v5_Practice_schematic_xm11', u'0')
('add pin to signal path', 2, u'Gm1_v5_Practice_schematic_xm27', u'0')
('add pin to signal path', 2, u'Gm1_v5_Practice_schematic_xm27', u'2')
('add pin to signal path', 2, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 2, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 3)
('add pin to signal path', 3, u'Gm1_v5_Practice_schematic_xm2', u'2')
('add pin to signal path', 3, u'Gm1_v5_Practice_schematic_xm2', u'0')
('add pin to signal path', 3, u'Gm1_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 3, u'Gm1_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 3, u'Gm1_v5_Practice_schematic_xm26', u'0')
('add pin to signal path', 3, u'Gm1_v5_Practice_schematic_xm26', u'2')
('add pin to signal path', 3, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 3, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 4)
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm4', u'2')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm4', u'0')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm2', u'2')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm2', u'0')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm11', u'2')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm11', u'0')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm27', u'0')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm27', u'2')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 4, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 5)
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm4', u'2')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm4', u'0')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm2', u'2')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm2', u'0')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm26', u'0')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm26', u'2')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 5, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 6)
('add pin to signal path', 6, u'Gm1_v5_Practice_schematic_xm4', u'2')
('add pin to signal path', 6, u'Gm1_v5_Practice_schematic_xm4', u'0')
('add pin to signal path', 6, u'Gm1_v5_Practice_schematic_xm11', u'2')
('add pin to signal path', 6, u'Gm1_v5_Practice_schematic_xm11', u'0')
('add pin to signal path', 6, u'Gm1_v5_Practice_schematic_xm27', u'0')
('add pin to signal path', 6, u'Gm1_v5_Practice_schematic_xm27', u'2')
('add pin to signal path', 6, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 6, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 7)
('add pin to signal path', 7, u'Gm1_v5_Practice_schematic_xm4', u'2')
('add pin to signal path', 7, u'Gm1_v5_Practice_schematic_xm4', u'0')
('add pin to signal path', 7, u'Gm1_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 7, u'Gm1_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 7, u'Gm1_v5_Practice_schematic_xm26', u'0')
('add pin to signal path', 7, u'Gm1_v5_Practice_schematic_xm26', u'2')
('add pin to signal path', 7, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 7, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 8)
('add pin to signal path', 8, u'Gm1_v5_Practice_schematic_xm11', u'2')
('add pin to signal path', 8, u'Gm1_v5_Practice_schematic_xm11', u'0')
('add pin to signal path', 8, u'Gm1_v5_Practice_schematic_xm27', u'0')
('add pin to signal path', 8, u'Gm1_v5_Practice_schematic_xm27', u'2')
('add pin to signal path', 8, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 8, u'Gm1_v5_Practice_schematic_xm8', u'2')
('allocate signal path', 9)
('add pin to signal path', 9, u'Gm1_v5_Practice_schematic_xm14', u'2')
('add pin to signal path', 9, u'Gm1_v5_Practice_schematic_xm14', u'0')
('add pin to signal path', 9, u'Gm1_v5_Practice_schematic_xm26', u'0')
('add pin to signal path', 9, u'Gm1_v5_Practice_schematic_xm26', u'2')
('add pin to signal path', 9, u'Gm1_v5_Practice_schematic_xm8', u'0')
('add pin to signal path', 9, u'Gm1_v5_Practice_schematic_xm8', u'2')
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:34     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:34     0 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:34     0 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 2454 us 
[INF 2020-05-13 15:23:34     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:34     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:34     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:34     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:34     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:34     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:34     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:34     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:34     0 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 2987 us 
[INF 2020-05-13 15:23:34     0 sec]  IdeaPlaceEx:: HPWL 24655 
[INF 2020-05-13 15:23:34     0 sec]  IdeaPlaceEx:: HPWL with virtual pin: 24655 
[INF 2020-05-13 15:23:34     0 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:34     0 sec]  Align to grid 200 
[INF 2020-05-13 15:23:34     0 sec]  Alignment symaxis 22900 
[INF 2020-05-13 15:23:34     0 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 0 Gm1_v5_Practice_schematic_xm8 center 22900 10900
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 1 Gm1_v5_Practice_schematic_xm2 center 19900 25000
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 2 Gm1_v5_Practice_schematic_xm4 center 25900 25000
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 3 Gm1_v5_Practice_schematic_xm12 center 24300 21000
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 4 Gm1_v5_Practice_schematic_xm11 center 18300 20800
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 5 Gm1_v5_Practice_schematic_xm15 center 21500 21000
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 6 Gm1_v5_Practice_schematic_xm14 center 27500 20800
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 7 Gm1_v5_Practice_schematic_xr12 center 31900 13200
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 8 Gm1_v5_Practice_schematic_xr11 center 13900 13200
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 9 Gm1_v5_Practice_schematic_xm3 center 25900 11400
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 10 Gm1_v5_Practice_schematic_xm0 center 19900 11400
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 11 Gm1_v5_Practice_schematic_xm26 center 25300 14700
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 12 Gm1_v5_Practice_schematic_xm27 center 20500 14700
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 13 Gm1_v5_Practice_schematic_xc1 center 26700 18000
 [INF 2020-05-13 15:23:34     0 sec]  IDEAPLACE::align cell 14 Gm1_v5_Practice_schematic_xc0 center 19100 18000
 Academic license - for non-commercial use only
 io pin assignment time 2422 us 
[INF 2020-05-13 15:23:34     7 sec]  Flow::GdsWriter:: Write circuit Gm1_v5_Practice_schematic layout to ./Gm1_v5_Practice_schematic.place.gds 
[WRN 2020-05-13 15:23:34     0 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:34     0 sec]  mark net vss as vss 
[WRN 2020-05-13 15:23:34     0 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:34     0 sec]  Symnet parser: reading ./DAC3.symnet...
[INF 2020-05-13 15:23:34     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:34     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:34     0 sec]  start current flow 
[INF 2020-05-13 15:23:34     0 sec]  Ideaplace global placement:: number of operators 15, hpwl 7 ovl 6 oob 0 asym 0 sigFlow 0 power 2 crf 
[DBG 2020-05-13 15:23:34     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 0.000000 
[DBG 2020-05-13 15:23:34     0 sec]  init mult: ovl 0.431799 oob 0.431799 asym 0.431799 current flow 0.431799
[DBG 2020-05-13 15:23:34     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:34     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:34     0 sec]  iter 0 
[DBG 2020-05-13 15:23:35     1 sec]  adam: 52.408448 hpwl 45.970645 cos 0.000000 ovl 6.437803 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:35     1 sec]  gradient norm 0.228445 
[DBG 2020-05-13 15:23:35     1 sec]  converge at iter 2764 
[DBG 2020-05-13 15:23:35     1 sec]  update mult: raw ovl 14.909245 oob 0.000000 asym 0.000000 cos 0.000000 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:35     1 sec]  update mult:  before ovl 0.431799 oob 0.431799 asym 0.431799 current flow 0.431799 
[DBG 2020-05-13 15:23:35     1 sec]  update mult: afterafter  ovl 0.580892 oob 0.431799 asym 0.431799 cos 30.000000 current flow 0.431799 
[DBG 2020-05-13 15:23:35     1 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:35     1 sec]  update alpha:: new alpha idx 1 0.484908 
[DBG 2020-05-13 15:23:35     1 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:35     1 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:35     1 sec]  obj 54.631304 hpwl 45.970645 ovl 8.660659 oob 0.000000 asym 0.000000 cos 0.000000 
[DBG 2020-05-13 15:23:35     1 sec]  iter 1 
[DBG 2020-05-13 15:23:35     1 sec]  adam: 55.713621 hpwl 44.850111 cos 9.137466 ovl 1.726043 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:35     1 sec]  gradient norm 0.118798 
[DBG 2020-05-13 15:23:35     1 sec]  converge at iter 1618 
[DBG 2020-05-13 15:23:35     1 sec]  update mult: raw ovl 2.971368 oob 0.000000 asym 0.000000 cos 9.137466 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:35     1 sec]  update mult:  before ovl 0.580892 oob 0.431799 asym 0.431799 current flow 0.431799 
[DBG 2020-05-13 15:23:35     1 sec]  update mult: afterafter  ovl 0.610606 oob 0.431799 asym 0.431799 cos 1.091375 current flow 0.431799 
[DBG 2020-05-13 15:23:35     1 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.980000 power wl 0.250057 
[DBG 2020-05-13 15:23:35     1 sec]  update alpha:: new alpha idx 1 0.421648 
[DBG 2020-05-13 15:23:35     1 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:35     1 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:35     1 sec]  obj 55.801911 hpwl 44.850111 ovl 1.814334 oob 0.000000 asym 0.000000 cos 9.137466 
[DBG 2020-05-13 15:23:35     1 sec]  ovl area 0.576959 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.000000 target 0.500000 
[INF 2020-05-13 15:23:35     1 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:35     1 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'Gm1_v5_Practice_schematic')
('origin, ', 7100, 10200)
('pin shape', 31100, 10935, 32100, 11065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 31100, 4935, 32100, 5065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 4935, 500, 5065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 2935, 500, 3065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 31100, 2935, 32100, 3065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'Gm1_v5_Practice_schematic_xm8', 15000, 200)
Gm1_v5_Practice_schematic_xm8 Gm1_v5_Practice_schematic_xm8 15000 200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm2', 11000, 13200)
Gm1_v5_Practice_schematic_xm2 Gm1_v5_Practice_schematic_xm2 11000 13200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm4', 17000, 13200)
Gm1_v5_Practice_schematic_xm4 Gm1_v5_Practice_schematic_xm4 17000 13200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm12', 17000, 10400)
Gm1_v5_Practice_schematic_xm12 Gm1_v5_Practice_schematic_xm12 17000 10400 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm11', 10400, 10200)
Gm1_v5_Practice_schematic_xm11 Gm1_v5_Practice_schematic_xm11 10400 10200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm15', 14200, 10400)
Gm1_v5_Practice_schematic_xm15 Gm1_v5_Practice_schematic_xm15 14200 10400 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm14', 19600, 10200)
Gm1_v5_Practice_schematic_xm14 Gm1_v5_Practice_schematic_xm14 19600 10200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xr12', 21200, 200)
Gm1_v5_Practice_schematic_xr12 Gm1_v5_Practice_schematic_xr12 21200 200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xr11', 3200, 200)
Gm1_v5_Practice_schematic_xr11 Gm1_v5_Practice_schematic_xr11 3200 200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm3', 17600, 0)
Gm1_v5_Practice_schematic_xm3 Gm1_v5_Practice_schematic_xm3 17600 0 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm0', 11600, 0)
Gm1_v5_Practice_schematic_xm0 Gm1_v5_Practice_schematic_xm0 11600 0 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm26', 16600, 4200)
Gm1_v5_Practice_schematic_xm26 Gm1_v5_Practice_schematic_xm26 16600 4200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xm27', 11800, 4200)
Gm1_v5_Practice_schematic_xm27 Gm1_v5_Practice_schematic_xm27 11800 4200 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xc1', 16400, 7000)
Gm1_v5_Practice_schematic_xc1 Gm1_v5_Practice_schematic_xc1 16400 7000 PLACEMENT
('node ', u'Gm1_v5_Practice_schematic_xc0', 8800, 7000)
Gm1_v5_Practice_schematic_xc0 Gm1_v5_Practice_schematic_xc0 8800 7000 PLACEMENT
Adding GuardRing to Cell
('origin', 7100, 10200)
('addPowerStripe length ', 25680, 32600)
('width', 33000)
('width', 33400)
('fWidth', 33.4)
('width, ', 33.400000000000006, 'height', 1.8, 'vdd offset', -0.9000000000000037, 18.015)
('width, ', 33.400000000000006, 'height', 1.8, 'vss offset', -0.9000000000000037, -3.9)
generated vdd
generated vss




 add vdd 
('metal ', -900, 18015, 32500, 19815, 36)
('pin shape', -900, 18015, 32500, 19815)
('layer ', 6)
('adjust bbox ', 900, -18015, 32500, 19815)




 add vss 
('metal ', -900, -3900, 32500, -2100, 36)
('pin shape', -900, -3900, 32500, -2100)
('layer ', 6)
('adjust bbox ', 900, 3900, 32500, -2100)
('PnR: placement finished ', u'Gm1_v5_Practice_schematic')
['-200', '-200', '4800', '1600']
-400 -200 4800 1600 BOUNDARY
('PnR: working on ', u'DAC3')
('countNumberOfCells', u'DAC3')
('nmos', 0, 'numPmos', 0, 'cap', 0, 'res', 2, 'unset:')
DFCNQD2BWP_LVT
DFCNQD2BWP_LVT
end
('add pin', u'0', 'to cell', u'DAC3_xr27')
('add pin', u'1', 'to cell', u'DAC3_xr27')
('add pin', u'0', 'to cell', u'DAC3_xr64')
('add pin', u'1', 'to cell', u'DAC3_xr64')
('add pin', u'd', 'to cell', u'xi94')
('add pin', u'cp', 'to cell', u'xi94')
('add pin', u'cdn', 'to cell', u'xi94')
('add pin', u'q', 'to cell', u'xi94')
('add pin', u'vdd', 'to cell', u'xi94')
('add pin', u'vss', 'to cell', u'xi94')
('add pin', u'd', 'to cell', u'xi97')
('add pin', u'cp', 'to cell', u'xi97')
('add pin', u'cdn', 'to cell', u'xi97')
('add pin', u'q', 'to cell', u'xi97')
('add pin', u'vdd', 'to cell', u'xi97')
('add pin', u'vss', 'to cell', u'xi97')
computeAndAddPowerCurrentFlow
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:35     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:35     1 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:35     1 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 10928 us 
[INF 2020-05-13 15:23:35     1 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:35     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:35     1 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:35     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:35     1 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:35     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:35     1 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:35     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:35     1 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 4300 us 
[INF 2020-05-13 15:23:35     1 sec]  IdeaPlaceEx:: HPWL 1443 
[INF 2020-05-13 15:23:35     1 sec]  IdeaPlaceEx:: HPWL with virtual pin: 1443 
[INF 2020-05-13 15:23:35     1 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:35     1 sec]  Align to grid 200 
[INF 2020-05-13 15:23:35     1 sec]  Alignment symaxis 37100 
[INF 2020-05-13 15:23:35     1 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:35     1 sec]  IDEAPLACE::align cell 0 DAC3_xr27 center 53100 23300
 [INF 2020-05-13 15:23:35     1 sec]  IDEAPLACE::align cell 1 DAC3_xr64 center 20100 13100
 [INF 2020-05-13 15:23:35     1 sec]  IDEAPLACE::align cell 2 xi94 center 39100 10900
 [INF 2020-05-13 15:23:35     1 sec]  IDEAPLACE::align cell 3 xi97 center 33300 10900
 Academic license - for non-commercial use only
 io pin assignment time 4091 us 
[INF 2020-05-13 15:23:35     8 sec]  Flow::GdsWriter:: Write circuit DAC3 layout to ./DAC3.place.gds 
[WRN 2020-05-13 15:23:36     2 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:36     2 sec]  mark net vssd as vss 
[WRN 2020-05-13 15:23:36     2 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:36     2 sec]  Symnet parser: reading ./DIGITAL_TOP_flat.symnet...
[INF 2020-05-13 15:23:36     2 sec]  ParserSymNet:: left net interp 10
, right net intern 9
[INF 2020-05-13 15:23:36     2 sec]  ParserSymNet:: left net vo3p 3
, right net vo3m 4
[INF 2020-05-13 15:23:36     2 sec]  ParserSymNet:: left net crossn 12
, right net crossp 11
[INF 2020-05-13 15:23:36     2 sec]  ParserSymNet:: left net outp 6
, right net outm 5
[INF 2020-05-13 15:23:36     2 sec]  ParserSymNet:: left net net071 8
, right net net072 7
[INF 2020-05-13 15:23:36     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:36     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 11 DIGITAL_TOP_flat_xm18  pin 37 0-> cell 8 DIGITAL_TOP_flat_xm5 pin 27 0 -> cell 8 DIGITAL_TOP_flat_xm5 pin 29 2 -> cell 7 DIGITAL_TOP_flat_xm7 -> pin 24  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 13 DIGITAL_TOP_flat_xm2  pin 45 0-> cell 9 DIGITAL_TOP_flat_xm6 pin 30 0 -> cell 9 DIGITAL_TOP_flat_xm6 pin 32 2 -> cell 7 DIGITAL_TOP_flat_xm7 -> pin 24  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 14 DIGITAL_TOP_flat_xm1  pin 49 0-> cell 5 DIGITAL_TOP_flat_xm4 pin 18 0 -> cell 5 DIGITAL_TOP_flat_xm4 pin 20 2 -> cell 8 DIGITAL_TOP_flat_xm5 -> pin 27  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 5 DIGITAL_TOP_flat_xm4  pin 20 2-> cell 8 DIGITAL_TOP_flat_xm5 pin 27 0 -> cell 8 DIGITAL_TOP_flat_xm5 pin 29 2 -> cell 7 DIGITAL_TOP_flat_xm7 -> pin 24  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 15 DIGITAL_TOP_flat_xm12  pin 53 0-> cell 6 DIGITAL_TOP_flat_xm3 pin 21 0 -> cell 6 DIGITAL_TOP_flat_xm3 pin 23 2 -> cell 9 DIGITAL_TOP_flat_xm6 -> pin 30  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 6 DIGITAL_TOP_flat_xm3  pin 23 2-> cell 9 DIGITAL_TOP_flat_xm6 pin 30 0 -> cell 9 DIGITAL_TOP_flat_xm6 pin 32 2 -> cell 7 DIGITAL_TOP_flat_xm7 -> pin 24  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 16 DIGITAL_TOP_flat_xm14  pin 57 0-> cell 5 DIGITAL_TOP_flat_xm4 pin 18 0 -> cell 5 DIGITAL_TOP_flat_xm4 pin 20 2 -> cell 8 DIGITAL_TOP_flat_xm5 -> pin 27  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 5 DIGITAL_TOP_flat_xm4  pin 20 2-> cell 8 DIGITAL_TOP_flat_xm5 pin 27 0 -> cell 8 DIGITAL_TOP_flat_xm5 pin 29 2 -> cell 7 DIGITAL_TOP_flat_xm7 -> pin 24  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 17 DIGITAL_TOP_flat_xm13  pin 61 0-> cell 6 DIGITAL_TOP_flat_xm3 pin 21 0 -> cell 6 DIGITAL_TOP_flat_xm3 pin 23 2 -> cell 9 DIGITAL_TOP_flat_xm6 -> pin 30  0
[DBG 2020-05-13 15:23:36     0 sec]  SigPathMgr: add cell 6 DIGITAL_TOP_flat_xm3  pin 23 2-> cell 9 DIGITAL_TOP_flat_xm6 pin 30 0 -> cell 9 DIGITAL_TOP_flat_xm6 pin 32 2 -> cell 7 DIGITAL_TOP_flat_xm7 -> pin 24  0
[DBG 2020-05-13 15:23:36     0 sec]  start current flow 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm18 -> cell DIGITAL_TOP_flat_xm5 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm5 -> cell DIGITAL_TOP_flat_xm7 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm2 -> cell DIGITAL_TOP_flat_xm6 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm6 -> cell DIGITAL_TOP_flat_xm7 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm1 -> cell DIGITAL_TOP_flat_xm4 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm4 -> cell DIGITAL_TOP_flat_xm5 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm4 -> cell DIGITAL_TOP_flat_xm5 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm5 -> cell DIGITAL_TOP_flat_xm7 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm12 -> cell DIGITAL_TOP_flat_xm3 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm3 -> cell DIGITAL_TOP_flat_xm6 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm3 -> cell DIGITAL_TOP_flat_xm6 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm6 -> cell DIGITAL_TOP_flat_xm7 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm14 -> cell DIGITAL_TOP_flat_xm4 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm4 -> cell DIGITAL_TOP_flat_xm5 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm4 -> cell DIGITAL_TOP_flat_xm5 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm5 -> cell DIGITAL_TOP_flat_xm7 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm13 -> cell DIGITAL_TOP_flat_xm3 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm3 -> cell DIGITAL_TOP_flat_xm6 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm3 -> cell DIGITAL_TOP_flat_xm6 
[DBG 2020-05-13 15:23:36     0 sec]  NlpGPlacer:: add current cell DIGITAL_TOP_flat_xm6 -> cell DIGITAL_TOP_flat_xm7 
[INF 2020-05-13 15:23:36     0 sec]  Ideaplace global placement:: number of operators 188, hpwl 12 ovl 153 oob 0 asym 1 sigFlow 0 power 2 crf 
[DBG 2020-05-13 15:23:36     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 0.000000 
[DBG 2020-05-13 15:23:36     0 sec]  init mult: ovl 0.083880 oob 0.083880 asym 0.808639 current flow 0.673866
[DBG 2020-05-13 15:23:36     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:36     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:36     0 sec]  iter 0 
[DBG 2020-05-13 15:23:36     0 sec]  adam: 114.349170 hpwl 84.986205 cos 5.918828 ovl 23.417490 oob 0.000000 asym 0.026647 
[DBG 2020-05-13 15:23:36     0 sec]  gradient norm 0.263796 
[DBG 2020-05-13 15:23:36     0 sec]  converge at iter 1710 
[DBG 2020-05-13 15:23:36     0 sec]  update mult: raw ovl 279.179354 oob 0.000000 asym 0.032953 cos 0.197294 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:36     0 sec]  update mult:  before ovl 0.083880 oob 0.083880 asym 0.808639 current flow 0.673866 
[DBG 2020-05-13 15:23:36     0 sec]  update mult: afterafter  ovl 2.875673 oob 0.083880 asym 0.808968 cos 30.001973 current flow 0.673866 
[DBG 2020-05-13 15:23:36     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:36     0 sec]  update alpha:: new alpha idx 1 0.402099 
[DBG 2020-05-13 15:23:36     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:36     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:36     0 sec]  obj 893.760298 hpwl 84.986205 ovl 802.828607 oob 0.000000 asym 0.026658 cos 5.918828 
[DBG 2020-05-13 15:23:36     0 sec]  iter 1 
[DBG 2020-05-13 15:23:36     0 sec]  adam: 202.682021 hpwl 110.445007 cos 59.800715 ovl 29.603585 oob 0.000000 asym 2.832714 
[DBG 2020-05-13 15:23:36     0 sec]  gradient norm 5.264620 
[DBG 2020-05-13 15:23:36     0 sec]  converge at iter 610 
[DBG 2020-05-13 15:23:36     0 sec]  update mult: raw ovl 10.294488 oob 0.000000 asym 3.501638 cos 59.800715 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:36     0 sec]  update mult:  before ovl 2.875673 oob 0.083880 asym 0.808968 current flow 0.673866 
[DBG 2020-05-13 15:23:36     0 sec]  update mult: afterafter  ovl 2.978618 oob 0.083880 asym 0.843985 cos 1.598007 current flow 0.673866 
[DBG 2020-05-13 15:23:36     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.980000 power wl 0.027574 
[DBG 2020-05-13 15:23:36     0 sec]  update alpha:: new alpha idx 1 0.402561 
[DBG 2020-05-13 15:23:36     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:36     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:36     0 sec]  obj 203.864401 hpwl 110.445007 ovl 30.663350 oob 0.000000 asym 2.955329 cos 59.800715 
[DBG 2020-05-13 15:23:36     0 sec]  iter 2 
[DBG 2020-05-13 15:23:36     0 sec]  adam: 136.595445 hpwl 118.754899 cos 6.370834 ovl 11.325587 oob 0.000000 asym 0.144126 
[DBG 2020-05-13 15:23:36     0 sec]  gradient norm 0.798779 
[DBG 2020-05-13 15:23:36     0 sec]  converge at iter 1180 
[DBG 2020-05-13 15:23:36     0 sec]  update mult: raw ovl 3.802296 oob 0.000000 asym 0.170768 cos 6.500851 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:36     0 sec]  update mult:  before ovl 2.978618 oob 0.083880 asym 0.843985 current flow 0.673866 
[DBG 2020-05-13 15:23:36     0 sec]  update mult: afterafter  ovl 3.016641 oob 0.083880 asym 0.845693 cos 1.045009 current flow 0.673866 
[DBG 2020-05-13 15:23:36     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.960400 power wl 0.019109 
[DBG 2020-05-13 15:23:36     0 sec]  update alpha:: new alpha idx 1 0.400968 
[DBG 2020-05-13 15:23:36     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:36     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:36     0 sec]  obj 136.740312 hpwl 118.754899 ovl 11.470161 oob 0.000000 asym 0.144418 cos 6.370834 
[DBG 2020-05-13 15:23:36     0 sec]  ovl area 0.157475 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.102503 target 0.500000 
[INF 2020-05-13 15:23:36     0 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:36     0 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'DAC3')
('origin, ', 7300, 9200)
('pin shape', 59100, -65, 60100, 65)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, -65, 500, 65)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 59100, 25935, 60100, 26065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 5935, 500, 6065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 59100, 1935, 60100, 2065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 1935, 500, 2065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'DAC3_xr27', 35400, 1200)
DAC3_xr27 DAC3_xr27 35400 1200 PLACEMENT
('node ', u'DAC3_xr64', 3200, 1200)
DAC3_xr64 DAC3_xr64 3200 1200 PLACEMENT
('node ', u'xi94', 29600, 1000)
xi94 xi94 29600 1000 PLACEMENT
('node ', u'xi97', 23800, 1000)
xi97 xi97 23800 1000 PLACEMENT
Adding GuardRing to Cell
('origin', 7300, 9200)
('addPowerStripe length ', 53280, 60600)
('width', 61000)
('width', 61400)
('fWidth', 61.4)
('width, ', 61.400000000000006, 'height', 1.8, 'vdd offset', -0.7000000000000046, 28.49)
('width, ', 61.400000000000006, 'height', 1.8, 'vss offset', -0.7000000000000046, -2.9)
generated vdd
generated vss




 add vdd 
('metal ', -700, 28490, 60700, 30290, 36)
('pin shape', -700, 28490, 60700, 30290)
('layer ', 6)
('adjust bbox ', 700, -28490, 60700, 30290)




 add vss 
('metal ', -700, -2900, 60700, -1100, 36)
('pin shape', -700, -2900, 60700, -1100)
('layer ', 6)
('adjust bbox ', 700, 2900, 60700, -1100)
('PnR: placement finished ', u'DAC3')
['-200', '-200', '8000', '1600']
-400 -200 8000 1600 BOUNDARY
('PnR: working on ', u'DIGITAL_TOP_flat')
('countNumberOfCells', u'DIGITAL_TOP_flat')
('nmos', 9, 'numPmos', 8, 'cap', 0, 'res', 0, 'unset:')
SR_Latch_LVT
end
('add pin', u'q', 'to cell', u'xi128')
('add pin', u'qb', 'to cell', u'xi128')
('add pin', u'r', 'to cell', u'xi128')
('add pin', u's', 'to cell', u'xi128')
('add pin', u'vdd', 'to cell', u'xi128')
('add pin', u'vss', 'to cell', u'xi128')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm0')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm0')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm0')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm22')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm22')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm22')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm16')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm16')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm16')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm17')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm17')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm17')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm4')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm4')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm4')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm3')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm3')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm3')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm7')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm7')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm7')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm5')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm5')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm5')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm6')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm6')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm6')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm8')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm8')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm8')
('add pin', u'3', 'to cell', u'DIGITAL_TOP_flat_xm8')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm18')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm18')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm18')
('add pin', u'3', 'to cell', u'DIGITAL_TOP_flat_xm18')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm15')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm15')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm15')
('add pin', u'3', 'to cell', u'DIGITAL_TOP_flat_xm15')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm2')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm2')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm2')
('add pin', u'3', 'to cell', u'DIGITAL_TOP_flat_xm2')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm1')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm1')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm1')
('add pin', u'3', 'to cell', u'DIGITAL_TOP_flat_xm1')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm12')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm12')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm12')
('add pin', u'3', 'to cell', u'DIGITAL_TOP_flat_xm12')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm14')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm14')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm14')
('add pin', u'3', 'to cell', u'DIGITAL_TOP_flat_xm14')
('add pin', u'0', 'to cell', u'DIGITAL_TOP_flat_xm13')
('add pin', u'1', 'to cell', u'DIGITAL_TOP_flat_xm13')
('add pin', u'2', 'to cell', u'DIGITAL_TOP_flat_xm13')
('add pin', u'3', 'to cell', u'DIGITAL_TOP_flat_xm13')
computeAndAddPowerCurrentFlow
('allocate signal path', 0)
('add pin to signal path', 0, u'DIGITAL_TOP_flat_xm8', u'2')
('add pin to signal path', 0, u'DIGITAL_TOP_flat_xm8', u'0')
('add pin to signal path', 0, u'DIGITAL_TOP_flat_xm16', u'0')
('add pin to signal path', 0, u'DIGITAL_TOP_flat_xm16', u'2')
('allocate signal path', 1)
('add pin to signal path', 1, u'DIGITAL_TOP_flat_xm18', u'2')
('add pin to signal path', 1, u'DIGITAL_TOP_flat_xm18', u'0')
('add pin to signal path', 1, u'DIGITAL_TOP_flat_xm5', u'0')
('add pin to signal path', 1, u'DIGITAL_TOP_flat_xm5', u'2')
('add pin to signal path', 1, u'DIGITAL_TOP_flat_xm7', u'0')
('add pin to signal path', 1, u'DIGITAL_TOP_flat_xm7', u'2')
('allocate signal path', 2)
('add pin to signal path', 2, u'DIGITAL_TOP_flat_xm15', u'2')
('add pin to signal path', 2, u'DIGITAL_TOP_flat_xm15', u'0')
('add pin to signal path', 2, u'DIGITAL_TOP_flat_xm17', u'0')
('add pin to signal path', 2, u'DIGITAL_TOP_flat_xm17', u'2')
('allocate signal path', 3)
('add pin to signal path', 3, u'DIGITAL_TOP_flat_xm2', u'2')
('add pin to signal path', 3, u'DIGITAL_TOP_flat_xm2', u'0')
('add pin to signal path', 3, u'DIGITAL_TOP_flat_xm6', u'0')
('add pin to signal path', 3, u'DIGITAL_TOP_flat_xm6', u'2')
('add pin to signal path', 3, u'DIGITAL_TOP_flat_xm7', u'0')
('add pin to signal path', 3, u'DIGITAL_TOP_flat_xm7', u'2')
('allocate signal path', 4)
('add pin to signal path', 4, u'DIGITAL_TOP_flat_xm1', u'2')
('add pin to signal path', 4, u'DIGITAL_TOP_flat_xm1', u'0')
('add pin to signal path', 4, u'DIGITAL_TOP_flat_xm4', u'0')
('add pin to signal path', 4, u'DIGITAL_TOP_flat_xm4', u'2')
('add pin to signal path', 4, u'DIGITAL_TOP_flat_xm5', u'0')
('add pin to signal path', 4, u'DIGITAL_TOP_flat_xm5', u'2')
('add pin to signal path', 4, u'DIGITAL_TOP_flat_xm7', u'0')
('add pin to signal path', 4, u'DIGITAL_TOP_flat_xm7', u'2')
('allocate signal path', 5)
('add pin to signal path', 5, u'DIGITAL_TOP_flat_xm12', u'2')
('add pin to signal path', 5, u'DIGITAL_TOP_flat_xm12', u'0')
('add pin to signal path', 5, u'DIGITAL_TOP_flat_xm3', u'0')
('add pin to signal path', 5, u'DIGITAL_TOP_flat_xm3', u'2')
('add pin to signal path', 5, u'DIGITAL_TOP_flat_xm6', u'0')
('add pin to signal path', 5, u'DIGITAL_TOP_flat_xm6', u'2')
('add pin to signal path', 5, u'DIGITAL_TOP_flat_xm7', u'0')
('add pin to signal path', 5, u'DIGITAL_TOP_flat_xm7', u'2')
('allocate signal path', 6)
('add pin to signal path', 6, u'DIGITAL_TOP_flat_xm14', u'2')
('add pin to signal path', 6, u'DIGITAL_TOP_flat_xm14', u'0')
('add pin to signal path', 6, u'DIGITAL_TOP_flat_xm4', u'0')
('add pin to signal path', 6, u'DIGITAL_TOP_flat_xm4', u'2')
('add pin to signal path', 6, u'DIGITAL_TOP_flat_xm5', u'0')
('add pin to signal path', 6, u'DIGITAL_TOP_flat_xm5', u'2')
('add pin to signal path', 6, u'DIGITAL_TOP_flat_xm7', u'0')
('add pin to signal path', 6, u'DIGITAL_TOP_flat_xm7', u'2')
('allocate signal path', 7)
('add pin to signal path', 7, u'DIGITAL_TOP_flat_xm13', u'2')
('add pin to signal path', 7, u'DIGITAL_TOP_flat_xm13', u'0')
('add pin to signal path', 7, u'DIGITAL_TOP_flat_xm3', u'0')
('add pin to signal path', 7, u'DIGITAL_TOP_flat_xm3', u'2')
('add pin to signal path', 7, u'DIGITAL_TOP_flat_xm6', u'0')
('add pin to signal path', 7, u'DIGITAL_TOP_flat_xm6', u'2')
('add pin to signal path', 7, u'DIGITAL_TOP_flat_xm7', u'0')
('add pin to signal path', 7, u'DIGITAL_TOP_flat_xm7', u'2')
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:36     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:36     0 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:36     0 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 3701 us 
[INF 2020-05-13 15:23:36     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:36     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:36     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:36     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:36     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:36     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:36     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:36     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:36     0 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 2887 us 
[INF 2020-05-13 15:23:36     0 sec]  IdeaPlaceEx:: HPWL 12000 
[INF 2020-05-13 15:23:36     0 sec]  IdeaPlaceEx:: HPWL with virtual pin: 12000 
[INF 2020-05-13 15:23:36     0 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:36     0 sec]  Align to grid 200 
[INF 2020-05-13 15:23:36     0 sec]  Alignment symaxis 17300 
[INF 2020-05-13 15:23:36     0 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 0 xi128 center 17300 10700
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 1 DIGITAL_TOP_flat_xm0 center 11700 10800
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 2 DIGITAL_TOP_flat_xm22 center 22900 10800
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 3 DIGITAL_TOP_flat_xm16 center 18500 13300
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 4 DIGITAL_TOP_flat_xm17 center 16100 13300
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 5 DIGITAL_TOP_flat_xm4 center 15300 17900
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 6 DIGITAL_TOP_flat_xm3 center 19300 17900
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 7 DIGITAL_TOP_flat_xm7 center 17300 16100
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 8 DIGITAL_TOP_flat_xm5 center 11900 16000
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 9 DIGITAL_TOP_flat_xm6 center 22700 16000
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 10 DIGITAL_TOP_flat_xm8 center 21300 13300
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 11 DIGITAL_TOP_flat_xm18 center 11300 18700
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 12 DIGITAL_TOP_flat_xm15 center 13300 13300
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 13 DIGITAL_TOP_flat_xm2 center 23300 18700
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 14 DIGITAL_TOP_flat_xm1 center 11300 21700
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 15 DIGITAL_TOP_flat_xm12 center 23300 21700
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 16 DIGITAL_TOP_flat_xm14 center 19500 20300
 [INF 2020-05-13 15:23:36     0 sec]  IDEAPLACE::align cell 17 DIGITAL_TOP_flat_xm13 center 15100 20300
 Academic license - for non-commercial use only
 io pin assignment time 2097 us 
[INF 2020-05-13 15:23:36     9 sec]  Flow::GdsWriter:: Write circuit DIGITAL_TOP_flat layout to ./DIGITAL_TOP_flat.place.gds 
[WRN 2020-05-13 15:23:39     3 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[WRN 2020-05-13 15:23:39     3 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:39     3 sec]  Symnet parser: reading ./CAP1.symnet...
[INF 2020-05-13 15:23:39     3 sec]  ParserSymNet:: left net vo1p 0
, right net vo1m 1
[INF 2020-05-13 15:23:39     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:39     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:39     0 sec]  start current flow 
[INF 2020-05-13 15:23:39     0 sec]  Ideaplace global placement:: number of operators 9, hpwl 2 ovl 6 oob 0 asym 1 sigFlow 0 power 0 crf 
[DBG 2020-05-13 15:23:39     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 30.000000 
[DBG 2020-05-13 15:23:39     0 sec]  init mult: ovl 0.094664 oob 0.094664 asym 0.504435 current flow 0.094664
[DBG 2020-05-13 15:23:39     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:39     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:39     0 sec]  iter 0 
[DBG 2020-05-13 15:23:39     0 sec]  adam: 26.138687 hpwl 18.197543 cos 0.000000 ovl 7.941041 oob 0.000000 asym 0.000102 
[DBG 2020-05-13 15:23:39     0 sec]  gradient norm 0.063229 
[DBG 2020-05-13 15:23:39     0 sec]  converge at iter 1650 
[DBG 2020-05-13 15:23:39     0 sec]  update mult: raw ovl 83.886482 oob 0.000000 asym 0.000203 cos 0.000000 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:39     0 sec]  update mult:  before ovl 0.094664 oob 0.094664 asym 0.504435 current flow 0.094664 
[DBG 2020-05-13 15:23:39     0 sec]  update mult: afterafter  ovl 0.933529 oob 0.094664 asym 0.504437 cos 30.000000 current flow 0.094664 
[DBG 2020-05-13 15:23:39     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:39     0 sec]  update alpha:: new alpha idx 1 0.411466 
[DBG 2020-05-13 15:23:39     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:39     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:39     0 sec]  obj 96.508105 hpwl 18.197543 ovl 78.310460 oob 0.000000 asym 0.000102 cos 0.000000 
[DBG 2020-05-13 15:23:39     0 sec]  iter 1 
[DBG 2020-05-13 15:23:39     0 sec]  adam: 32.883458 hpwl 30.689341 cos 0.000000 ovl 2.193545 oob 0.000000 asym 0.000571 
[DBG 2020-05-13 15:23:39     0 sec]  gradient norm 1.707888 
[DBG 2020-05-13 15:23:39     0 sec]  converge at iter 823 
[DBG 2020-05-13 15:23:39     0 sec]  update mult: raw ovl 2.349735 oob 0.000000 asym 0.001132 cos 0.000000 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:39     0 sec]  update mult:  before ovl 0.933529 oob 0.094664 asym 0.504437 current flow 0.094664 
[DBG 2020-05-13 15:23:39     0 sec]  update mult: afterafter  ovl 0.957026 oob 0.094664 asym 0.504449 cos 1.000000 current flow 0.094664 
[DBG 2020-05-13 15:23:39     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.980000 power wl 0.980000 
[DBG 2020-05-13 15:23:39     0 sec]  update alpha:: new alpha idx 1 0.403089 
[DBG 2020-05-13 15:23:39     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:39     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:39     0 sec]  obj 32.938670 hpwl 30.689341 ovl 2.248758 oob 0.000000 asym 0.000571 cos 0.000000 
[DBG 2020-05-13 15:23:39     0 sec]  ovl area 0.000000 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.029468 target 0.500000 
[INF 2020-05-13 15:23:39     0 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:39     0 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'DIGITAL_TOP_flat')
('origin, ', 7100, 10000)
('pin shape', 19900, 9135, 20900, 9265)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 7135, 500, 7265)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 19900, 7135, 20900, 7265)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 19900, 1135, 20900, 1265)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 1135, 500, 1265)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'xi128', 6400, 0)
xi128 xi128 6400 0 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm0', 4000, 200)
DIGITAL_TOP_flat_xm0 DIGITAL_TOP_flat_xm0 4000 200 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm22', 15200, 200)
DIGITAL_TOP_flat_xm22 DIGITAL_TOP_flat_xm22 15200 200 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm16', 11000, 3000)
DIGITAL_TOP_flat_xm16 DIGITAL_TOP_flat_xm16 11000 3000 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm17', 8600, 3000)
DIGITAL_TOP_flat_xm17 DIGITAL_TOP_flat_xm17 8600 3000 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm4', 7800, 7600)
DIGITAL_TOP_flat_xm4 DIGITAL_TOP_flat_xm4 7800 7600 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm3', 11800, 7600)
DIGITAL_TOP_flat_xm3 DIGITAL_TOP_flat_xm3 11800 7600 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm7', 8600, 5800)
DIGITAL_TOP_flat_xm7 DIGITAL_TOP_flat_xm7 8600 5800 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm5', 3200, 5400)
DIGITAL_TOP_flat_xm5 DIGITAL_TOP_flat_xm5 3200 5400 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm6', 14000, 5400)
DIGITAL_TOP_flat_xm6 DIGITAL_TOP_flat_xm6 14000 5400 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm8', 13800, 3000)
DIGITAL_TOP_flat_xm8 DIGITAL_TOP_flat_xm8 13800 3000 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm18', 3800, 8400)
DIGITAL_TOP_flat_xm18 DIGITAL_TOP_flat_xm18 3800 8400 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm15', 5800, 3000)
DIGITAL_TOP_flat_xm15 DIGITAL_TOP_flat_xm15 5800 3000 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm2', 15800, 8400)
DIGITAL_TOP_flat_xm2 DIGITAL_TOP_flat_xm2 15800 8400 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm1', 3800, 11400)
DIGITAL_TOP_flat_xm1 DIGITAL_TOP_flat_xm1 3800 11400 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm12', 15800, 11400)
DIGITAL_TOP_flat_xm12 DIGITAL_TOP_flat_xm12 15800 11400 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm14', 11600, 10000)
DIGITAL_TOP_flat_xm14 DIGITAL_TOP_flat_xm14 11600 10000 PLACEMENT
('node ', u'DIGITAL_TOP_flat_xm13', 7200, 10000)
DIGITAL_TOP_flat_xm13 DIGITAL_TOP_flat_xm13 7200 10000 PLACEMENT
Adding GuardRing to Cell
('origin', 7100, 10000)
('addPowerStripe length ', 14460, 21400)
('width', 21800)
('width', 22200)
('fWidth', 22.2)
('width, ', 22.200000000000006, 'height', 1.8, 'vdd offset', -0.9000000000000037, 13.815)
('width, ', 22.200000000000006, 'height', 1.8, 'vss offset', -0.9000000000000037, -3.5)
generated vdd
generated vss




 add vss 
('metal ', -900, -3500, 21300, -1700, 36)
('pin shape', -900, -3500, 21300, -1700)
('layer ', 6)
('adjust bbox ', 900, 3500, 21300, -1700)




 add vdd 
('metal ', -900, 13815, 21300, 15615, 36)
('pin shape', -900, 13815, 21300, 15615)
('layer ', 6)
('adjust bbox ', 900, -13815, 21300, 15615)
('PnR: placement finished ', u'DIGITAL_TOP_flat')
('PnR: working on ', u'CAP1')
('countNumberOfCells', u'CAP1')
('nmos', 0, 'numPmos', 0, 'cap', 4, 'res', 0, 'unset:')
end
('add pin', u'0', 'to cell', u'CAP1_xc1_3_')
('add pin', u'1', 'to cell', u'CAP1_xc1_3_')
('add pin', u'0', 'to cell', u'CAP1_xc1_2_')
('add pin', u'1', 'to cell', u'CAP1_xc1_2_')
('add pin', u'0', 'to cell', u'CAP1_xc1_1_')
('add pin', u'1', 'to cell', u'CAP1_xc1_1_')
('add pin', u'0', 'to cell', u'CAP1_xc1_0_')
('add pin', u'1', 'to cell', u'CAP1_xc1_0_')
computeAndAddPowerCurrentFlow
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:39     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:39     0 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:39     0 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 2060 us 
[INF 2020-05-13 15:23:39     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:39     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:39     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:39     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:39     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:39     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:39     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:39     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:39     0 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 1845 us 
[INF 2020-05-13 15:23:39     0 sec]  IdeaPlaceEx:: HPWL 74800 
[INF 2020-05-13 15:23:39     0 sec]  IdeaPlaceEx:: HPWL with virtual pin: 96200 
[INF 2020-05-13 15:23:39     0 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:39     0 sec]  Align to grid 200 
[INF 2020-05-13 15:23:39     0 sec]  Alignment symaxis 46900 
[INF 2020-05-13 15:23:39     0 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:39     0 sec]  IDEAPLACE::align cell 0 CAP1_xc1_3_ center 28100 65700
 [INF 2020-05-13 15:23:39     0 sec]  IDEAPLACE::align cell 1 CAP1_xc1_2_ center 28100 28300
 [INF 2020-05-13 15:23:39     0 sec]  IDEAPLACE::align cell 2 CAP1_xc1_1_ center 65700 28300
 [INF 2020-05-13 15:23:39     0 sec]  IDEAPLACE::align cell 3 CAP1_xc1_0_ center 65700 65700
 Academic license - for non-commercial use only
 io pin assignment time 1867 us 
[INF 2020-05-13 15:23:39    12 sec]  Flow::GdsWriter:: Write circuit CAP1 layout to ./CAP1.place.gds 
[WRN 2020-05-13 15:23:40     1 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:40     1 sec]  mark net vss as vss 
[WRN 2020-05-13 15:23:40     1 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:40     1 sec]  Symnet parser: reading ./CAP2_RES2.symnet...
[INF 2020-05-13 15:23:40     1 sec]  ParserSymNet:: left net vo2p 1
, right net vo2m 0
[INF 2020-05-13 15:23:40     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:40     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:40     0 sec]  start current flow 
[INF 2020-05-13 15:23:40     0 sec]  Ideaplace global placement:: number of operators 9, hpwl 4 ovl 3 oob 0 asym 1 sigFlow 0 power 1 crf 
[DBG 2020-05-13 15:23:40     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 30.000000 
[DBG 2020-05-13 15:23:40     0 sec]  init mult: ovl 0.727616 oob 0.727616 asym 3.792440 current flow 0.727616
[DBG 2020-05-13 15:23:40     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:40     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:40     0 sec]  iter 0 
[DBG 2020-05-13 15:23:40     0 sec]  adam: 30.536955 hpwl 23.837483 cos 0.000000 ovl 6.697866 oob 0.000000 asym 0.001606 
[DBG 2020-05-13 15:23:40     0 sec]  gradient norm 0.385980 
[DBG 2020-05-13 15:23:40     0 sec]  converge at iter 2386 
[DBG 2020-05-13 15:23:40     0 sec]  update mult: raw ovl 9.205222 oob 0.000000 asym 0.000424 cos 0.000000 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:40     0 sec]  update mult:  before ovl 0.727616 oob 0.727616 asym 3.792440 current flow 0.727616 
[DBG 2020-05-13 15:23:40     0 sec]  update mult: afterafter  ovl 0.819668 oob 0.727616 asym 3.792444 cos 30.000000 current flow 0.727616 
[DBG 2020-05-13 15:23:40     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:40     0 sec]  update alpha:: new alpha idx 1 0.532174 
[DBG 2020-05-13 15:23:40     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:40     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:40     0 sec]  obj 31.384316 hpwl 23.837483 ovl 7.545228 oob 0.000000 asym 0.001606 cos 0.000000 
[DBG 2020-05-13 15:23:40     0 sec]  ovl area 0.000000 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.015268 target 0.500000 
[INF 2020-05-13 15:23:40     0 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:40     0 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'CAP1')
('origin, ', 6900, 10000)
('pin shape', -500, 37135, 500, 37265)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 79500, 37135, 80500, 37265)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'CAP1_xc1_3_', 3000, 37400)
CAP1_xc1_3_ CAP1_xc1_3_ 3000 37400 PLACEMENT
('node ', u'CAP1_xc1_2_', 3000, 0)
CAP1_xc1_2_ CAP1_xc1_2_ 3000 0 PLACEMENT
('node ', u'CAP1_xc1_1_', 40600, 0)
CAP1_xc1_1_ CAP1_xc1_1_ 40600 0 PLACEMENT
('node ', u'CAP1_xc1_0_', 40600, 37400)
CAP1_xc1_0_ CAP1_xc1_0_ 40600 37400 PLACEMENT
('addPowerStripe length ', 74110, 81000)
('width', 81400)
('width', 81800)
('fWidth', 81.8)
('width, ', 81.80000000000001, 'height', 1.8, 'vdd offset', -0.9000000000000037, 75.05)
('width, ', 81.80000000000001, 'height', 1.8, 'vss offset', -0.9000000000000037, -2.9)
generated vdd
generated vss
('PnR: placement finished ', u'CAP1')
('PnR: working on ', u'CAP2_RES2')
('countNumberOfCells', u'CAP2_RES2')
('nmos', 0, 'numPmos', 0, 'cap', 1, 'res', 2, 'unset:')
end
('add pin', u'0', 'to cell', u'CAP2_RES2_xc0')
('add pin', u'1', 'to cell', u'CAP2_RES2_xc0')
('add pin', u'0', 'to cell', u'CAP2_RES2_xr51')
('add pin', u'1', 'to cell', u'CAP2_RES2_xr51')
('add pin', u'0', 'to cell', u'CAP2_RES2_xr25')
('add pin', u'1', 'to cell', u'CAP2_RES2_xr25')
computeAndAddPowerCurrentFlow
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:40     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:40     0 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:40     0 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 1508 us 
[INF 2020-05-13 15:23:40     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:40     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:40     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:40     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:40     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:40     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:40     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:40     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:40     0 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 1737 us 
[INF 2020-05-13 15:23:40     0 sec]  IdeaPlaceEx:: HPWL 40045 
[INF 2020-05-13 15:23:40     0 sec]  IdeaPlaceEx:: HPWL with virtual pin: 40045 
[INF 2020-05-13 15:23:40     0 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:40     0 sec]  Align to grid 200 
[INF 2020-05-13 15:23:40     0 sec]  Alignment symaxis 31700 
[INF 2020-05-13 15:23:40     0 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:40     0 sec]  IDEAPLACE::align cell 0 CAP2_RES2_xc0 center 31700 35900
 [INF 2020-05-13 15:23:40     0 sec]  IDEAPLACE::align cell 1 CAP2_RES2_xr51 center 42900 13900
 [INF 2020-05-13 15:23:40     0 sec]  IDEAPLACE::align cell 2 CAP2_RES2_xr25 center 20500 13900
 Academic license - for non-commercial use only
 io pin assignment time 1816 us 
[INF 2020-05-13 15:23:40    13 sec]  Flow::GdsWriter:: Write circuit CAP2_RES2 layout to ./CAP2_RES2.place.gds 
[WRN 2020-05-13 15:23:41     1 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:41     1 sec]  mark net vss as vss 
[WRN 2020-05-13 15:23:41     1 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:41     1 sec]  Symnet parser: reading ./DAC1.symnet...
[INF 2020-05-13 15:23:41     1 sec]  ParserSymNet:: left net clk 0
, right net rstb 4
[INF 2020-05-13 15:23:41     1 sec]  ParserSymNet:: left net r1 2
, right net r2 3
[INF 2020-05-13 15:23:41     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:41     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:41     0 sec]  start current flow 
[INF 2020-05-13 15:23:41     0 sec]  Ideaplace global placement:: number of operators 15, hpwl 7 ovl 6 oob 0 asym 0 sigFlow 0 power 2 crf 
[DBG 2020-05-13 15:23:41     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 30.000000 
[DBG 2020-05-13 15:23:41     0 sec]  init mult: ovl 0.271653 oob 0.271653 asym 0.271653 current flow 0.271653
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  iter 0 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 23.572477 hpwl 17.974067 cos 0.000000 ovl 5.598410 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.266071 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 1929 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 20.608686 oob 0.000000 asym 0.000000 cos 0.000000 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.271653 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.477740 oob 0.271653 asym 0.271653 cos 30.000000 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.448736 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 27.819656 hpwl 17.974067 ovl 9.845589 oob 0.000000 asym 0.000000 cos 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  iter 1 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 180.098438 hpwl 72.280358 cos 105.406525 ovl 2.411556 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.539842 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 2041 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 5.047843 oob 0.000000 asym 0.000000 cos 105.406525 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.477740 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.528218 oob 0.271653 asym 0.271653 cos 2.054065 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.980000 power wl 0.077374 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.418984 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 180.353245 hpwl 72.280358 ovl 2.666363 oob 0.000000 asym 0.000000 cos 105.406525 
[DBG 2020-05-13 15:23:41     0 sec]  iter 2 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 92.596266 hpwl 78.842200 cos 11.653450 ovl 2.100615 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.211367 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 2282 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 3.976795 oob 0.000000 asym 0.000000 cos 11.891275 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.528218 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.567986 oob 0.271653 asym 0.271653 cos 1.098913 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.960400 power wl 0.133759 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.415378 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 92.754415 hpwl 78.842200 ovl 2.258764 oob 0.000000 asym 0.000000 cos 11.653450 
[DBG 2020-05-13 15:23:41     0 sec]  iter 3 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 111.162203 hpwl 84.969252 cos 24.688378 ovl 1.504573 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.172911 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 1946 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 2.648961 oob 0.000000 asym 0.000000 cos 25.706350 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.567986 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.594476 oob 0.271653 asym 0.271653 cos 1.217463 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.941192 power wl 0.033858 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.410523 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 111.232373 hpwl 84.969252 ovl 1.574743 oob 0.000000 asym 0.000000 cos 24.688378 
[DBG 2020-05-13 15:23:41     0 sec]  iter 4 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 95.708062 hpwl 86.781452 cos 7.402171 ovl 1.524439 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.116543 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 1963 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 2.564342 oob 0.000000 asym 0.000000 cos 7.864677 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.594476 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.620119 oob 0.271653 asym 0.271653 cos 1.019839 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.922368 power wl 0.019925 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.410221 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 95.773820 hpwl 86.781452 ovl 1.590198 oob 0.000000 asym 0.000000 cos 7.402171 
[DBG 2020-05-13 15:23:41     0 sec]  iter 5 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 96.509700 hpwl 89.523308 cos 5.447072 ovl 1.539320 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.113983 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 1844 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 2.482297 oob 0.000000 asym 0.000000 cos 5.905529 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.620119 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.644942 oob 0.271653 asym 0.271653 cos 0.981423 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.903921 power wl 0.015682 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.409924 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 96.571318 hpwl 89.523308 ovl 1.600938 oob 0.000000 asym 0.000000 cos 5.447072 
[DBG 2020-05-13 15:23:41     0 sec]  iter 6 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 99.854480 hpwl 93.073593 cos 5.218871 ovl 1.562016 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.090096 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 1737 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 2.421948 oob 0.000000 asym 0.000000 cos 5.773593 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.644942 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.669162 oob 0.271653 asym 0.271653 cos 0.961657 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.885842 power wl 0.014199 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.409706 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 99.913138 hpwl 93.073593 ovl 1.620674 oob 0.000000 asym 0.000000 cos 5.218871 
[DBG 2020-05-13 15:23:41     0 sec]  iter 7 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 98.174703 hpwl 91.587874 cos 5.009679 ovl 1.577150 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.060481 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 1272 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 2.356904 oob 0.000000 asym 0.000000 cos 5.655272 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.669162 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.692731 oob 0.271653 asym 0.271653 cos 0.942395 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.868126 power wl 0.014254 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.409466 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 98.230253 hpwl 91.587874 ovl 1.632700 oob 0.000000 asym 0.000000 cos 5.009679 
[DBG 2020-05-13 15:23:41     0 sec]  iter 8 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 97.338918 hpwl 90.487906 cos 5.262170 ovl 1.588843 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.058894 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 1194 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 2.293594 oob 0.000000 asym 0.000000 cos 6.061531 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.692731 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.715667 oob 0.271653 asym 0.271653 cos 0.928741 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.850763 power wl 0.014720 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.409231 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 97.391524 hpwl 90.487906 ovl 1.641448 oob 0.000000 asym 0.000000 cos 5.262170 
[DBG 2020-05-13 15:23:41     0 sec]  iter 9 
[DBG 2020-05-13 15:23:41     0 sec]  adam: 95.383600 hpwl 88.106624 cos 5.700813 ovl 1.576164 oob 0.000000 asym 0.000000 
[DBG 2020-05-13 15:23:41     0 sec]  gradient norm 0.057755 
[DBG 2020-05-13 15:23:41     0 sec]  converge at iter 1956 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: raw ovl 2.202371 oob 0.000000 asym 0.000000 cos 6.700823 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:41     0 sec]  update mult:  before ovl 0.715667 oob 0.271653 asym 0.271653 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  update mult: afterafter  ovl 0.737690 oob 0.271653 asym 0.271653 cos 0.917771 current flow 0.271653 
[DBG 2020-05-13 15:23:41     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 0.833748 power wl 0.015046 
[DBG 2020-05-13 15:23:41     0 sec]  update alpha:: new alpha idx 1 0.408884 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:41     0 sec]  obj 95.432104 hpwl 88.106624 ovl 1.624668 oob 0.000000 asym 0.000000 cos 5.700813 
[DBG 2020-05-13 15:23:41     0 sec]  ovl area 0.966518 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.000000 target 0.500000 
[INF 2020-05-13 15:23:41     0 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:41     0 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'CAP2_RES2')
('origin, ', 6900, 10400)
('pin shape', 49100, 2735, 50100, 2865)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 2735, 500, 2865)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'CAP2_RES2_xc0', 10000, 8200)
CAP2_RES2_xc0 CAP2_RES2_xc0 10000 8200 PLACEMENT
('node ', u'CAP2_RES2_xr51', 25600, 0)
CAP2_RES2_xr51 CAP2_RES2_xr51 25600 0 PLACEMENT
('node ', u'CAP2_RES2_xr25', 3400, 0)
CAP2_RES2_xr25 CAP2_RES2_xr25 3400 0 PLACEMENT
Adding GuardRing to Cell
('origin', 6900, 10400)
('addPowerStripe length ', 43280, 50600)
('width', 51000)
('width', 51400)
('fWidth', 51.4)
('width, ', 51.400000000000006, 'height', 1.8, 'vdd offset', -0.9000000000000037, 43.85)
('width, ', 51.400000000000006, 'height', 1.8, 'vss offset', -0.9000000000000037, -4.1)
generated vdd
generated vss




 add vss 
('metal ', -900, -4100, 50500, -2300, 36)
('pin shape', -900, -4100, 50500, -2300)
('layer ', 6)
('adjust bbox ', 900, 4100, 50500, -2300)
('PnR: placement finished ', u'CAP2_RES2')
('PnR: working on ', u'DAC1')
('countNumberOfCells', u'DAC1')
('nmos', 0, 'numPmos', 0, 'cap', 0, 'res', 2, 'unset:')
DFCNQD2BWP_LVT
DFCNQD2BWP_LVT
end
('add pin', u'0', 'to cell', u'DAC1_xr19')
('add pin', u'1', 'to cell', u'DAC1_xr19')
('add pin', u'0', 'to cell', u'DAC1_xr48')
('add pin', u'1', 'to cell', u'DAC1_xr48')
('add pin', u'd', 'to cell', u'xi86')
('add pin', u'cp', 'to cell', u'xi86')
('add pin', u'cdn', 'to cell', u'xi86')
('add pin', u'q', 'to cell', u'xi86')
('add pin', u'vdd', 'to cell', u'xi86')
('add pin', u'vss', 'to cell', u'xi86')
('add pin', u'd', 'to cell', u'xi88')
('add pin', u'cp', 'to cell', u'xi88')
('add pin', u'cdn', 'to cell', u'xi88')
('add pin', u'q', 'to cell', u'xi88')
('add pin', u'vdd', 'to cell', u'xi88')
('add pin', u'vss', 'to cell', u'xi88')
computeAndAddPowerCurrentFlow
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:41     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:41     0 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:41     0 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 4570 us 
[INF 2020-05-13 15:23:41     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:41     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:41     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:41     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:41     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:41     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:41     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:41     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:41     0 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 2762 us 
[INF 2020-05-13 15:23:41     0 sec]  IdeaPlaceEx:: HPWL 8632 
[INF 2020-05-13 15:23:41     0 sec]  IdeaPlaceEx:: HPWL with virtual pin: 8632 
[INF 2020-05-13 15:23:41     0 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:41     0 sec]  Align to grid 200 
[INF 2020-05-13 15:23:41     0 sec]  Alignment symaxis 26700 
[INF 2020-05-13 15:23:41     0 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:41     0 sec]  IDEAPLACE::align cell 0 DAC1_xr19 center 20900 13800
 [INF 2020-05-13 15:23:41     0 sec]  IDEAPLACE::align cell 1 DAC1_xr48 center 20900 11000
 [INF 2020-05-13 15:23:41     0 sec]  IDEAPLACE::align cell 2 xi86 center 34900 11300
 [INF 2020-05-13 15:23:41     0 sec]  IDEAPLACE::align cell 3 xi88 center 40700 11300
 Academic license - for non-commercial use only
 io pin assignment time 2741 us 
[INF 2020-05-13 15:23:42    15 sec]  Flow::GdsWriter:: Write circuit DAC1 layout to ./DAC1.place.gds 
[WRN 2020-05-13 15:23:42     1 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:42     1 sec]  mark net vss as vss 
[WRN 2020-05-13 15:23:42     1 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:42     1 sec]  Symnet parser: reading ./wrapper.symnet...
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:42     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:42     0 sec]  start current flow 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace global placement:: number of operators 5, hpwl 2 ovl 1 oob 0 asym 1 sigFlow 0 power 1 crf 
[DBG 2020-05-13 15:23:42     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 0.000000 
[DBG 2020-05-13 15:23:42     0 sec]  init mult: ovl 0.637334 oob 0.637334 asym 2.023491 current flow 0.637334
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  iter 0 
[DBG 2020-05-13 15:23:42     0 sec]  adam: 40.255693 hpwl 39.651977 cos 0.000000 ovl 0.361160 oob 0.000000 asym 0.242556 
[DBG 2020-05-13 15:23:42     0 sec]  gradient norm 0.248348 
[DBG 2020-05-13 15:23:42     0 sec]  converge at iter 3001 
[DBG 2020-05-13 15:23:42     0 sec]  update mult: raw ovl 0.566673 oob 0.000000 asym 0.119870 cos 0.000000 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:42     0 sec]  update mult:  before ovl 0.637334 oob 0.637334 asym 2.023491 current flow 0.637334 
[DBG 2020-05-13 15:23:42     0 sec]  update mult: afterafter  ovl 0.643001 oob 0.637334 asym 2.024690 cos 30.000000 current flow 0.637334 
[DBG 2020-05-13 15:23:42     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:42     0 sec]  update alpha:: new alpha idx 1 0.414077 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  obj 40.259047 hpwl 39.651977 ovl 0.364371 oob 0.000000 asym 0.242700 cos 0.000000 
[DBG 2020-05-13 15:23:42     0 sec]  ovl area 0.000000 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.489614 target 0.500000 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'DAC1')
('origin, ', 7300, 9200)
('pin shape', -500, 1935, 500, 2065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 38300, -65, 39300, 65)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 3935, 500, 4065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 38300, 3935, 39300, 4065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 38300, 1935, 39300, 2065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 38300, 5935, 39300, 6065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'DAC1_xr19', 3200, 4000)
DAC1_xr19 DAC1_xr19 3200 4000 PLACEMENT
('node ', u'DAC1_xr48', 3200, 1200)
DAC1_xr48 DAC1_xr48 3200 1200 PLACEMENT
('node ', u'xi86', 25400, 1400)
xi86 xi86 25400 1400 PLACEMENT
('node ', u'xi88', 31200, 1400)
xi88 xi88 31200 1400 PLACEMENT
Adding GuardRing to Cell
('origin', 7300, 9200)
('addPowerStripe length ', 32890, 39800)
('width', 40200)
('width', 40600)
('fWidth', 40.6)
('width, ', 40.60000000000001, 'height', 1.8, 'vdd offset', -0.7000000000000046, 6.64)
('width, ', 40.60000000000001, 'height', 1.8, 'vss offset', -0.7000000000000046, -2.9)
generated vdd
generated vss




 add vdd 
('metal ', -700, 6640, 39900, 8440, 36)
('pin shape', -700, 6640, 39900, 8440)
('layer ', 6)
('adjust bbox ', 700, -6640, 39900, 8440)




 add vss 
('metal ', -700, -2900, 39900, -1100, 36)
('pin shape', -700, -2900, 39900, -1100)
('layer ', 6)
('adjust bbox ', 700, 2900, 39900, -1100)
('PnR: placement finished ', u'DAC1')
('PnR: working on ', u'wrapper')
('countNumberOfCells', u'wrapper')
('nmos', 2, 'numPmos', 0, 'cap', 0, 'res', 0, 'unset:')
end
('add pin', u'0', 'to cell', u'wrapper_m1')
('add pin', u'1', 'to cell', u'wrapper_m1')
('add pin', u'2', 'to cell', u'wrapper_m1')
('add pin', u'0', 'to cell', u'wrapper_m0')
('add pin', u'1', 'to cell', u'wrapper_m0')
('add pin', u'2', 'to cell', u'wrapper_m0')
computeAndAddPowerCurrentFlow
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 1727 us 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 1716 us 
[INF 2020-05-13 15:23:42     0 sec]  IdeaPlaceEx:: HPWL 2200 
[INF 2020-05-13 15:23:42     0 sec]  IdeaPlaceEx:: HPWL with virtual pin: 2200 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:42     0 sec]  Align to grid 200 
[INF 2020-05-13 15:23:42     0 sec]  Alignment symaxis 11300 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:42     0 sec]  IDEAPLACE::align cell 0 wrapper_m1 center 12300 10300
 [INF 2020-05-13 15:23:42     0 sec]  IDEAPLACE::align cell 1 wrapper_m0 center 10300 10300
 Academic license - for non-commercial use only
 io pin assignment time 1997 us 
[INF 2020-05-13 15:23:42    15 sec]  Flow::GdsWriter:: Write circuit wrapper layout to ./wrapper.place.gds 
[WRN 2020-05-13 15:23:42     0 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:42     0 sec]  mark net vss as vss 
[WRN 2020-05-13 15:23:42     0 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:42     0 sec]  Symnet parser: reading ./INPUT_RES.symnet...
[INF 2020-05-13 15:23:42     0 sec]  ParserSymNet:: left net vo 2
, right net vi 1
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:42     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:42     0 sec]  start current flow 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace global placement:: number of operators 4, hpwl 2 ovl 0 oob 0 asym 1 sigFlow 0 power 1 crf 
[DBG 2020-05-13 15:23:42     0 sec]  init mult: hpwl 1.000000 cos 30.000000 power wl 30.000000 
[DBG 2020-05-13 15:23:42     0 sec]  init mult: ovl inf oob inf asym 8.077243 current flow inf
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 1 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  iter 0 
[DBG 2020-05-13 15:23:42     0 sec]  adam: 10.130221 hpwl 10.130207 cos 0.000000 ovl 0.000000 oob 0.000000 asym 0.000014 
[DBG 2020-05-13 15:23:42     0 sec]  gradient norm 0.044533 
[DBG 2020-05-13 15:23:42     0 sec]  converge at iter 1030 
[DBG 2020-05-13 15:23:42     0 sec]  update mult: raw ovl 0.000000 oob 0.000000 asym 0.000002 cos 0.000000 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:42     0 sec]  update mult:  before ovl inf oob inf asym 8.077243 current flow inf 
[DBG 2020-05-13 15:23:42     0 sec]  update mult: afterafter  ovl inf oob inf asym 8.077243 cos 30.000000 current flow inf 
[DBG 2020-05-13 15:23:42     0 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 1.000000 power wl 1.000000 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 1 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  obj 10.130221 hpwl 10.130207 ovl 0.000000 oob 0.000000 asym 0.000014 cos 0.000000 
[DBG 2020-05-13 15:23:42     0 sec]  ovl area 0.000000 target 1.000000 
 oob area 0.000000 target 15.000000 
 asym dist 0.001297 target 0.500000 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'wrapper')
('origin, ', 6900, 10200)
('pin shape', -500, 935, 500, 1065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', 8300, 935, 9300, 1065)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'wrapper_m1', 5000, 0)
wrapper_m1 wrapper_m1 5000 0 PLACEMENT
('node ', u'wrapper_m0', 3200, 0)
wrapper_m0 wrapper_m0 3200 0 PLACEMENT
Adding GuardRing to Cell
('origin', 6900, 10200)
('addPowerStripe length ', 2660, 9800)
('width', 10200)
('width', 10600)
('fWidth', 10.6)
('width, ', 10.600000000000009, 'height', 0.6, 'vdd offset', -0.9000000000000037, 1.56)
('width, ', 10.600000000000009, 'height', 0.6, 'vss offset', -0.9000000000000037, -2.5)
generated vdd
generated vss




 add vss 
('metal ', -900, -2500, 9700, -1900, 36)
('pin shape', -900, -2500, 9700, -1900)
('layer ', 6)
('adjust bbox ', 900, 2500, 9700, -1900)
('PnR: placement finished ', u'wrapper')
('PnR: working on ', u'INPUT_RES')
('countNumberOfCells', u'INPUT_RES')
('nmos', 0, 'numPmos', 0, 'cap', 0, 'res', 1, 'unset:')
end
('add pin', u'0', 'to cell', u'INPUT_RES_xr16')
('add pin', u'1', 'to cell', u'INPUT_RES_xr16')
computeAndAddPowerCurrentFlow
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
Academic license - for non-commercial use only
 io pin assignment time 6177 us 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:42     0 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Assigning IO pin...
Academic license - for non-commercial use only
 io pin assignment time 1772 us 
[INF 2020-05-13 15:23:42     0 sec]  IdeaPlaceEx:: HPWL 0 
[INF 2020-05-13 15:23:42     0 sec]  IdeaPlaceEx:: HPWL with virtual pin: 0 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:42     0 sec]  Align to grid 200 
[INF 2020-05-13 15:23:42     0 sec]  Alignment symaxis 20700 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:42     0 sec]  IDEAPLACE::align cell 0 INPUT_RES_xr16 center 20700 11700
 Academic license - for non-commercial use only
 io pin assignment time 1764 us 
[INF 2020-05-13 15:23:42    15 sec]  Flow::GdsWriter:: Write circuit INPUT_RES layout to ./INPUT_RES.place.gds 
[WRN 2020-05-13 15:23:42     0 sec]  Ideaplace: Using file parser readSymFile. This is designed for internal debugging only and may not be kept maintained 
[WRN 2020-05-13 15:23:42     0 sec]  Ideaplace: Using file parser readSigpathFile. This is designed for internal debugging only and may not be kept maintained 
[DBG 2020-05-13 15:23:42     0 sec]  mark net vssa as vss 
[DBG 2020-05-13 15:23:42     0 sec]  mark net vssd as vss 
[WRN 2020-05-13 15:23:42     0 sec]  Ideaplace: Using file parser readSymNetFile. This is designed for internal debugging only and may not be kept maintained 
[INF 2020-05-13 15:23:42     0 sec]  Symnet parser: reading ./CTDSM_CORE_NEW_schematic.symnet...
[INF 2020-05-13 15:23:42     0 sec]  ParserSymNet:: left net clkb1 1
, right net clkb2 2
[INF 2020-05-13 15:23:42     0 sec]  ParserSymNet:: left net ibias1 3
, right net ibias2 4
[INF 2020-05-13 15:23:42     0 sec]  ParserSymNet:: left net outp 6
, right net outm 5
[ERR 2020-05-13 15:23:42     0 sec]  Symnet parser: symmetry net pair: net072 net071 are not inside the netlist! Ignored. 
[INF 2020-05-13 15:23:42     0 sec]  ParserSymNet:: left net vip 10
, right net vim 9
[INF 2020-05-13 15:23:42     0 sec]  ParserSymNet:: left net vo2p 17
, right net vo2m 16
[INF 2020-05-13 15:23:42     0 sec]  ParserSymNet:: left net net052 23
, right net net051 22
[INF 2020-05-13 15:23:42     0 sec]  ParserSymNet:: left net net063 20
, right net net062 21
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace: Entering global placement...
[INF 2020-05-13 15:23:42     0 sec]  NlpWnconj::initBoundaryParams: automatical set boundary to be Box:x = [-7.98436,7.98436];y = [-9.39336,9.39336]: 
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 11 input_resp  pin 65 vo-> cell 5 cap1 pin 37 vo1p -> cell 5 cap1 pin 37 vo1p -> cell 1 ota1 -> pin 10  vip
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 5 cap1  pin 37 vo1p-> cell 1 ota1 pin 10 vip -> cell 1 ota1 pin 11 vom -> cell 6 cap2_res2 -> pin 40  vo2p
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 1 ota1  pin 11 vom-> cell 6 cap2_res2 pin 40 vo2p -> cell 6 cap2_res2 pin 40 vo2p -> cell 0 ota2 -> pin 3  vip
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 6 cap2_res2  pin 40 vo2p-> cell 0 ota2 pin 3 vip -> cell 0 ota2 pin 4 vom -> cell 7 CTDSM_CORE_NEW_schematic_cap3 -> pin 42  0
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 0 ota2  pin 4 vom-> cell 7 CTDSM_CORE_NEW_schematic_cap3 pin 42 0 -> cell 7 CTDSM_CORE_NEW_schematic_cap3 pin 43 1 -> cell 4 digital0 -> pin 33  vo3p
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 12 input_resm  pin 68 vo-> cell 5 cap1 pin 38 vo1m -> cell 5 cap1 pin 38 vo1m -> cell 1 ota1 -> pin 9  vim
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 5 cap1  pin 38 vo1m-> cell 1 ota1 pin 9 vim -> cell 1 ota1 pin 12 vop -> cell 6 cap2_res2 -> pin 39  vo2m
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 1 ota1  pin 12 vop-> cell 6 cap2_res2 pin 39 vo2m -> cell 6 cap2_res2 pin 39 vo2m -> cell 0 ota2 -> pin 2  vim
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 6 cap2_res2  pin 39 vo2m-> cell 0 ota2 pin 2 vim -> cell 0 ota2 pin 5 vop -> cell 7 CTDSM_CORE_NEW_schematic_cap3 -> pin 42  0
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 0 ota2  pin 5 vop-> cell 7 CTDSM_CORE_NEW_schematic_cap3 pin 42 0 -> cell 7 CTDSM_CORE_NEW_schematic_cap3 pin 43 1 -> cell 4 digital0 -> pin 34  vo3m
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 11 input_resp  pin 65 vo-> cell 5 cap1 pin 37 vo1p -> cell 5 cap1 pin 37 vo1p -> cell 9 dac1a -> pin 53  in
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 5 cap1  pin 37 vo1p-> cell 9 dac1a pin 53 in -> cell 9 dac1a pin 59 out -> cell 6 cap2_res2 -> pin 40  vo2p
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 9 dac1a  pin 59 out-> cell 6 cap2_res2 pin 40 vo2p -> cell 6 cap2_res2 pin 40 vo2p -> cell 0 ota2 -> pin 3  vip
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 6 cap2_res2  pin 40 vo2p-> cell 0 ota2 pin 3 vip -> cell 0 ota2 pin 4 vom -> cell 7 CTDSM_CORE_NEW_schematic_cap3 -> pin 42  0
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 0 ota2  pin 4 vom-> cell 7 CTDSM_CORE_NEW_schematic_cap3 pin 42 0 -> cell 7 CTDSM_CORE_NEW_schematic_cap3 pin 43 1 -> cell 4 digital0 -> pin 33  vo3p
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 12 input_resm  pin 68 vo-> cell 5 cap1 pin 38 vo1m -> cell 5 cap1 pin 38 vo1m -> cell 8 dac1b -> pin 45  in
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 5 cap1  pin 38 vo1m-> cell 8 dac1b pin 45 in -> cell 8 dac1b pin 51 out -> cell 6 cap2_res2 -> pin 39  vo2m
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 8 dac1b  pin 51 out-> cell 6 cap2_res2 pin 39 vo2m -> cell 6 cap2_res2 pin 39 vo2m -> cell 0 ota2 -> pin 2  vim
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 6 cap2_res2  pin 39 vo2m-> cell 0 ota2 pin 2 vim -> cell 0 ota2 pin 5 vop -> cell 7 CTDSM_CORE_NEW_schematic_cap3 -> pin 42  0
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 0 ota2  pin 5 vop-> cell 7 CTDSM_CORE_NEW_schematic_cap3 pin 42 0 -> cell 7 CTDSM_CORE_NEW_schematic_cap3 pin 43 1 -> cell 4 digital0 -> pin 34  vo3m
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 11 input_resp  pin 65 vo-> cell 5 cap1 pin 37 vo1p -> cell 5 cap1 pin 37 vo1p -> cell 1 ota1 -> pin 10  vip
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 5 cap1  pin 37 vo1p-> cell 1 ota1 pin 10 vip -> cell 1 ota1 pin 11 vom -> cell 6 cap2_res2 -> pin 40  vo2p
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 1 ota1  pin 11 vom-> cell 6 cap2_res2 pin 40 vo2p -> cell 6 cap2_res2 pin 40 vo2p -> cell 0 ota2 -> pin 3  vip
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 6 cap2_res2  pin 40 vo2p-> cell 0 ota2 pin 3 vip -> cell 0 ota2 pin 4 vom -> cell 3 dac3a -> pin 23  in
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 0 ota2  pin 4 vom-> cell 3 dac3a pin 23 in -> cell 3 dac3a pin 29 out -> cell 4 digital0 -> pin 33  vo3p
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 12 input_resm  pin 68 vo-> cell 5 cap1 pin 38 vo1m -> cell 5 cap1 pin 38 vo1m -> cell 1 ota1 -> pin 9  vim
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 5 cap1  pin 38 vo1m-> cell 1 ota1 pin 9 vim -> cell 1 ota1 pin 12 vop -> cell 6 cap2_res2 -> pin 39  vo2m
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 1 ota1  pin 12 vop-> cell 6 cap2_res2 pin 39 vo2m -> cell 6 cap2_res2 pin 39 vo2m -> cell 0 ota2 -> pin 2  vim
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 6 cap2_res2  pin 39 vo2m-> cell 0 ota2 pin 2 vim -> cell 0 ota2 pin 5 vop -> cell 2 dac3b -> pin 15  in
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 0 ota2  pin 5 vop-> cell 2 dac3b pin 15 in -> cell 2 dac3b pin 21 out -> cell 4 digital0 -> pin 34  vo3m
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 11 input_resp  pin 65 vo-> cell 5 cap1 pin 37 vo1p -> cell 5 cap1 pin 37 vo1p -> cell 9 dac1a -> pin 53  in
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 5 cap1  pin 37 vo1p-> cell 9 dac1a pin 53 in -> cell 9 dac1a pin 59 out -> cell 6 cap2_res2 -> pin 40  vo2p
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 9 dac1a  pin 59 out-> cell 6 cap2_res2 pin 40 vo2p -> cell 6 cap2_res2 pin 40 vo2p -> cell 0 ota2 -> pin 3  vip
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 6 cap2_res2  pin 40 vo2p-> cell 0 ota2 pin 3 vip -> cell 0 ota2 pin 4 vom -> cell 3 dac3a -> pin 23  in
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 0 ota2  pin 4 vom-> cell 3 dac3a pin 23 in -> cell 3 dac3a pin 29 out -> cell 4 digital0 -> pin 33  vo3p
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 12 input_resm  pin 68 vo-> cell 5 cap1 pin 38 vo1m -> cell 5 cap1 pin 38 vo1m -> cell 8 dac1b -> pin 45  in
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 5 cap1  pin 38 vo1m-> cell 8 dac1b pin 45 in -> cell 8 dac1b pin 51 out -> cell 6 cap2_res2 -> pin 39  vo2m
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 8 dac1b  pin 51 out-> cell 6 cap2_res2 pin 39 vo2m -> cell 6 cap2_res2 pin 39 vo2m -> cell 0 ota2 -> pin 2  vim
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 6 cap2_res2  pin 39 vo2m-> cell 0 ota2 pin 2 vim -> cell 0 ota2 pin 5 vop -> cell 2 dac3b -> pin 15  in
[DBG 2020-05-13 15:23:42     0 sec]  SigPathMgr: add cell 0 ota2  pin 5 vop-> cell 2 dac3b pin 15 in -> cell 2 dac3b pin 21 out -> cell 4 digital0 -> pin 34  vo3m
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap1 -> cell ota1 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell ota1 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell ota1 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell ota1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell ota1 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell cap2_res2 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell cap2_res2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota2 -> cell CTDSM_CORE_NEW_schematic_cap3 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap1 -> cell ota1 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell ota1 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell ota1 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell ota1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell ota1 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell cap2_res2 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell cap2_res2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota2 -> cell CTDSM_CORE_NEW_schematic_cap3 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap1 -> cell dac1a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell dac1a -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell dac1a -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell dac1a -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell dac1a -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1a -> cell cap2_res2 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1a -> cell cap2_res2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1a -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota2 -> cell CTDSM_CORE_NEW_schematic_cap3 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap1 -> cell dac1b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell dac1b -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell dac1b -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell dac1b -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell dac1b -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1b -> cell cap2_res2 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1b -> cell cap2_res2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1b -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell CTDSM_CORE_NEW_schematic_cap3 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota2 -> cell CTDSM_CORE_NEW_schematic_cap3 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap1 -> cell ota1 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell ota1 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell ota1 -> cell dac3a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell ota1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell ota1 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell dac3a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell cap2_res2 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell cap2_res2 -> cell dac3a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell dac3a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota2 -> cell dac3a -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap1 -> cell ota1 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell ota1 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell ota1 -> cell dac3b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell ota1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell ota1 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell dac3b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell cap2_res2 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell cap2_res2 -> cell dac3b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota1 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell dac3b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota2 -> cell dac3b -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap1 -> cell dac1a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell dac1a -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell dac1a -> cell dac3a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resp -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell dac1a -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell dac1a -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell dac3a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1a -> cell cap2_res2 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1a -> cell cap2_res2 -> cell dac3a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1a -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell dac3a 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota2 -> cell dac3a -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap1 -> cell dac1b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap1 -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell dac1b -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell dac1b -> cell dac3b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell input_resm -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell dac1b -> cell cap2_res2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell dac1b -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell dac3b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap1 -> cell cap2_res2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1b -> cell cap2_res2 -> cell ota2 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1b -> cell cap2_res2 -> cell dac3b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell dac1b -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell dac3b 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell cap2_res2 -> cell ota2 -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  NlpGPlacer:: add sigpath cell ota2 -> cell dac3b -> cell digital0 
[DBG 2020-05-13 15:23:42     0 sec]  start current flow 
[INF 2020-05-13 15:23:42     0 sec]  Ideaplace global placement:: number of operators 223, hpwl 20 ovl 78 oob 0 asym 1 sigFlow 120 power 4 crf 
[DBG 2020-05-13 15:23:42     0 sec]  init mult: hpwl 1.000000 cos 8.161121 power wl 38.814347 
[DBG 2020-05-13 15:23:42     0 sec]  init mult: ovl 0.085054 oob 0.085054 asym 5.507577 current flow 0.085054
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:42     0 sec]  iter 0 
[DBG 2020-05-13 15:23:43     1 sec]  adam: 11410.970285 hpwl 235.041717 cos 10657.194945 ovl 244.930696 oob 0.000000 asym 273.802926 
[DBG 2020-05-13 15:23:43     1 sec]  gradient norm 109.365806 
[DBG 2020-05-13 15:23:43     1 sec]  converge at iter 3001 
[DBG 2020-05-13 15:23:43     1 sec]  update mult: raw ovl 2879.707077 oob 0.000000 asym 49.713862 cos 1305.849406 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:43     1 sec]  update mult:  before ovl 0.085054 oob 0.085054 asym 5.507577 current flow 0.085054 
[DBG 2020-05-13 15:23:43     1 sec]  update mult: afterafter  ovl 28.882125 oob 0.085054 asym 6.004716 cos 21.219615 current flow 0.085054 
[DBG 2020-05-13 15:23:43     1 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 63.811001 power wl 0.063437 
[DBG 2020-05-13 15:23:43     1 sec]  update alpha:: new alpha idx 1 0.400179 
[DBG 2020-05-13 15:23:43     1 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:43     1 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:43     1 sec]  obj 104366.336584 hpwl 235.041717 ovl 83172.059173 oob 0.000000 asym 298.517608 cos 20660.718085 
[DBG 2020-05-13 15:23:43     1 sec]  iter 1 
[DBG 2020-05-13 15:23:43     1 sec]  adam: 35596.453350 hpwl 462.052633 cos 26564.246572 ovl 6664.539129 oob 0.000000 asym 1905.615015 
[DBG 2020-05-13 15:23:43     1 sec]  gradient norm 652.449027 
[DBG 2020-05-13 15:23:43     1 sec]  converge at iter 44 
[DBG 2020-05-13 15:23:43     1 sec]  update mult: raw ovl 230.749613 oob 0.000000 asym 317.353082 cos 416.295719 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:43     1 sec]  update mult:  before ovl 28.882125 oob 0.085054 asym 6.004716 current flow 0.085054 
[DBG 2020-05-13 15:23:43     1 sec]  update mult: afterafter  ovl 31.189621 oob 0.085054 asym 9.178246 cos 67.973958 current flow 0.085054 
[DBG 2020-05-13 15:23:43     1 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 57.152995 power wl 0.017870 
[DBG 2020-05-13 15:23:43     1 sec]  update alpha:: new alpha idx 1 0.404507 
[DBG 2020-05-13 15:23:43     1 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:43     1 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:43     1 sec]  obj 38865.813935 hpwl 462.052633 ovl 7196.992969 oob 0.000000 asym 2912.744801 cos 28294.023531 
[DBG 2020-05-13 15:23:43     1 sec]  iter 2 
[DBG 2020-05-13 15:23:43     1 sec]  adam: 5193.765944 hpwl 616.751515 cos 4094.950746 ovl 130.411019 oob 0.000000 asym 351.652664 
[DBG 2020-05-13 15:23:43     1 sec]  gradient norm 65.247191 
[DBG 2020-05-13 15:23:43     1 sec]  converge at iter 311 
[DBG 2020-05-13 15:23:43     1 sec]  update mult: raw ovl 4.181231 oob 0.000000 asym 38.313709 cos 71.648927 powerWl 0.000000 current flow
[DBG 2020-05-13 15:23:43     1 sec]  update mult:  before ovl 31.189621 oob 0.085054 asym 9.178246 current flow 0.085054 
[DBG 2020-05-13 15:23:43     1 sec]  update mult: afterafter  ovl 31.231433 oob 0.085054 asym 9.561384 cos 57.869484 current flow 0.085054 
[DBG 2020-05-13 15:23:43     1 sec]  match_grad_const_multipliers: multipliers hpwl 1.000000 cos 147.291755 power wl 0.008254 
[DBG 2020-05-13 15:23:43     1 sec]  update alpha:: new alpha idx 1 0.400088 
[DBG 2020-05-13 15:23:43     1 sec]  alpha idx 2 size 4 
[DBG 2020-05-13 15:23:43     1 sec]  alpha idx 3 size 4 
[DBG 2020-05-13 15:23:43     1 sec]  obj 5259.231532 hpwl 616.751515 ovl 130.585846 oob 0.000000 asym 366.332067 cos 4145.562104 
[DBG 2020-05-13 15:23:43     1 sec]  ovl area 0.000000 target 13.798534 
 oob area 0.000000 target 15.000000 
 asym dist 1.441625 target 1.857319 
[INF 2020-05-13 15:23:43     1 sec]  Ideaplace: Entering legalization and detailed placement...
[INF 2020-05-13 15:23:43     1 sec]  CG legalizer: legalize horizontal LP...
('placement finished: ', u'INPUT_RES')
('origin, ', 7100, 10400)
('pin shape', 26700, 735, 27700, 865)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('pin shape', -500, 735, 500, 865)
('layer ', 1)
('adjust bbox ', 500, 65, 500, 65)
('node ', u'INPUT_RES_xr16', 3200, 0)
INPUT_RES_xr16 INPUT_RES_xr16 3200 0 PLACEMENT
Adding GuardRing to Cell
('origin', 7100, 10400)
('addPowerStripe length ', 21080, 28200)
('width', 28600)
('width', 29000)
('fWidth', 29.0)
('width, ', 29.000000000000007, 'height', 1.8, 'vdd offset', -0.9000000000000037, 4.09)
('width, ', 29.000000000000007, 'height', 1.8, 'vss offset', -0.9000000000000037, -4.1)
generated vdd
generated vss




 add vss 
('metal ', -900, -4100, 28100, -2300, 36)
('pin shape', -900, -4100, 28100, -2300)
('layer ', 6)
('adjust bbox ', 900, 4100, 28100, -2300)
('PnR: placement finished ', u'INPUT_RES')
('PnR: working on ', u'CTDSM_CORE_NEW_schematic')
('countNumberOfCells', u'CTDSM_CORE_NEW_schematic')
('nmos', 0, 'numPmos', 0, 'cap', 1, 'res', 0, 'unset:')
Gm2_v5_Practice_schematic
Gm1_v5_Practice_schematic
DAC3
DAC3
DIGITAL_TOP_flat
CAP1
CAP2_RES2
DAC1
DAC1
wrapper
INPUT_RES
INPUT_RES
end
('add pin', u'ibias', 'to cell', u'ota2')
('add pin', u'vdd', 'to cell', u'ota2')
('add pin', u'vim', 'to cell', u'ota2')
('add pin', u'vip', 'to cell', u'ota2')
('add pin', u'vom', 'to cell', u'ota2')
('add pin', u'vop', 'to cell', u'ota2')
('add pin', u'vss', 'to cell', u'ota2')
('add pin', u'ibias', 'to cell', u'ota1')
('add pin', u'vdd', 'to cell', u'ota1')
('add pin', u'vim', 'to cell', u'ota1')
('add pin', u'vip', 'to cell', u'ota1')
('add pin', u'vom', 'to cell', u'ota1')
('add pin', u'vop', 'to cell', u'ota1')
('add pin', u'vss', 'to cell', u'ota1')
('add pin', u'clkb', 'to cell', u'dac3b')
('add pin', u'in', 'to cell', u'dac3b')
('add pin', u'r3', 'to cell', u'dac3b')
('add pin', u'r4', 'to cell', u'dac3b')
('add pin', u'rstb', 'to cell', u'dac3b')
('add pin', u'vdd', 'to cell', u'dac3b')
('add pin', u'vss', 'to cell', u'dac3b')
('add pin', u'out', 'to cell', u'dac3b')
('add pin', u'clkb', 'to cell', u'dac3a')
('add pin', u'in', 'to cell', u'dac3a')
('add pin', u'r3', 'to cell', u'dac3a')
('add pin', u'r4', 'to cell', u'dac3a')
('add pin', u'rstb', 'to cell', u'dac3a')
('add pin', u'vdd', 'to cell', u'dac3a')
('add pin', u'vss', 'to cell', u'dac3a')
('add pin', u'out', 'to cell', u'dac3a')
('add pin', u'clk', 'to cell', u'digital0')
('add pin', u'vssd', 'to cell', u'digital0')
('add pin', u'vddd', 'to cell', u'digital0')
('add pin', u'vo3p', 'to cell', u'digital0')
('add pin', u'vo3m', 'to cell', u'digital0')
('add pin', u'outm', 'to cell', u'digital0')
('add pin', u'outp', 'to cell', u'digital0')
('add pin', u'vo1p', 'to cell', u'cap1')
('add pin', u'vo1m', 'to cell', u'cap1')
('add pin', u'vo2m', 'to cell', u'cap2_res2')
('add pin', u'vo2p', 'to cell', u'cap2_res2')
('add pin', u'vss', 'to cell', u'cap2_res2')
('add pin', u'0', 'to cell', u'CTDSM_CORE_NEW_schematic_cap3')
('add pin', u'1', 'to cell', u'CTDSM_CORE_NEW_schematic_cap3')
('add pin', u'clk', 'to cell', u'dac1b')
('add pin', u'in', 'to cell', u'dac1b')
('add pin', u'r1', 'to cell', u'dac1b')
('add pin', u'r2', 'to cell', u'dac1b')
('add pin', u'rstb', 'to cell', u'dac1b')
('add pin', u'vdd', 'to cell', u'dac1b')
('add pin', u'vss', 'to cell', u'dac1b')
('add pin', u'out', 'to cell', u'dac1b')
('add pin', u'clk', 'to cell', u'dac1a')
('add pin', u'in', 'to cell', u'dac1a')
('add pin', u'r1', 'to cell', u'dac1a')
('add pin', u'r2', 'to cell', u'dac1a')
('add pin', u'rstb', 'to cell', u'dac1a')
('add pin', u'vdd', 'to cell', u'dac1a')
('add pin', u'vss', 'to cell', u'dac1a')
('add pin', u'out', 'to cell', u'dac1a')
('add pin', u'vss', 'to cell', u'w1')
('add pin', u'clkb1', 'to cell', u'w1')
('add pin', u'clkb2', 'to cell', u'w1')
('add pin', u'vss', 'to cell', u'input_resp')
('add pin', u'vi', 'to cell', u'input_resp')
('add pin', u'vo', 'to cell', u'input_resp')
('add pin', u'vss', 'to cell', u'input_resm')
('add pin', u'vi', 'to cell', u'input_resm')
('add pin', u'vo', 'to cell', u'input_resm')
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:43     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:43     1 sec]  CG legalizer: legalize vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:43     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:43     1 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:43     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:43     1 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:43     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:43     1 sec]  CG legalizer: detailed placement horizontal LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:43     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:43     1 sec]  CG legalizer: detailed placement vertical LP...
Academic license - for non-commercial use only
[INF 2020-05-13 15:23:43     1 sec]  LP legalization solver: LP optimal 
[INF 2020-05-13 15:23:43     1 sec]  Ideaplace: Assigning IO pin...
[INF 2020-05-13 15:23:43     1 sec]  IdeaPlaceEx:: HPWL 143700 
[INF 2020-05-13 15:23:43     1 sec]  IdeaPlaceEx:: HPWL with virtual pin: 143700 
[INF 2020-05-13 15:23:43     1 sec]  Ideaplace: Aligning the placement to grid...
[INF 2020-05-13 15:23:43     1 sec]  Align to grid 200 
[INF 2020-05-13 15:23:43     1 sec]  Alignment symaxis 73300 
[INF 2020-05-13 15:23:43     1 sec]  Ideaplace: finished alignment
[INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 0 ota2 center 73300 118600
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 1 ota1 center 73300 193800
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 2 dac3b center 41300 82900
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 3 dac3a center 105300 82900
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 4 digital0 center 73300 19900
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 5 cap1 center 73300 244200
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 6 cap2_res2 center 73300 156800
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 7 CTDSM_CORE_NEW_schematic_cap3 center 73300 47900
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 8 dac1b center 112700 187600
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 9 dac1a center 33900 187600
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 10 w1 center 73300 102500
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 11 input_resp center 34100 286500
 [INF 2020-05-13 15:23:43     1 sec]  IDEAPLACE::align cell 12 input_resm center 112500 286500
 [INF 2020-05-13 15:23:43    16 sec]  Flow::GdsWriter:: Write circuit CTDSM_CORE_NEW_schematic layout to ./CTDSM_CORE_NEW_schematic.place.gds 
[INF 2020-05-13 15:23:43    16 sec]  Flow::GdsWriter:: Write circuit Gm2_v5_Practice_schematic layout to ./Gm2_v5_Practice_schematic.place.gds 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: ibias
DrSymmetry::solve Self-sym: vdd
DrSymmetry::solve Sym:      vim vip
DrSymmetry::solve Sym:      vom vop
DrSymmetry::solve Self-sym: vss
DrSymmetry::solve Self-sym: ntail2
DrSymmetry::solve Self-sym: net100

DrGridRoute::runNRR	Iteration 0 Unrouted nets 2,('placement finished: ', u'CTDSM_CORE_NEW_schematic')
('origin, ', 11300, 13800)
('node ', u'ota2', 47400, 95600)
ota2 ota2 47400 95600 PLACEMENT
('node ', u'ota1', 46200, 172000)
ota1 ota1 46200 172000 PLACEMENT
('node ', u'dac3b', 0, 55400)
dac3b dac3b 0 55400 PLACEMENT
('node ', u'dac3a', 64000, 55400)
dac3a dac3a 64000 55400 PLACEMENT
('node ', u'digital0', 51800, 0)
digital0 digital0 51800 0 PLACEMENT
('node ', u'cap1', 22000, 193400)
cap1 cap1 22000 193400 PLACEMENT
('node ', u'cap2_res2', 37200, 123400)
cap2_res2 cap2_res2 37200 123400 PLACEMENT
('node ', u'CTDSM_CORE_NEW_schematic_cap3', 46600, 16800)
CTDSM_CORE_NEW_schematic_cap3 CTDSM_CORE_NEW_schematic_cap3 46600 16800 PLACEMENT
('node ', u'dac1b', 81800, 171000)
dac1b dac1b 81800 171000 PLACEMENT
('node ', u'dac1a', 3000, 171000)
dac1a dac1a 3000 171000 PLACEMENT
('node ', u'w1', 57600, 89400)
w1 w1 57600 89400 PLACEMENT
('node ', u'input_resp', 9200, 273000)
input_resp input_resp 9200 273000 PLACEMENT
('node ', u'input_resm', 87600, 273000)
input_resm input_resm 87600 273000 PLACEMENT
('addPowerStripe length ', 125400, 125400)
('width', 125800)
('width', 126200)
('fWidth', 126.2)
('width, ', 126.6, 'height', 1.8, 'vdd offset', -1.2999999999999947, 277.535)
('width, ', 126.6, 'height', 1.8, 'vss offset', -1.2999999999999947, -6.3)
generated vdd
generated vss




 add vdd 
('metal ', -1300, 277535, 125300, 279335, 36)
('pin shape', -1300, 277535, 125300, 279335)
('layer ', 6)
('adjust bbox ', 1300, -277535, 125300, 279335)




 add vss 
('metal ', -1300, -6300, 125300, -4500, 36)
('pin shape', -1300, -6300, 125300, -4500)
('layer ', 6)
('adjust bbox ', 1300, 6300, 125300, -4500)




 add vdd 
('metal ', -1300, 277535, 125300, 279335, 36)
('pin shape', -1300, 277535, 125300, 279335)
('layer ', 6)
('adjust bbox ', 1300, -277535, 125300, 279335)




 add vss 
('metal ', -1300, -6300, 125300, -4500, 36)
('pin shape', -1300, -6300, 125300, -4500)
('layer ', 6)
('adjust bbox ', 1300, 6300, 125300, -4500)
('PnR: placement finished ', u'CTDSM_CORE_NEW_schematic')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./Gm2_v5_Practice_schematic.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', False, 0)
('addShape2Pin', 0, 0, 31900, 37500, 39700, 37700)
[15950, 18750, 19850, 18850] [0, -3000]
('addPin', '1', False, 0)
('addShape2Pin', 1, 0, 18700, 37500, 26500, 37700)
[9350, 18750, 13250, 18850] [0, -3000]
('addPin', '2', False, 0)
('addShape2Pin', 2, 0, 31500, 27500, 33300, 27700)
[15750, 13750, 16650, 13850] [0, -3000]
('addPin', '3', False, 0)
('addShape2Pin', 3, 0, 25100, 27500, 26900, 27700)
[12550, 13750, 13450, 13850] [0, -3000]
('addPin', '4', False, 0)
('addShape2Pin', 4, 0, 31500, 21900, 34900, 22100)
[15750, 10950, 17450, 11050] [0, -3000]
('addPin', '5', False, 0)
('addShape2Pin', 5, 0, 23500, 21900, 26900, 22100)
[11750, 10950, 13450, 11050] [0, -3000]
('addPin', '6', False, 0)
('addShape2Pin', 6, 0, 57400, 37870, 59400, 38130)
[28700, 18935, 29700, 19065] [0, -3000]
('addPin', '7', True, 0)
('addShape2Pin', 7, 5, 31100, 30700, 40500, 30900)
[15550, 15350, 20250, 15450] [0, -3000]
('addPin', '8', True, 0)
('addShape2Pin', 8, 5, 17900, 30700, 27300, 30900)
[8950, 15350, 13650, 15450] [0, -3000]
('addPin', '9', True, 0)
('addShape2Pin', 9, 5, 30700, 25100, 34100, 25300)
[15350, 12550, 17050, 12650] [0, -3000]
('addPin', '10', True, 0)
('addShape2Pin', 10, 5, 24300, 25100, 27700, 25300)
[12150, 12550, 13850, 12650] [0, -3000]
('addPin', '11', True, 0)
('addShape2Pin', 11, 5, 30700, 19100, 35700, 19300)
[15350, 9550, 17850, 9650] [0, -3000]
('addPin', '12', True, 0)
('addShape2Pin', 12, 5, 22700, 19100, 27700, 19300)
[11350, 9550, 13850, 9650] [0, -3000]
('addPin', '13', True, 1)
('addShape2Pin', 13, 5, -1800, 40830, 60200, 44430)
[-900, 20415, 30100, 22215] [0, -3000]
('addPin', '14', False, 0)
('addShape2Pin', 14, 0, 31500, 11900, 34900, 12100)
[15750, 5950, 17450, 6050] [0, -3000]
('addPin', '15', False, 0)
('addShape2Pin', 15, 0, 57400, 13870, 59400, 14130)
[28700, 6935, 29700, 7065] [0, -3000]
('addPin', '16', False, 0)
('addShape2Pin', 16, 0, 23500, 11900, 26900, 12100)
[11750, 5950, 13450, 6050] [0, -3000]
('addPin', '17', False, 0)
('addShape2Pin', 17, 0, -1000, 13870, 1000, 14130)
[-500, 6935, 500, 7065] [0, -3000]
('addPin', '18', False, 0)
('addShape2Pin', 18, 1, 15100, 16880, 28100, 17300)
[7550, 8440, 14050, 8650] [0, -3000]
('addPin', '19', False, 0)
('addShape2Pin', 19, 0, 24300, 19900, 26100, 20100)
[12150, 9950, 13050, 10050] [0, -3000]
('addPin', '20', False, 0)
('addShape2Pin', 20, 0, 20700, 10700, 20900, 11700)
[10350, 5350, 10450, 5850] [0, -3000]
('addPin', '21', False, 0)
('addShape2Pin', 21, 0, 24300, 10300, 26100, 10500)
[12150, 5150, 13050, 5250] [0, -3000]
('addPin', '22', False, 0)
('addShape2Pin', 22, 0, -1000, 9870, 1000, 10130)
[-500, 4935, 500, 5065] [0, -3000]
('addPin', '23', False, 0)
('addShape2Pin', 23, 1, 30300, 16880, 43300, 17300)
[15150, 8440, 21650, 8650] [0, -3000]
('addPin', '24', False, 0)
('addShape2Pin', 24, 0, 32300, 19900, 34100, 20100)
[16150, 9950, 17050, 10050] [0, -3000]
('addPin', '25', False, 0)
('addShape2Pin', 25, 0, 51900, 300, 52100, 1300)
[25950, 150, 26050, 650] [0, -3000]
('addPin', '26', False, 0)
('addShape2Pin', 26, 0, 32300, 10300, 34100, 10500)
[16150, 5150, 17050, 5250] [0, -3000]
('addPin', '27', False, 0)
('addShape2Pin', 27, 0, 57400, 9870, 59400, 10130)
[28700, 4935, 29700, 5065] [0, -3000]
('addPin', '28', True, 0)
('addShape2Pin', 28, 5, 27500, 8300, 30900, 8500)
[13750, 4150, 15450, 4250] [0, -3000]
('addPin', '29', True, 0)
('addShape2Pin', 29, 5, 30300, -100, 30500, 4100)
[15150, -50, 15250, 2050] [0, -3000]
('addPin', '30', True, 0)
('addShape2Pin', 30, 5, 27900, -100, 28100, 4100)
[13950, -50, 14050, 2050] [0, -3000]
('addPin', '31', True, 1)
('addShape2Pin', 31, 5, -1800, -7800, 60200, -4200)
[-900, -3900, 30100, -2100] [0, -3000]
('addPin sub', '32', True, False)
('addShape2Pin psub shape', 5, 5100, -1700, 53300, -1500)
('addPin', '33', False, 0)
('addShape2Pin', 33, 1, 30300, 13900, 43300, 14320)
[15150, 6950, 21650, 7160] [0, -3000]
('addPin', '34', False, 0)
('addShape2Pin', 34, 1, 15100, 13900, 28100, 14320)
[7550, 6950, 14050, 7160] [0, -3000]
('addPin', '35', False, 0)
('addShape2Pin', 35, 0, 6300, 300, 6500, 1300)
[3150, 150, 3250, 650] [0, -3000]
('addPin', '36', False, 0)
('addShape2Pin', 36, 0, 37500, 10700, 37700, 11700)
[18750, 5350, 18850, 5850] [0, -3000]
('addPin', '37', False, 0)
('addShape2Pin', 37, 0, 27500, 8700, 30900, 8900)
[13750, 4350, 15450, 4450] [0, -3000]
('addPin', '38', False, 0)
('addShape2Pin', 38, 0, 30300, 4300, 35300, 4500)
[15150, 2150, 17650, 2250] [0, -3000]
('addPin', '39', False, 0)
('addShape2Pin', 39, 0, 23100, 4300, 28100, 4500)
[11550, 2150, 14050, 2250] [0, -3000]
('addPin', '40', False, 0)
('addShape2Pin', 40, 0, 28300, 5900, 30100, 6100)
[14150, 2950, 15050, 3050] [0, -3000]
('addPin', '41', False, 0)
('addShape2Pin', 41, 0, 31500, 11500, 34900, 11700)
[15750, 5750, 17450, 5850] [0, -3000]
('addPin', '42', False, 0)
('addShape2Pin', 42, 0, 23500, 11500, 26900, 11700)
[11750, 5750, 13450, 5850] [0, -3000]
('setwidth', u'Gm2_v5_Practice_schematic', u'ibias', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'ibias', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('addPin2Net ', 2, 0)
('addPin2Net ', 3, 0)
('addPin2Net ', 4, 0)
('addPin2Net ', 5, 0)
('addPin2Net ', 6, 0)
('setwidth', u'Gm2_v5_Practice_schematic', u'vdd', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vdd', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 7, 1)
('addPin2Net ', 8, 1)
('addPin2Net ', 9, 1)
('addPin2Net ', 10, 1)
('addPin2Net ', 11, 1)
('addPin2Net ', 12, 1)
('addPin2Net ', 13, 1)
('setwidth', u'Gm2_v5_Practice_schematic', u'vim', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vim', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 14, 2)
('addPin2Net ', 15, 2)
('setwidth', u'Gm2_v5_Practice_schematic', u'vip', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vip', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 16, 3)
('addPin2Net ', 17, 3)
('setwidth', u'Gm2_v5_Practice_schematic', u'vom', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vom', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 18, 4)
('addPin2Net ', 19, 4)
('addPin2Net ', 20, 4)
('addPin2Net ', 21, 4)
('addPin2Net ', 22, 4)
('setwidth', u'Gm2_v5_Practice_schematic', u'vop', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vop', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 23, 5)
('addPin2Net ', 24, 5)
('addPin2Net ', 25, 5)
('addPin2Net ', 26, 5)
('addPin2Net ', 27, 5)
('setwidth', u'Gm2_v5_Practice_schematic', u'vss', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vss', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 28, 6)
('addPin2Net ', 29, 6)
('addPin2Net ', 30, 6)
('addPin2Net ', 31, 6)
('addPin2Net pubs ver', 32, 6)
('setwidth', u'Gm2_v5_Practice_schematic', u'ntail2', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'ntail2', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 33, 7)
('addPin2Net ', 34, 7)
('addPin2Net ', 35, 7)
('addPin2Net ', 36, 7)
('addPin2Net ', 37, 7)
('addPin2Net ', 38, 7)
('addPin2Net ', 39, 7)
('setwidth', u'Gm2_v5_Practice_schematic', u'net100', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net100', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 40, 8)
('addPin2Net ', 41, 8)
('addPin2Net ', 42, 8)
('routing grid off set', 0, -6000)
AcsMgr::computeAcs Start Access Points Generation
 vdd vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vdd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vdd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vdd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net vss (fail 1)

DrGridRoute::runNRR	Iteration 1 Unrouted nets 1, vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net vss (fail 2)

DrGridRoute::runNRR	Iteration 2 Unrouted nets 1, vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 7, vop vom vip vim ibias ntail2 net100
DrGridAstar::run	Route net net100, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net ntail2, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net ntail2, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net ibias, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net ibias, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vim, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vip, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vom, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vom, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vop, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vop, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
PostMgr::patchConcaveJogs Jog-1  2 (1090 13900) (1000 13900) (1000 13870) concave
PostMgr::patchConcaveJogs Jog-2  2 (1000 14130) (1000 14100) (1090 14100) concave
PostMgr::patchConcaveJogs Jog-3  2 (24290 10530) (24290 10500) (24300 10500) concave
PostMgr::patchConcaveJogs Jog-4  2 (34100 10500) (34110 10500) (34110 10530) concave
PostMgr::patchConcaveJogs Jog-5  2 (57400 13870) (57400 13900) (57310 13900) concave
PostMgr::patchConcaveJogs Jog-6  2 (57310 14100) (57400 14100) (57400 14130) concave
Net ibias, wl: 59200, #via: 2, area: 12397800.00, degSym: 0.69
Net vdd, wl: 96800, #via: 0, area: 98251400.00, degSym: 1.00
Net vim, wl: 24800, #via: 2, area: 5397800.00, degSym: 1.00
Net vip, wl: 24800, #via: 2, area: 5397800.00, degSym: 1.00
Net vom, wl: 38800, #via: 4, area: 8742200.00, degSym: 0.98
Net vop, wl: 49600, #via: 4, area: 10902200.00, degSym: 0.77
Net vss, wl: 24800, #via: 0, area: 27651400.00, degSym: 0.35
Net ntail2, wl: 44800, #via: 5, area: 10135800.00, degSym: 0.46
Net net100, wl: 14400, #via: 0, area: 2971400.00, degSym: 1.00
Total wl: 378000, Total #via: 19, Total area: 181847800.00, Total degSym: 0.81, Avg degSym: 0.81

[INF 2020-05-13 15:23:43    16 sec]  Flow::GdsWriter:: Write circuit Gm1_v5_Practice_schematic layout to ./Gm1_v5_Practice_schematic.place.gds 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:43    13 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:43    13 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: ibias
DrSymmetry::solve Self-sym: vdd
DrSymmetry::solve Sym:      vim vip
DrSymmetry::solve Sym:      vom vop
DrSymmetry::solve Self-sym: vss
DrSymmetry::solve Self-sym: net08
DrSymmetry::solve Self-sym: ntail1

DrGridRoute::runNRR	Iteration 0 Unrouted nets 2,Writing Routing GDS Layout ./Gm2_v5_Practice_schematic.route.gds
Writing Dumb File ./Gm2_v5_Practice_schematic.ioPin
('PnR: routing finished ', u'Gm2_v5_Practice_schematic')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./Gm1_v5_Practice_schematic.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', False, 0)
('addShape2Pin', 0, 0, 21900, 32700, 29300, 32900)
[10950, 16350, 14650, 16450] [0, -3000]
('addPin', '1', False, 0)
('addShape2Pin', 1, 0, 33900, 32700, 41300, 32900)
[16950, 16350, 20650, 16450] [0, -3000]
('addPin', '2', False, 0)
('addShape2Pin', 2, 0, 33900, 22300, 34900, 22500)
[16950, 11150, 17450, 11250] [0, -3000]
('addPin', '3', False, 0)
('addShape2Pin', 3, 0, 20700, 22300, 24100, 22500)
[10350, 11150, 12050, 11250] [0, -3000]
('addPin', '4', False, 0)
('addShape2Pin', 4, 0, 28300, 22300, 29300, 22500)
[14150, 11150, 14650, 11250] [0, -3000]
('addPin', '5', False, 0)
('addShape2Pin', 5, 0, 39100, 22300, 42500, 22500)
[19550, 11150, 21250, 11250] [0, -3000]
('addPin', '6', False, 0)
('addShape2Pin', 6, 0, 62200, 21870, 64200, 22130)
[31100, 10935, 32100, 11065] [0, -3000]
('addPin', '7', True, 0)
('addShape2Pin', 7, 5, 21100, 25500, 30100, 25700)
[10550, 12750, 15050, 12850] [0, -3000]
('addPin', '8', True, 0)
('addShape2Pin', 8, 5, 33100, 25500, 42100, 25700)
[16550, 12750, 21050, 12850] [0, -3000]
('addPin', '9', True, 0)
('addShape2Pin', 9, 5, 33100, 19900, 35700, 20100)
[16550, 9950, 17850, 10050] [0, -3000]
('addPin', '10', True, 0)
('addShape2Pin', 10, 5, 19900, 19100, 24900, 19300)
[9950, 9550, 12450, 9650] [0, -3000]
('addPin', '11', True, 0)
('addShape2Pin', 11, 5, 27500, 19900, 30100, 20100)
[13750, 9950, 15050, 10050] [0, -3000]
('addPin', '12', True, 0)
('addShape2Pin', 12, 5, 38300, 19100, 43300, 19300)
[19150, 9550, 21650, 9650] [0, -3000]
('addPin', '13', True, 1)
('addShape2Pin', 13, 5, -1800, 36030, 65000, 39630)
[-900, 18015, 32500, 19815] [0, -3000]
('addPin', '14', False, 0)
('addShape2Pin', 14, 0, 33100, 9900, 39700, 10100)
[16550, 4950, 19850, 5050] [0, -3000]
('addPin', '15', False, 0)
('addShape2Pin', 15, 0, 62200, 9870, 64200, 10130)
[31100, 4935, 32100, 5065] [0, -3000]
('addPin', '16', False, 0)
('addShape2Pin', 16, 0, 23500, 9900, 30100, 10100)
[11750, 4950, 15050, 5050] [0, -3000]
('addPin', '17', False, 0)
('addShape2Pin', 17, 0, -1000, 9870, 1000, 10130)
[-500, 4935, 500, 5065] [0, -3000]
('addPin', '18', False, 0)
('addShape2Pin', 18, 0, 21500, 19900, 23300, 20100)
[10750, 9950, 11650, 10050] [0, -3000]
('addPin', '19', False, 0)
('addShape2Pin', 19, 0, 20700, 10700, 20900, 11700)
[10350, 5350, 10450, 5850] [0, -3000]
('addPin', '20', False, 0)
('addShape2Pin', 20, 0, 24300, 7900, 29300, 8100)
[12150, 3950, 14650, 4050] [0, -3000]
('addPin', '21', False, 0)
('addShape2Pin', 21, 1, 17500, 16880, 30500, 17300)
[8750, 8440, 15250, 8650] [0, -3000]
('addPin', '22', False, 0)
('addShape2Pin', 22, 0, -1000, 5870, 1000, 6130)
[-500, 2935, 500, 3065] [0, -3000]
('addPin', '23', False, 0)
('addShape2Pin', 23, 0, 39900, 19900, 41700, 20100)
[19950, 9950, 20850, 10050] [0, -3000]
('addPin', '24', False, 0)
('addShape2Pin', 24, 0, 56700, 300, 56900, 1300)
[28350, 150, 28450, 650] [0, -3000]
('addPin', '25', False, 0)
('addShape2Pin', 25, 0, 33900, 7900, 38900, 8100)
[16950, 3950, 19450, 4050] [0, -3000]
('addPin', '26', False, 0)
('addShape2Pin', 26, 1, 32700, 16880, 45700, 17300)
[16350, 8440, 22850, 8650] [0, -3000]
('addPin', '27', False, 0)
('addShape2Pin', 27, 0, 62200, 5870, 64200, 6130)
[31100, 2935, 32100, 3065] [0, -3000]
('addPin', '28', True, 0)
('addShape2Pin', 28, 5, 29900, 2300, 33300, 2500)
[14950, 1150, 16650, 1250] [0, -3000]
('addPin', '29', True, 0)
('addShape2Pin', 29, 5, 35100, -100, 35300, 4900)
[17550, -50, 17650, 2450] [0, -3000]
('addPin', '30', True, 0)
('addShape2Pin', 30, 5, 27900, -100, 28100, 4900)
[13950, -50, 14050, 2450] [0, -3000]
('addPin', '31', True, 1)
('addShape2Pin', 31, 5, -1800, -7800, 65000, -4200)
[-900, -3900, 32500, -2100] [0, -3000]
('addPin sub', '32', True, False)
('addShape2Pin psub shape', 5, 5100, -1700, 58100, -1500)
('addPin', '33', False, 0)
('addShape2Pin', 33, 0, 30700, -100, 32500, 100)
[15350, -50, 16250, 50] [0, -3000]
('addPin', '34', False, 0)
('addShape2Pin', 34, 0, 33100, 9500, 39700, 9700)
[16550, 4750, 19850, 4850] [0, -3000]
('addPin', '35', False, 0)
('addShape2Pin', 35, 0, 23500, 9500, 30100, 9700)
[11750, 4750, 15050, 4850] [0, -3000]
('addPin', '36', False, 0)
('addShape2Pin', 36, 0, 29900, 2700, 33300, 2900)
[14950, 1350, 16650, 1450] [0, -3000]
('addPin', '37', False, 0)
('addShape2Pin', 37, 0, 42300, 10700, 42500, 11700)
[21150, 5350, 21250, 5850] [0, -3000]
('addPin', '38', False, 0)
('addShape2Pin', 38, 0, 6300, 300, 6500, 1300)
[3150, 150, 3250, 650] [0, -3000]
('addPin', '39', False, 0)
('addShape2Pin', 39, 0, 35100, 5100, 40100, 5300)
[17550, 2550, 20050, 2650] [0, -3000]
('addPin', '40', False, 0)
('addShape2Pin', 40, 0, 23100, 5100, 28100, 5300)
[11550, 2550, 14050, 2650] [0, -3000]
('addPin', '41', False, 0)
('addShape2Pin', 41, 1, 32700, 13900, 45700, 14320)
[16350, 6950, 22850, 7160] [0, -3000]
('addPin', '42', False, 0)
('addShape2Pin', 42, 1, 17500, 13900, 30500, 14320)
[8750, 6950, 15250, 7160] [0, -3000]
('setwidth', u'Gm1_v5_Practice_schematic', u'ibias', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'ibias', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('addPin2Net ', 2, 0)
('addPin2Net ', 3, 0)
('addPin2Net ', 4, 0)
('addPin2Net ', 5, 0)
('addPin2Net ', 6, 0)
('setwidth', u'Gm1_v5_Practice_schematic', u'vdd', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vdd', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 7, 1)
('addPin2Net ', 8, 1)
('addPin2Net ', 9, 1)
('addPin2Net ', 10, 1)
('addPin2Net ', 11, 1)
('addPin2Net ', 12, 1)
('addPin2Net ', 13, 1)
('setwidth', u'Gm1_v5_Practice_schematic', u'vim', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vim', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 14, 2)
('addPin2Net ', 15, 2)
('setwidth', u'Gm1_v5_Practice_schematic', u'vip', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vip', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 16, 3)
('addPin2Net ', 17, 3)
('setwidth', u'Gm1_v5_Practice_schematic', u'vom', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vom', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 18, 4)
('addPin2Net ', 19, 4)
('addPin2Net ', 20, 4)
('addPin2Net ', 21, 4)
('addPin2Net ', 22, 4)
('setwidth', u'Gm1_v5_Practice_schematic', u'vop', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vop', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 23, 5)
('addPin2Net ', 24, 5)
('addPin2Net ', 25, 5)
('addPin2Net ', 26, 5)
('addPin2Net ', 27, 5)
('setwidth', u'Gm1_v5_Practice_schematic', u'vss', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vss', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 28, 6)
('addPin2Net ', 29, 6)
('addPin2Net ', 30, 6)
('addPin2Net ', 31, 6)
('addPin2Net pubs ver', 32, 6)
('setwidth', u'Gm1_v5_Practice_schematic', u'net08', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net08', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 33, 7)
('addPin2Net ', 34, 7)
('addPin2Net ', 35, 7)
('setwidth', u'Gm1_v5_Practice_schematic', u'ntail1', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'ntail1', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 36, 8)
('addPin2Net ', 37, 8)
('addPin2Net ', 38, 8)
('addPin2Net ', 39, 8)
('addPin2Net ', 40, 8)
('addPin2Net ', 41, 8)
('addPin2Net ', 42, 8)
('routing grid off set', 0, -6000)
AcsMgr::computeAcs Start Access Points Generation
 vdd vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vdd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vdd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vdd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 7, ntail1 vop vom vip vim ibias net08
DrGridAstar::run	Route net net08, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net ntail1, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net ntail1, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net ibias, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net ibias, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vim, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vip, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vom, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vom, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vop, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vop, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
PostMgr::patchConcaveJogs Jog-1  2 (1090 5900) (1000 5900) (1000 5870) concave
PostMgr::patchConcaveJogs Jog-2  2 (1000 6130) (1000 6100) (1090 6100) concave
PostMgr::patchConcaveJogs Jog-3  2 (1090 9930) (1000 9930) (1000 9870) concave
PostMgr::patchConcaveJogs Jog-4  2 (1000 10130) (1000 10070) (1090 10070) concave
PostMgr::patchConcaveJogs Jog-5  2 (29090 8130) (29090 8100) (29100 8100) concave
PostMgr::patchConcaveJogs Jog-6  2 (34100 8100) (34110 8100) (34110 8130) concave
PostMgr::patchConcaveJogs Jog-7  2 (62200 5870) (62200 5900) (62110 5900) concave
PostMgr::patchConcaveJogs Jog-8  2 (62110 6100) (62200 6100) (62200 6130) concave
PostMgr::patchConcaveJogs Jog-9  2 (62200 9870) (62200 9930) (62110 9930) concave
PostMgr::patchConcaveJogs Jog-10  2 (62110 10070) (62200 10070) (62200 10130) concave
Net ibias, wl: 57600, #via: 2, area: 12179400.00, degSym: 0.64
Net vdd, wl: 88800, #via: 0, area: 94833000.00, degSym: 1.00
Net vim, wl: 22800, #via: 2, area: 4946600.00, degSym: 1.00
Net vip, wl: 22800, #via: 2, area: 4946600.00, degSym: 1.00
Net vom, wl: 45600, #via: 7, area: 10981400.00, degSym: 0.92
Net vop, wl: 48800, #via: 7, area: 11697400.00, degSym: 0.86
Net vss, wl: 18400, #via: 0, area: 22433000.00, degSym: 0.48
Net net08, wl: 21600, #via: 0, area: 4433000.00, degSym: 1.00
Net ntail1, wl: 52000, #via: 5, area: 11718200.00, degSym: 0.52
Total wl: 378400, Total #via: 25, Total area: 178168600.00, Total degSym: 0.83, Avg degSym: 0.82

[INF 2020-05-13 15:23:43    16 sec]  Flow::GdsWriter:: Write circuit DAC3 layout to ./DAC3.place.gds 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: clkb
DrSymmetry::solve Self-sym: in
DrSymmetry::solve Self-sym: r3
DrSymmetry::solve Self-sym: r4
DrSymmetry::solve Self-sym: rstb
DrSymmetry::solve Self-sym: vdd
DrSymmetry::solve Self-sym: vss
DrSymmetry::solve Self-sym: out
DrSymmetry::solve Self-sym: net10

DrGridRoute::runNRR	Iteration 0 Unrouted nets 2,Writing Routing GDS Layout ./Gm1_v5_Practice_schematic.route.gds
Writing Dumb File ./Gm1_v5_Practice_schematic.ioPin
('PnR: routing finished ', u'Gm1_v5_Practice_schematic')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./DAC3.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', False, 0)
('addShape2Pin', 0, 1, 59100, 3100, 60940, 3300)
[29550, 1550, 30470, 1650] [0, -2000]
('addPin', '1', False, 0)
('addShape2Pin', 1, 1, 47500, 3100, 49340, 3300)
[23750, 1550, 24670, 1650] [0, -2000]
('addPin', '2', False, 0)
('addShape2Pin', 2, 0, 118200, -130, 120200, 130)
[59100, -65, 60100, 65] [0, -2000]
('addPin', '3', False, 0)
('addShape2Pin', 3, 0, 6300, 2300, 6500, 4900)
[3150, 1150, 3250, 2450] [0, -2000]
('addPin', '4', False, 0)
('addShape2Pin', 4, 1, 62300, 3120, 62500, 4100)
[31150, 1560, 31250, 2050] [0, -2000]
('addPin', '5', False, 0)
('addShape2Pin', 5, 0, 56030, 3100, 56900, 3300)
[28015, 1550, 28450, 1650] [0, -2000]
('addPin', '6', False, 0)
('addShape2Pin', 6, 0, -1000, -130, 1000, 130)
[-500, -65, 500, 65] [0, -2000]
('addPin', '7', False, 0)
('addShape2Pin', 7, 0, 70700, 51500, 70900, 54100)
[35350, 25750, 35450, 27050] [0, -2000]
('addPin', '8', False, 0)
('addShape2Pin', 8, 0, 118200, 51870, 120200, 52130)
[59100, 25935, 60100, 26065] [0, -2000]
('addPin', '9', False, 0)
('addShape2Pin', 9, 0, 6300, 10700, 6500, 13700)
[3150, 5350, 3250, 6850] [0, -2000]
('addPin', '10', False, 0)
('addShape2Pin', 10, 0, -1000, 11870, 1000, 12130)
[-500, 5935, 500, 6065] [0, -2000]
('addPin', '11', False, 0)
('addShape2Pin', 11, 1, 66300, 3400, 66500, 4100)
[33150, 1700, 33250, 2050] [0, -2000]
('addPin', '12', False, 0)
('addShape2Pin', 12, 1, 54700, 3400, 54900, 4100)
[27350, 1700, 27450, 2050] [0, -2000]
('addPin', '13', False, 0)
('addShape2Pin', 13, 0, 118200, 3870, 120200, 4130)
[59100, 1935, 60100, 2065] [0, -2000]
('addPin', '14', True, 0)
('addShape2Pin', 14, 5, 59100, 4420, 68500, 4900)
[29550, 2210, 34250, 2450] [0, -2000]
('addPin', '15', True, 0)
('addShape2Pin', 15, 5, 47500, 4420, 56900, 4900)
[23750, 2210, 28450, 2450] [0, -2000]
('addPin', '16', True, 1)
('addShape2Pin', 16, 5, -1400, 56980, 121400, 60580)
[-700, 28490, 60700, 30290] [0, -2000]
('addPin', '17', True, 0)
('addShape2Pin', 17, 5, 59100, 1900, 68500, 2360)
[29550, 950, 34250, 1180] [0, -2000]
('addPin', '18', True, 0)
('addShape2Pin', 18, 5, 47500, 1900, 56900, 2360)
[23750, 950, 28450, 1180] [0, -2000]
('addPin', '19', True, 1)
('addShape2Pin', 19, 5, -1400, -5800, 121400, -2200)
[-700, -2900, 60700, -1100] [0, -2000]
('addPin sub', '20', True, False)
('addShape2Pin psub shape', 5, 5100, 300, 113300, 500)
('addPin', '21', False, 0)
('addShape2Pin', 21, 1, 50700, 3120, 50900, 4100)
[25350, 1560, 25450, 2050] [0, -2000]
('addPin', '22', False, 0)
('addShape2Pin', 22, 0, -1000, 3870, 1000, 4130)
[-500, 1935, 500, 2065] [0, -2000]
('addPin', '23', False, 0)
('addShape2Pin', 23, 0, 70700, 2300, 70900, 4900)
[35350, 1150, 35450, 2450] [0, -2000]
('addPin', '24', False, 0)
('addShape2Pin', 24, 0, 67630, 3100, 68500, 3300)
[33815, 1550, 34250, 1650] [0, -2000]
('setwidth', u'DAC3', u'clkb', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'clkb', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('addPin2Net ', 2, 0)
('setwidth', u'DAC3', u'in', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'in', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 3, 1)
('addPin2Net ', 4, 1)
('addPin2Net ', 5, 1)
('addPin2Net ', 6, 1)
('setwidth', u'DAC3', u'r3', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'r3', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 7, 2)
('addPin2Net ', 8, 2)
('setwidth', u'DAC3', u'r4', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'r4', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 9, 3)
('addPin2Net ', 10, 3)
('setwidth', u'DAC3', u'rstb', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'rstb', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 11, 4)
('addPin2Net ', 12, 4)
('addPin2Net ', 13, 4)
('setwidth', u'DAC3', u'vdd', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vdd', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 14, 5)
('addPin2Net ', 15, 5)
('addPin2Net ', 16, 5)
('setwidth', u'DAC3', u'vss', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vss', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 17, 6)
('addPin2Net ', 18, 6)
('addPin2Net ', 19, 6)
('addPin2Net pubs ver', 20, 6)
('setwidth', u'DAC3', u'out', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'out', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 21, 7)
('addPin2Net ', 22, 7)
('setwidth', u'DAC3', u'net10', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net10', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 23, 8)
('addPin2Net ', 24, 8)
('routing grid off set', 0, -4000)
AcsMgr::computeAcs Start Access Points Generation
 vdd vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vdd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 7, out rstb clkb in r3 r4 net10
DrGridAstar::run	Route net net10, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net net10, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net r4, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net r4, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net r3, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net r3, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net out, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net out, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clkb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net clkb, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net in (fail 1)

DrGridRoute::runNRR	Iteration 1 Unrouted nets 1, in
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net in (fail 2)

DrGridRoute::runNRR	Iteration 2 Unrouted nets 1, in
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
Net clkb, wl: 71200, #via: 5, area: 15876000.00, degSym: 0.15
Net in, wl: 65600, #via: 4, area: 14644800.00, degSym: 0.00
Net r3, wl: 47600, #via: 2, area: 10107600.00, degSym: 0.00
Net r4, wl: 5600, #via: 2, area: 1707600.00, degSym: 0.00
Net rstb, wl: 65600, #via: 1, area: 13711200.00, degSym: 0.21
Net vdd, wl: 104800, #via: 0, area: 106800000.00, degSym: 1.00
Net vss, wl: 11600, #via: 0, area: 14600000.00, degSym: 0.76
Net out, wl: 50000, #via: 1, area: 10351200.00, degSym: 0.00
Net net10, wl: 2400, #via: 0, area: 520000.00, degSym: 0.00
Total wl: 424400, Total #via: 15, Total area: 188318400.00, Total degSym: 0.32, Avg degSym: 0.23

[INF 2020-05-13 15:23:44    17 sec]  Flow::GdsWriter:: Write circuit DIGITAL_TOP_flat layout to ./DIGITAL_TOP_flat.place.gds 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: clk
DrSymmetry::solve Self-sym: vssd
DrSymmetry::solve Self-sym: vddd
DrSymmetry::solve Sym:      vo3p vo3m
DrSymmetry::solve Sym:      outm outp
DrSymmetry::solve Sym:      net072 net071
DrSymmetry::solve Sym:      intern interp
DrSymmetry::solve Sym:      crossp crossn
DrSymmetry::solve Self-sym: net069

DrGridRoute::runNRR	Iteration 0 Unrouted nets 2,Writing Routing GDS Layout ./DAC3.route.gds
Writing Dumb File ./DAC3.ioPin
('PnR: routing finished ', u'DAC3')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./DIGITAL_TOP_flat.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', False, 0)
('addShape2Pin', 0, 0, 17100, 13100, 23700, 13300)
[8550, 6550, 11850, 6650] [0, -2600]
('addPin', '1', False, 0)
('addShape2Pin', 1, 0, 7500, 18300, 9300, 18500)
[3750, 9150, 4650, 9250] [0, -2600]
('addPin', '2', False, 0)
('addShape2Pin', 2, 0, 31500, 18300, 33300, 18500)
[15750, 9150, 16650, 9250] [0, -2600]
('addPin', '3', False, 0)
('addShape2Pin', 3, 0, 7500, 24300, 9300, 24500)
[3750, 12150, 4650, 12250] [0, -2600]
('addPin', '4', False, 0)
('addShape2Pin', 4, 0, 31500, 24300, 33300, 24500)
[15750, 12150, 16650, 12250] [0, -2600]
('addPin', '5', False, 0)
('addShape2Pin', 5, 0, 39800, 18270, 41800, 18530)
[19900, 9135, 20900, 9265] [0, -2600]
('addPin', '6', True, 0)
('addShape2Pin', 6, 5, 12700, -100, 28500, 360)
[6350, -50, 14250, 180] [0, -2600]
('addPin', '7', True, 0)
('addShape2Pin', 7, 5, 7900, 300, 8100, 2500)
[3950, 150, 4050, 1250] [0, -2600]
('addPin', '8', True, 0)
('addShape2Pin', 8, 5, 32700, 300, 32900, 2500)
[16350, 150, 16450, 1250] [0, -2600]
('addPin', '9', True, 0)
('addShape2Pin', 9, 5, 21900, 7100, 23700, 7300)
[10950, 3550, 11850, 3650] [0, -2600]
('addPin', '10', True, 0)
('addShape2Pin', 10, 5, 17100, 7100, 18900, 7300)
[8550, 3550, 9450, 3650] [0, -2600]
('addPin', '11', True, 0)
('addShape2Pin', 11, 5, 17100, 12700, 23700, 12900)
[8550, 6350, 11850, 6450] [0, -2600]
('addPin', '12', True, 1)
('addShape2Pin', 12, 5, -1800, -7000, 42600, -3400)
[-900, -3500, 21300, -1700] [0, -2600]
('addPin sub', '13', True, False)
('addShape2Pin psub shape', 5, 5100, -900, 35700, -700)
('addPin', '14', True, 0)
('addShape2Pin', 14, 5, 12700, 2420, 28500, 2900)
[6350, 1210, 14250, 1450] [0, -2600]
('addPin', '15', True, 0)
('addShape2Pin', 15, 5, 26300, 4700, 30500, 4900)
[13150, 2350, 15250, 2450] [0, -2600]
('addPin', '16', True, 0)
('addShape2Pin', 16, 5, 6300, 15500, 10500, 15700)
[3150, 7750, 5250, 7850] [0, -2600]
('addPin', '17', True, 0)
('addShape2Pin', 17, 5, 10300, 4700, 14500, 4900)
[5150, 2350, 7250, 2450] [0, -2600]
('addPin', '18', True, 0)
('addShape2Pin', 18, 5, 30300, 15500, 34500, 15700)
[15150, 7750, 17250, 7850] [0, -2600]
('addPin', '19', True, 0)
('addShape2Pin', 19, 5, 6300, 21500, 10500, 21700)
[3150, 10750, 5250, 10850] [0, -2600]
('addPin', '20', True, 0)
('addShape2Pin', 20, 5, 30300, 21500, 34500, 21700)
[15150, 10750, 17250, 10850] [0, -2600]
('addPin', '21', True, 0)
('addShape2Pin', 21, 5, 21900, 18700, 27700, 18900)
[10950, 9350, 13850, 9450] [0, -2600]
('addPin', '22', True, 0)
('addShape2Pin', 22, 5, 13100, 18700, 18900, 18900)
[6550, 9350, 9450, 9450] [0, -2600]
('addPin', '23', True, 1)
('addShape2Pin', 23, 5, -1800, 27630, 42600, 31230)
[-900, 13815, 21300, 15615] [0, -2600]
('addPin', '24', False, 0)
('addShape2Pin', 24, 0, 6300, 13500, 12900, 13700)
[3150, 6750, 6450, 6850] [0, -2600]
('addPin', '25', False, 0)
('addShape2Pin', 25, 0, -1000, 14270, 1000, 14530)
[-500, 7135, 500, 7265] [0, -2600]
('addPin', '26', False, 0)
('addShape2Pin', 26, 0, 27900, 13500, 34500, 13700)
[13950, 6750, 17250, 6850] [0, -2600]
('addPin', '27', False, 0)
('addShape2Pin', 27, 0, 39800, 14270, 41800, 14530)
[19900, 7135, 20900, 7265] [0, -2600]
('addPin', '28', False, 0)
('addShape2Pin', 28, 1, 22300, 700, 22500, 2100)
[11150, 350, 11250, 1050] [0, -2600]
('addPin', '29', False, 0)
('addShape2Pin', 29, 0, 39800, 2270, 41800, 2530)
[19900, 1135, 20900, 1265] [0, -2600]
('addPin', '30', False, 0)
('addShape2Pin', 30, 1, 18700, 700, 18900, 2100)
[9350, 350, 9450, 1050] [0, -2600]
('addPin', '31', False, 0)
('addShape2Pin', 31, 0, -1000, 2270, 1000, 2530)
[-500, 1135, 500, 1265] [0, -2600]
('addPin', '32', False, 0)
('addShape2Pin', 32, 1, 25100, 1100, 28500, 1300)
[12550, 550, 14250, 650] [0, -2600]
('addPin', '33', False, 0)
('addShape2Pin', 33, 0, 22300, 5500, 23300, 5700)
[11150, 2750, 11650, 2850] [0, -2600]
('addPin', '34', False, 0)
('addShape2Pin', 34, 0, 27900, 5500, 28900, 5700)
[13950, 2750, 14450, 2850] [0, -2600]
('addPin', '35', False, 0)
('addShape2Pin', 35, 1, 12700, 1100, 16030, 1300)
[6350, 550, 8015, 650] [0, -2600]
('addPin', '36', False, 0)
('addShape2Pin', 36, 0, 17500, 5500, 18500, 5700)
[8750, 2750, 9250, 2850] [0, -2600]
('addPin', '37', False, 0)
('addShape2Pin', 37, 0, 11900, 5500, 12900, 5700)
[5950, 2750, 6450, 2850] [0, -2600]
('addPin', '38', False, 0)
('addShape2Pin', 38, 0, 7900, 2700, 10500, 2900)
[3950, 1350, 5250, 1450] [0, -2600]
('addPin', '39', False, 0)
('addShape2Pin', 39, 0, 15500, 16300, 17300, 16500)
[7750, 8150, 8650, 8250] [0, -2600]
('addPin', '40', False, 0)
('addShape2Pin', 40, 0, 6700, 10300, 12500, 10500)
[3350, 5150, 6250, 5250] [0, -2600]
('addPin', '41', False, 0)
('addShape2Pin', 41, 0, 7900, 16300, 8900, 16500)
[3950, 8150, 4450, 8250] [0, -2600]
('addPin', '42', False, 0)
('addShape2Pin', 42, 0, 30300, 2700, 32900, 2900)
[15150, 1350, 16450, 1450] [0, -2600]
('addPin', '43', False, 0)
('addShape2Pin', 43, 0, 23500, 16300, 25300, 16500)
[11750, 8150, 12650, 8250] [0, -2600]
('addPin', '44', False, 0)
('addShape2Pin', 44, 0, 28300, 10300, 34100, 10500)
[14150, 5150, 17050, 5250] [0, -2600]
('addPin', '45', False, 0)
('addShape2Pin', 45, 0, 31900, 16300, 32900, 16500)
[15950, 8150, 16450, 8250] [0, -2600]
('addPin', '46', False, 0)
('addShape2Pin', 46, 0, 21900, 7500, 23700, 7700)
[10950, 3750, 11850, 3850] [0, -2600]
('addPin', '47', False, 0)
('addShape2Pin', 47, 0, 15500, 16700, 17300, 16900)
[7750, 8350, 8650, 8450] [0, -2600]
('addPin', '48', False, 0)
('addShape2Pin', 48, 0, 23900, 14700, 24900, 14900)
[11950, 7350, 12450, 7450] [0, -2600]
('addPin', '49', False, 0)
('addShape2Pin', 49, 0, 27500, 7500, 29300, 7700)
[13750, 3750, 14650, 3850] [0, -2600]
('addPin', '50', False, 0)
('addShape2Pin', 50, 0, 31900, 22300, 32900, 22500)
[15950, 11150, 16450, 11250] [0, -2600]
('addPin', '51', False, 0)
('addShape2Pin', 51, 0, 23100, 21500, 26500, 21700)
[11550, 10750, 13250, 10850] [0, -2600]
('addPin', '52', False, 0)
('addShape2Pin', 52, 0, 14700, 19500, 17300, 19700)
[7350, 9750, 8650, 9850] [0, -2600]
('addPin', '53', False, 0)
('addShape2Pin', 53, 0, 17100, 7500, 18900, 7700)
[8550, 3750, 9450, 3850] [0, -2600]
('addPin', '54', False, 0)
('addShape2Pin', 54, 0, 15900, 14700, 16900, 14900)
[7950, 7350, 8450, 7450] [0, -2600]
('addPin', '55', False, 0)
('addShape2Pin', 55, 0, 23500, 16700, 25300, 16900)
[11750, 8350, 12650, 8450] [0, -2600]
('addPin', '56', False, 0)
('addShape2Pin', 56, 0, 11500, 7500, 13300, 7700)
[5750, 3750, 6650, 3850] [0, -2600]
('addPin', '57', False, 0)
('addShape2Pin', 57, 0, 7900, 22300, 8900, 22500)
[3950, 11150, 4450, 11250] [0, -2600]
('addPin', '58', False, 0)
('addShape2Pin', 58, 0, 23500, 19500, 26100, 19700)
[11750, 9750, 13050, 9850] [0, -2600]
('addPin', '59', False, 0)
('addShape2Pin', 59, 0, 14300, 21500, 17700, 21700)
[7150, 10750, 8850, 10850] [0, -2600]
('addPin', '60', False, 0)
('addShape2Pin', 60, 0, 17500, 11100, 23300, 11300)
[8750, 5550, 11650, 5650] [0, -2600]
('addPin', '61', False, 0)
('addShape2Pin', 61, 0, 6300, 13100, 12900, 13300)
[3150, 6550, 6450, 6650] [0, -2600]
('addPin', '62', False, 0)
('addShape2Pin', 62, 0, 27900, 13100, 34500, 13300)
[13950, 6550, 17250, 6650] [0, -2600]
('setwidth', u'DIGITAL_TOP_flat', u'clk', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'clk', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('addPin2Net ', 2, 0)
('addPin2Net ', 3, 0)
('addPin2Net ', 4, 0)
('addPin2Net ', 5, 0)
('setwidth', u'DIGITAL_TOP_flat', u'vssd', 0.3)
('setvia', 9, 3, 3)
('addNet netname', u'vssd', 'width', 600, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 6, 1)
('addPin2Net ', 7, 1)
('addPin2Net ', 8, 1)
('addPin2Net ', 9, 1)
('addPin2Net ', 10, 1)
('addPin2Net ', 11, 1)
('addPin2Net ', 12, 1)
('addPin2Net pubs ver', 13, 1)
('setwidth', u'DIGITAL_TOP_flat', u'vddd', 0.3)
('setvia', 9, 3, 3)
('addNet netname', u'vddd', 'width', 600, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 14, 2)
('addPin2Net ', 15, 2)
('addPin2Net ', 16, 2)
('addPin2Net ', 17, 2)
('addPin2Net ', 18, 2)
('addPin2Net ', 19, 2)
('addPin2Net ', 20, 2)
('addPin2Net ', 21, 2)
('addPin2Net ', 22, 2)
('addPin2Net ', 23, 2)
('setwidth', u'DIGITAL_TOP_flat', u'vo3p', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo3p', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 24, 3)
('addPin2Net ', 25, 3)
('setwidth', u'DIGITAL_TOP_flat', u'vo3m', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo3m', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 26, 4)
('addPin2Net ', 27, 4)
('setwidth', u'DIGITAL_TOP_flat', u'outm', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'outm', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 28, 5)
('addPin2Net ', 29, 5)
('setwidth', u'DIGITAL_TOP_flat', u'outp', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'outp', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 30, 6)
('addPin2Net ', 31, 6)
('setwidth', u'DIGITAL_TOP_flat', u'net072', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net072', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 32, 7)
('addPin2Net ', 33, 7)
('addPin2Net ', 34, 7)
('setwidth', u'DIGITAL_TOP_flat', u'net071', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net071', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 35, 8)
('addPin2Net ', 36, 8)
('addPin2Net ', 37, 8)
('setwidth', u'DIGITAL_TOP_flat', u'intern', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'intern', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 38, 9)
('addPin2Net ', 39, 9)
('addPin2Net ', 40, 9)
('addPin2Net ', 41, 9)
('setwidth', u'DIGITAL_TOP_flat', u'interp', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'interp', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 42, 10)
('addPin2Net ', 43, 10)
('addPin2Net ', 44, 10)
('addPin2Net ', 45, 10)
('setwidth', u'DIGITAL_TOP_flat', u'crossp', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'crossp', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 46, 11)
('addPin2Net ', 47, 11)
('addPin2Net ', 48, 11)
('addPin2Net ', 49, 11)
('addPin2Net ', 50, 11)
('addPin2Net ', 51, 11)
('addPin2Net ', 52, 11)
('setwidth', u'DIGITAL_TOP_flat', u'crossn', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'crossn', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 53, 12)
('addPin2Net ', 54, 12)
('addPin2Net ', 55, 12)
('addPin2Net ', 56, 12)
('addPin2Net ', 57, 12)
('addPin2Net ', 58, 12)
('addPin2Net ', 59, 12)
('setwidth', u'DIGITAL_TOP_flat', u'net069', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net069', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 60, 13)
('addPin2Net ', 61, 13)
('addPin2Net ', 62, 13)
('routing grid off set', 0, -5200)
AcsMgr::computeAcs Start Access Points Generation
 vddd vssd
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net vssd (fail 1)
DrGridRoute::ripupSingleNet Ripup net vddd (fail 1)

DrGridRoute::runNRR	Iteration 1 Unrouted nets 2, vddd vssd
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net vddd failed!
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	Route net vddd, Sym: 0, SelfSym: 0, StrictDRC: 0 
DrGridRoute::ripupSingleNet Ripup net vssd (fail 2)

DrGridRoute::runNRR	Iteration 2 Unrouted nets 1, vssd
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net vssd (fail 3)

DrGridRoute::runNRR	Iteration 3 Unrouted nets 1, vssd
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net vssd (fail 4)

DrGridRoute::runNRR	Iteration 4 Unrouted nets 1, vssd
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net vssd (fail 5)

DrGridRoute::runNRR	Iteration 5 Unrouted nets 1, vssd
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vssd, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 12, crossn crossp interp intern net071 net072 outp outm vo3m vo3p clk net069
DrGridAstar::run	Route net net069, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net clk, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net clk, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net072, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net072, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net071, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net071, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outm, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outm, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outp, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outp, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net intern, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net interp, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net crossp, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net crossp, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net crossp, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net crossn, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net crossn, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net crossn, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
PostMgr::patchConcaveJogs Jog-1  2 (1090 14300) (1000 14300) (1000 14270) concave
PostMgr::patchConcaveJogs Jog-2  2 (1000 14530) (1000 14500) (1090 14500) concave
PostMgr::patchConcaveJogs Jog-3  2 (16100 14900) (16110 14900) (16110 14930) concave
PostMgr::patchConcaveJogs Jog-4  2 (16690 14930) (16690 14900) (16700 14900) concave
PostMgr::patchConcaveJogs Jog-5  2 (24100 14900) (24110 14900) (24110 14930) concave
PostMgr::patchConcaveJogs Jog-6  2 (24690 14930) (24690 14900) (24700 14900) concave
PostMgr::patchConcaveJogs Jog-7  2 (39800 14270) (39800 14300) (39710 14300) concave
PostMgr::patchConcaveJogs Jog-8  2 (39710 14500) (39800 14500) (39800 14530) concave
Net clk, wl: 52000, #via: 2, area: 10925600.00, degSym: 0.86
Net vssd, wl: 73600, #via: 4, area: 44661200.00, degSym: 0.14
Net vddd, wl: 130800, #via: 0, area: 81732000.00, degSym: 0.78
Net vo3p, wl: 6400, #via: 2, area: 1718400.00, degSym: 1.00
Net vo3m, wl: 6400, #via: 2, area: 1718400.00, degSym: 1.00
Net outm, wl: 20000, #via: 1, area: 4207200.00, degSym: 0.10
Net outp, wl: 21200, #via: 1, area: 4447200.00, degSym: 0.09
Net net072, wl: 14000, #via: 2, area: 3165600.00, degSym: 0.54
Net net071, wl: 13600, #via: 2, area: 3085600.00, degSym: 0.56
Net intern, wl: 21200, #via: 3, area: 4940400.00, degSym: 1.00
Net interp, wl: 21200, #via: 3, area: 4940400.00, degSym: 1.00
Net crossp, wl: 38800, #via: 6, area: 9102800.00, degSym: 0.94
Net crossn, wl: 38800, #via: 6, area: 9102800.00, degSym: 0.94
Net net069, wl: 13600, #via: 0, area: 2812000.00, degSym: 1.00
Total wl: 471600, Total #via: 34, Total area: 186559600.00, Total degSym: 0.68, Avg degSym: 0.71

[INF 2020-05-13 15:23:44    17 sec]  Flow::GdsWriter:: Write circuit CAP1 layout to ./CAP1.place.gds 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:44    14 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:44    14 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: vo1p
DrSymmetry::solve Self-sym: vo1m

DrGridRoute::runNRR	Iteration 0 Unrouted nets 0,Writing Routing GDS Layout ./DIGITAL_TOP_flat.route.gds
Writing Dumb File ./DIGITAL_TOP_flat.ioPin
('PnR: routing finished ', u'DIGITAL_TOP_flat')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./CAP1.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', False, 0)
('addShape2Pin', 0, 1, 5900, 74700, 78900, 75120)
[2950, 37350, 39450, 37560] [0, 0]
('addPin', '1', False, 0)
('addShape2Pin', 1, 1, 5900, -100, 78900, 320)
[2950, -50, 39450, 160] [0, 0]
('addPin', '2', False, 0)
('addShape2Pin', 2, 1, 81100, -100, 154100, 320)
[40550, -50, 77050, 160] [0, 0]
('addPin', '3', False, 0)
('addShape2Pin', 3, 1, 81100, 74700, 154100, 75120)
[40550, 37350, 77050, 37560] [0, 0]
('addPin', '4', False, 0)
('addShape2Pin', 4, 0, -1000, 74270, 1000, 74530)
[-500, 37135, 500, 37265] [0, 0]
('addPin', '5', False, 0)
('addShape2Pin', 5, 1, 5900, 147680, 78900, 148100)
[2950, 73840, 39450, 74050] [0, 0]
('addPin', '6', False, 0)
('addShape2Pin', 6, 1, 5900, 72880, 78900, 73300)
[2950, 36440, 39450, 36650] [0, 0]
('addPin', '7', False, 0)
('addShape2Pin', 7, 1, 81100, 72880, 154100, 73300)
[40550, 36440, 77050, 36650] [0, 0]
('addPin', '8', False, 0)
('addShape2Pin', 8, 1, 81100, 147680, 154100, 148100)
[40550, 73840, 77050, 74050] [0, 0]
('addPin', '9', False, 0)
('addShape2Pin', 9, 0, 159000, 74270, 161000, 74530)
[79500, 37135, 80500, 37265] [0, 0]
('setwidth', u'CAP1', u'vo1p', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo1p', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('addPin2Net ', 2, 0)
('addPin2Net ', 3, 0)
('addPin2Net ', 4, 0)
('setwidth', u'CAP1', u'vo1m', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo1m', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 5, 1)
('addPin2Net ', 6, 1)
('addPin2Net ', 7, 1)
('addPin2Net ', 8, 1)
('addPin2Net ', 9, 1)
('routing grid off set', 0, 0)
AcsMgr::computeAcs Start Access Points Generation

DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 2, vo1p vo1m
DrGridAstar::run	Route net vo1m, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vo1m, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo1p, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vo1p, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
Net vo1p, wl: 160400, #via: 1, area: 32756400.00, degSym: 0.97
Net vo1m, wl: 159200, #via: 1, area: 32580800.00, degSym: 0.96
Total wl: 319600, Total #via: 2, Total area: 65337200.00, Total degSym: 0.96, Avg degSym: 0.96

[INF 2020-05-13 15:23:53    26 sec]  Flow::GdsWriter:: Write circuit CAP2_RES2 layout to ./CAP2_RES2.place.gds 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:54    24 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:54    24 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Sym:      vo2m vo2p
DrSymmetry::solve Self-sym: vss
DrSymmetry::solve Sym:      net074 net073

DrGridRoute::runNRR	Iteration 0 Unrouted nets 1,Writing Routing GDS Layout ./CAP1.route.gds
Writing Dumb File ./CAP1.ioPin
('PnR: routing finished ', u'CAP1')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./CAP2_RES2.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', False, 0)
('addShape2Pin', 0, 0, 92300, -100, 92500, 14100)
[46150, -50, 46250, 7050] [0, -3200]
('addPin', '1', False, 0)
('addShape2Pin', 1, 0, 98200, 5470, 100200, 5730)
[49100, 2735, 50100, 2865] [0, -3200]
('addPin', '2', False, 0)
('addShape2Pin', 2, 0, 6700, -100, 6900, 14100)
[3350, -50, 3450, 7050] [0, -3200]
('addPin', '3', False, 0)
('addShape2Pin', 3, 0, -1000, 5470, 1000, 5730)
[-500, 2735, 500, 2865] [0, -3200]
('addPin', '4', True, 1)
('addShape2Pin', 4, 5, -1800, -8200, 101000, -4600)
[-900, -4100, 50500, -2300] [0, -3200]
('addPin sub', '5', True, False)
('addShape2Pin psub shape', 5, 5500, -2100, 93700, -1900)
('addPin', '6', False, 0)
('addShape2Pin', 6, 1, 19900, 16300, 78900, 16720)
[9950, 8150, 39450, 8360] [0, -3200]
('addPin', '7', False, 0)
('addShape2Pin', 7, 0, 47900, -100, 48100, 14100)
[23950, -50, 24050, 7050] [0, -3200]
('addPin', '8', False, 0)
('addShape2Pin', 8, 1, 19900, 85280, 78900, 85700)
[9950, 42640, 39450, 42850] [0, -3200]
('addPin', '9', False, 0)
('addShape2Pin', 9, 0, 51100, -100, 51300, 14100)
[25550, -50, 25650, 7050] [0, -3200]
('setwidth', u'CAP2_RES2', u'vo2m', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo2m', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('setwidth', u'CAP2_RES2', u'vo2p', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo2p', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 2, 1)
('addPin2Net ', 3, 1)
('setwidth', u'CAP2_RES2', u'vss', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vss', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 4, 2)
('addPin2Net pubs ver', 5, 2)
('setwidth', u'CAP2_RES2', u'net074', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net074', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 6, 3)
('addPin2Net ', 7, 3)
('setwidth', u'CAP2_RES2', u'net073', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net073', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 8, 4)
('addPin2Net ', 9, 4)
('routing grid off set', 0, -6400)
AcsMgr::computeAcs Start Access Points Generation
 vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 4, net073 net074 vo2m vo2p
DrGridAstar::run	Route net vo2p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo2m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net074, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net074, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net073, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net073, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
PostMgr::patchConcaveJogs Jog-1  2 (1090 5530) (1000 5530) (1000 5470) concave
PostMgr::patchConcaveJogs Jog-2  2 (1000 5730) (1000 5670) (1090 5670) concave
PostMgr::patchConcaveJogs Jog-3  2 (98200 5470) (98200 5530) (98110 5530) concave
PostMgr::patchConcaveJogs Jog-4  2 (98110 5670) (98200 5670) (98200 5730) concave
Net vo2m, wl: 6000, #via: 2, area: 1575200.00, degSym: 1.00
Net vo2p, wl: 6000, #via: 2, area: 1575200.00, degSym: 1.00
Net vss, wl: 2800, #via: 0, area: 3821600.00, degSym: 0.00
Net net074, wl: 2400, #via: 1, area: 836400.00, degSym: 0.00
Net net073, wl: 100000, #via: 1, area: 20220000.00, degSym: 0.00
Total wl: 117200, Total #via: 6, Total area: 28028400.00, Total degSym: 0.10, Avg degSym: 0.40

[INF 2020-05-13 15:23:55    28 sec]  Flow::GdsWriter:: Write circuit DAC1 layout to ./DAC1.place.gds 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: clk
DrSymmetry::solve Self-sym: in
DrSymmetry::solve Self-sym: r1
DrSymmetry::solve Self-sym: r2
DrSymmetry::solve Self-sym: rstb
DrSymmetry::solve Self-sym: vdd
DrSymmetry::solve Self-sym: vss
DrSymmetry::solve Self-sym: out
DrSymmetry::solve Self-sym: net3

DrGridRoute::runNRR	Iteration 0 Unrouted nets 2,Writing Routing GDS Layout ./CAP2_RES2.route.gds
Writing Dumb File ./CAP2_RES2.ioPin
('PnR: routing finished ', u'CAP2_RES2')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./DAC1.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', False, 0)
('addShape2Pin', 0, 1, 50700, 3900, 52540, 4100)
[25350, 1950, 26270, 2050] [0, -2000]
('addPin', '1', False, 0)
('addShape2Pin', 1, 1, 62300, 3900, 64140, 4100)
[31150, 1950, 32070, 2050] [0, -2000]
('addPin', '2', False, 0)
('addShape2Pin', 2, 0, -1000, 3870, 1000, 4130)
[-500, 1935, 500, 2065] [0, -2000]
('addPin', '3', False, 0)
('addShape2Pin', 3, 0, 47500, 2300, 47700, 4900)
[23750, 1150, 23850, 2450] [0, -2000]
('addPin', '4', False, 0)
('addShape2Pin', 4, 1, 53900, 3920, 54100, 4900)
[26950, 1960, 27050, 2450] [0, -2000]
('addPin', '5', False, 0)
('addShape2Pin', 5, 0, 70830, 3900, 71700, 4100)
[35415, 1950, 35850, 2050] [0, -2000]
('addPin', '6', False, 0)
('addShape2Pin', 6, 0, 76600, -130, 78600, 130)
[38300, -65, 39300, 65] [0, -2000]
('addPin', '7', False, 0)
('addShape2Pin', 7, 0, 6300, 7900, 6500, 10500)
[3150, 3950, 3250, 5250] [0, -2000]
('addPin', '8', False, 0)
('addShape2Pin', 8, 0, -1000, 7870, 1000, 8130)
[-500, 3935, 500, 4065] [0, -2000]
('addPin', '9', False, 0)
('addShape2Pin', 9, 0, 6300, 2300, 6500, 4900)
[3150, 1150, 3250, 2450] [0, -2000]
('addPin', '10', False, 0)
('addShape2Pin', 10, 0, 76600, 7870, 78600, 8130)
[38300, 3935, 39300, 4065] [0, -2000]
('addPin', '11', False, 0)
('addShape2Pin', 11, 1, 57900, 4200, 58100, 4900)
[28950, 2100, 29050, 2450] [0, -2000]
('addPin', '12', False, 0)
('addShape2Pin', 12, 1, 69500, 4200, 69700, 4900)
[34750, 2100, 34850, 2450] [0, -2000]
('addPin', '13', False, 0)
('addShape2Pin', 13, 0, 76600, 3870, 78600, 4130)
[38300, 1935, 39300, 2065] [0, -2000]
('addPin', '14', True, 0)
('addShape2Pin', 14, 5, 50700, 5220, 60100, 5700)
[25350, 2610, 30050, 2850] [0, -2000]
('addPin', '15', True, 0)
('addShape2Pin', 15, 5, 62300, 5220, 71700, 5700)
[31150, 2610, 35850, 2850] [0, -2000]
('addPin', '16', True, 1)
('addShape2Pin', 16, 5, -1400, 13280, 79800, 16880)
[-700, 6640, 39900, 8440] [0, -2000]
('addPin', '17', True, 0)
('addShape2Pin', 17, 5, 50700, 2700, 60100, 3160)
[25350, 1350, 30050, 1580] [0, -2000]
('addPin', '18', True, 0)
('addShape2Pin', 18, 5, 62300, 2700, 71700, 3160)
[31150, 1350, 35850, 1580] [0, -2000]
('addPin', '19', True, 1)
('addShape2Pin', 19, 5, -1400, -5800, 79800, -2200)
[-700, -2900, 39900, -1100] [0, -2000]
('addPin sub', '20', True, False)
('addShape2Pin psub shape', 5, 5100, 300, 72500, 500)
('addPin', '21', False, 0)
('addShape2Pin', 21, 1, 65500, 3920, 65700, 4900)
[32750, 1960, 32850, 2450] [0, -2000]
('addPin', '22', False, 0)
('addShape2Pin', 22, 0, 76600, 11870, 78600, 12130)
[38300, 5935, 39300, 6065] [0, -2000]
('addPin', '23', False, 0)
('addShape2Pin', 23, 0, 47500, 7900, 47700, 10500)
[23750, 3950, 23850, 5250] [0, -2000]
('addPin', '24', False, 0)
('addShape2Pin', 24, 0, 59230, 3900, 60100, 4100)
[29615, 1950, 30050, 2050] [0, -2000]
('setwidth', u'DAC1', u'clk', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'clk', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('addPin2Net ', 2, 0)
('setwidth', u'DAC1', u'in', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'in', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 3, 1)
('addPin2Net ', 4, 1)
('addPin2Net ', 5, 1)
('addPin2Net ', 6, 1)
('setwidth', u'DAC1', u'r1', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'r1', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 7, 2)
('addPin2Net ', 8, 2)
('setwidth', u'DAC1', u'r2', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'r2', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 9, 3)
('addPin2Net ', 10, 3)
('setwidth', u'DAC1', u'rstb', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'rstb', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 11, 4)
('addPin2Net ', 12, 4)
('addPin2Net ', 13, 4)
('setwidth', u'DAC1', u'vdd', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vdd', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 14, 5)
('addPin2Net ', 15, 5)
('addPin2Net ', 16, 5)
('setwidth', u'DAC1', u'vss', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vss', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 17, 6)
('addPin2Net ', 18, 6)
('addPin2Net ', 19, 6)
('addPin2Net pubs ver', 20, 6)
('setwidth', u'DAC1', u'out', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'out', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 21, 7)
('addPin2Net ', 22, 7)
('setwidth', u'DAC1', u'net3', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net3', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 23, 8)
('addPin2Net ', 24, 8)
('routing grid off set', 0, -4000)
AcsMgr::computeAcs Start Access Points Generation
 vdd vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vdd, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 7, net3 out rstb r2 clk in r1
DrGridAstar::run	Route net r1, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net r1, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net3, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net net3, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net out, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net out, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clk, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net clk, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net r2, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net r2, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net rstb (fail 1)
DrGridRoute::ripupSingleNet Ripup net in (fail 1)

DrGridRoute::runNRR	Iteration 1 Unrouted nets 2, in rstb
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net in, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
Net clk, wl: 61200, #via: 3, area: 13144000.00, degSym: 0.18
Net in, wl: 37600, #via: 3, area: 8858800.00, degSym: 0.00
Net r1, wl: 5600, #via: 2, area: 1707600.00, degSym: 0.00
Net r2, wl: 73600, #via: 2, area: 15387600.00, degSym: 0.00
Net rstb, wl: 19600, #via: 3, area: 5013600.00, degSym: 0.61
Net vdd, wl: 16000, #via: 0, area: 18000000.00, degSym: 1.00
Net vss, wl: 13200, #via: 0, area: 16200000.00, degSym: 0.79
Net out, wl: 20000, #via: 1, area: 4500800.00, degSym: 0.02
Net net3, wl: 17200, #via: 0, area: 3600000.00, degSym: 0.00
Total wl: 264000, Total #via: 14, Total area: 86412400.00, Total degSym: 0.19, Avg degSym: 0.29

[INF 2020-05-13 15:23:55    28 sec]  Flow::GdsWriter:: Write circuit wrapper layout to ./wrapper.place.gds 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: vss
DrSymmetry::solve Sym:      clkb1 clkb2

DrGridRoute::runNRR	Iteration 0 Unrouted nets 0,Writing Routing GDS Layout ./DAC1.route.gds
Writing Dumb File ./DAC1.ioPin
('PnR: routing finished ', u'DAC1')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./wrapper.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', True, 0)
('addShape2Pin', 0, 5, 11100, -100, 11300, 500)
[5550, -50, 5650, 250] [0, -2200]
('addPin', '1', True, 0)
('addShape2Pin', 1, 5, 6300, -100, 6500, 500)
[3150, -50, 3250, 250] [0, -2200]
('addPin', '2', True, 0)
('addShape2Pin', 2, 5, -1800, -5000, 19400, -3800)
[-900, -2500, 9700, -1900] [0, -2200]
('addPin sub', '3', True, False)
('addShape2Pin psub shape', 5, 5100, -1300, 12500, -1100)
('addPin', '4', False, 0)
('addShape2Pin', 4, 0, 6300, 700, 7700, 900)
[3150, 350, 3850, 450] [0, -2200]
('addPin', '5', False, 0)
('addShape2Pin', 5, 0, -1000, 1870, 1000, 2130)
[-500, 935, 500, 1065] [0, -2200]
('addPin', '6', False, 0)
('addShape2Pin', 6, 0, 9900, 700, 11300, 900)
[4950, 350, 5650, 450] [0, -2200]
('addPin', '7', False, 0)
('addShape2Pin', 7, 0, 16600, 1870, 18600, 2130)
[8300, 935, 9300, 1065] [0, -2200]
('setwidth', u'wrapper', u'vss', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vss', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('addPin2Net ', 2, 0)
('addPin2Net pubs ver', 3, 0)
('setwidth', u'wrapper', u'clkb1', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'clkb1', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 4, 1)
('addPin2Net ', 5, 1)
('setwidth', u'wrapper', u'clkb2', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'clkb2', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 6, 2)
('addPin2Net ', 7, 2)
('routing grid off set', 0, -4400)
AcsMgr::computeAcs Start Access Points Generation

DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 3, clkb2 clkb1 vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net clkb1, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clkb2, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
PostMgr::patchConcaveJogs Jog-1  2 (1090 1900) (1000 1900) (1000 1870) concave
PostMgr::patchConcaveJogs Jog-2  2 (1000 2130) (1000 2100) (1090 2100) concave
PostMgr::patchConcaveJogs Jog-3  2 (16600 1870) (16600 1900) (16510 1900) concave
PostMgr::patchConcaveJogs Jog-4  2 (16510 2100) (16600 2100) (16600 2130) concave
Net vss, wl: 8000, #via: 0, area: 1770800.00, degSym: 1.00
Net clkb1, wl: 6800, #via: 2, area: 1797200.00, degSym: 1.00
Net clkb2, wl: 6800, #via: 2, area: 1797200.00, degSym: 1.00
Total wl: 21600, Total #via: 4, Total area: 5365200.00, Total degSym: 1.00, Avg degSym: 1.00

[INF 2020-05-13 15:23:55    28 sec]  Flow::GdsWriter:: Write circuit INPUT_RES layout to ./INPUT_RES.place.gds 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:55    25 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:55    25 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: vss
DrSymmetry::solve Sym:      vi vo

DrGridRoute::runNRR	Iteration 0 Unrouted nets 1,Writing Routing GDS Layout ./wrapper.route.gds
Writing Dumb File ./wrapper.ioPin
('PnR: routing finished ', u'wrapper')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./INPUT_RES.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', True, 1)
('addShape2Pin', 0, 5, -1800, -8200, 56200, -4600)
[-900, -4100, 28100, -2300] [0, -3200]
('addPin sub', '1', True, False)
('addShape2Pin psub shape', 5, 5100, -2100, 48900, -1900)
('addPin', '2', False, 0)
('addShape2Pin', 2, 0, 47500, -100, 47700, 5300)
[23750, -50, 23850, 2650] [0, -3200]
('addPin', '3', False, 0)
('addShape2Pin', 3, 0, 53400, 1470, 55400, 1730)
[26700, 735, 27700, 865] [0, -3200]
('addPin', '4', False, 0)
('addShape2Pin', 4, 0, 6300, -100, 6500, 5300)
[3150, -50, 3250, 2650] [0, -3200]
('addPin', '5', False, 0)
('addShape2Pin', 5, 0, -1000, 1470, 1000, 1730)
[-500, 735, 500, 865] [0, -3200]
('setwidth', u'INPUT_RES', u'vss', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vss', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 0, 0)
('addPin2Net pubs ver', 1, 0)
('setwidth', u'INPUT_RES', u'vi', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vi', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 2, 1)
('addPin2Net ', 3, 1)
('setwidth', u'INPUT_RES', u'vo', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 4, 2)
('addPin2Net ', 5, 2)
('routing grid off set', 0, -6400)
AcsMgr::computeAcs Start Access Points Generation
 vss
DrGridAstar::run	Route net vss, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 2, vi vo
DrGridAstar::run	Route net vo, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vi, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vi, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::solveDR Solved!!!!
Net vss, wl: 2800, #via: 0, area: 3800000.00, degSym: 0.00
Net vi, wl: 6000, #via: 2, area: 1787600.00, degSym: 0.33
Net vo, wl: 5600, #via: 2, area: 1707600.00, degSym: 0.36
Total wl: 14400, Total #via: 4, Total area: 7295200.00, Total degSym: 0.28, Avg degSym: 0.23

[INF 2020-05-13 15:23:55    28 sec]  Flow::GdsWriter:: Write circuit CTDSM_CORE_NEW_schematic layout to ./CTDSM_CORE_NEW_schematic.place.gds 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 1 col 3 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 1 col 4 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 2 col 3 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 2 col 4 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 3 col 1 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 3 col 2 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 3 col 3 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 3 col 4 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 4 col 1 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 4 col 2 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 4 col 3 
[ERR 2020-05-13 15:23:56    26 sec]  Generate VIA: Infeasible VIA generation from ViaRule
[WRN 2020-05-13 15:23:56    26 sec]  Generate VIA: skip the via M7 rol 4 col 4 





DrMgr::solve Start Detailed Routing
DrSymmetry::solve Start max symmetric detection
DrSymmetry::solve Self-sym: clk
DrSymmetry::solve Sym:      clkb1 clkb2
DrSymmetry::solve Self-sym: ibias1
DrSymmetry::solve Self-sym: ibias2
DrSymmetry::solve Sym:      outm outp
DrSymmetry::solve Self-sym: rstb
DrSymmetry::solve Self-sym: vdda
DrSymmetry::solve Sym:      vim vip
DrSymmetry::solve Self-sym: vssa
DrSymmetry::solve Self-sym: vddd
DrSymmetry::solve Self-sym: vssd
DrSymmetry::solve Sym:      vo1m vo1p
DrSymmetry::solve Sym:      vo2m vo2p
DrSymmetry::solve Sym:      vo3m vo3p
DrSymmetry::solve Sym:      net063 net062
DrSymmetry::solve Sym:      net051 net052

DrGridRoute::runNRR	Iteration 0 Unrouted nets 4,Writing Routing GDS Layout ./INPUT_RES.route.gds
Writing Dumb File ./INPUT_RES.ioPin
('PnR: routing finished ', u'INPUT_RES')
Parsing LEF file /home/local/eda09/keren/benchmarks/tech/40.lef
Parsing Tech file /home/local/eda09/keren/benchmarks/tech/techfile
Parsing placement GDS layout file ./CTDSM_CORE_NEW_schematic.place.gds
AcsMgr::computeAcs Start Access Points Generation
('addPin', '0', False, 0)
('addShape2Pin', 0, 0, 143400, 18270, 145400, 18530)
[71700, 9135, 72700, 9265] [0, -5400]
('addPin', '1', False, 0)
('addShape2Pin', 1, 0, 241000, 345870, 243000, 346130)
[120500, 172935, 121500, 173065] [0, -5400]
('addPin', '2', False, 0)
('addShape2Pin', 2, 0, 5000, 345870, 7000, 346130)
[2500, 172935, 3500, 173065] [0, -5400]
('addPin', '3', False, 0)
('addShape2Pin', 3, 0, 246200, 110670, 248200, 110930)
[123100, 55335, 124100, 55465] [0, -5400]
('addPin', '4', False, 0)
('addShape2Pin', 4, 0, 114200, 180670, 116200, 180930)
[57100, 90335, 58100, 90465] [0, -5400]
('addPin', '5', False, 0)
('addShape2Pin', 5, 0, -200, 110670, 1800, 110930)
[-100, 55335, 900, 55465] [0, -5400]
('addPin', '6', False, 0)
('addShape2Pin', 6, 0, 131800, 180670, 133800, 180930)
[65900, 90335, 66900, 90465] [0, -5400]
('addPin', '7', False, 0)
('addShape2Pin', 7, 0, 154600, 365870, 156600, 366130)
[77300, 182935, 78300, 183065] [0, -5400]
('addPin', '8', False, 0)
('addShape2Pin', 8, 0, 152200, 229070, 154200, 229330)
[76100, 114535, 77100, 114665] [0, -5400]
('addPin', '9', False, 0)
('addShape2Pin', 9, 0, 119000, 114670, 121000, 114930)
[59500, 57335, 60500, 57465] [0, -5400]
('addPin', '10', False, 0)
('addShape2Pin', 10, 0, 143400, 2270, 145400, 2530)
[71700, 1135, 72700, 1265] [0, -5400]
('addPin', '11', False, 0)
('addShape2Pin', 11, 0, 127000, 114670, 129000, 114930)
[63500, 57335, 64500, 57465] [0, -5400]
('addPin', '12', False, 0)
('addShape2Pin', 12, 0, 102600, 2270, 104600, 2530)
[51300, 1135, 52300, 1265] [0, -5400]
('addPin', '13', False, 0)
('addShape2Pin', 13, 0, -200, 114670, 1800, 114930)
[-100, 57335, 900, 57465] [0, -5400]
('addPin', '14', False, 0)
('addShape2Pin', 14, 0, 246200, 114670, 248200, 114930)
[123100, 57335, 124100, 57465] [0, -5400]
('addPin', '15', False, 0)
('addShape2Pin', 15, 0, 163400, 345870, 165400, 346130)
[81700, 172935, 82700, 173065] [0, -5400]
('addPin', '16', False, 0)
('addShape2Pin', 16, 0, 82600, 345870, 84600, 346130)
[41300, 172935, 42300, 173065] [0, -5400]
('addPin', '17', True, 1)
('addShape2Pin', 17, 5, -2600, 555070, 250600, 558670)
[-1300, 277535, 125300, 279335] [0, -5400]
('addPin', '18', False, 0)
('addShape2Pin', 18, 0, 174200, 547470, 176200, 547730)
[87100, 273735, 88100, 273865] [0, -5400]
('addPin', '19', False, 0)
('addShape2Pin', 19, 0, 71800, 547470, 73800, 547730)
[35900, 273735, 36900, 273865] [0, -5400]
('addPin', '20', True, 1)
('addShape2Pin', 20, 5, -2600, -12600, 250600, -9000)
[-1300, -6300, 125300, -4500] [0, -5400]
('addPin', '21', True, 1)
('addShape2Pin', 21, 5, -2600, 555070, 250600, 558670)
[-1300, 277535, 125300, 279335] [0, -5400]
('addPin', '22', True, 1)
('addShape2Pin', 22, 5, -2600, -12600, 250600, -9000)
[-1300, -6300, 125300, -4500] [0, -5400]
('addPin', '23', False, 0)
('addShape2Pin', 23, 0, 154600, 353870, 156600, 354130)
[77300, 176935, 78300, 177065] [0, -5400]
('addPin', '24', False, 0)
('addShape2Pin', 24, 0, 203000, 461070, 205000, 461330)
[101500, 230535, 102500, 230665] [0, -5400]
('addPin', '25', False, 0)
('addShape2Pin', 25, 0, 241000, 349870, 243000, 350130)
[120500, 174935, 121500, 175065] [0, -5400]
('addPin', '26', False, 0)
('addShape2Pin', 26, 0, 163400, 349870, 165400, 350130)
[81700, 174935, 82700, 175065] [0, -5400]
('addPin', '27', False, 0)
('addShape2Pin', 27, 0, 228600, 547470, 230600, 547730)
[114300, 273735, 115300, 273865] [0, -5400]
('addPin', '28', False, 0)
('addShape2Pin', 28, 0, 91400, 353870, 93400, 354130)
[45700, 176935, 46700, 177065] [0, -5400]
('addPin', '29', False, 0)
('addShape2Pin', 29, 0, 43000, 461070, 45000, 461330)
[21500, 230535, 22500, 230665] [0, -5400]
('addPin', '30', False, 0)
('addShape2Pin', 30, 0, 5000, 349870, 7000, 350130)
[2500, 174935, 3500, 175065] [0, -5400]
('addPin', '31', False, 0)
('addShape2Pin', 31, 0, 82600, 349870, 84600, 350130)
[41300, 174935, 42300, 175065] [0, -5400]
('addPin', '32', False, 0)
('addShape2Pin', 32, 0, 17400, 547470, 19400, 547730)
[8700, 273735, 9700, 273865] [0, -5400]
('addPin', '33', False, 0)
('addShape2Pin', 33, 0, 152200, 205070, 154200, 205330)
[76100, 102535, 77100, 102665] [0, -5400]
('addPin', '34', False, 0)
('addShape2Pin', 34, 0, 154600, 349870, 156600, 350130)
[77300, 174935, 78300, 175065] [0, -5400]
('addPin', '35', False, 0)
('addShape2Pin', 35, 0, 172600, 252270, 174600, 252530)
[86300, 126135, 87300, 126265] [0, -5400]
('addPin', '36', False, 0)
('addShape2Pin', 36, 0, 93800, 205070, 95800, 205330)
[46900, 102535, 47900, 102665] [0, -5400]
('addPin', '37', False, 0)
('addShape2Pin', 37, 0, 91400, 349870, 93400, 350130)
[45700, 174935, 46700, 175065] [0, -5400]
('addPin', '38', False, 0)
('addShape2Pin', 38, 0, 73400, 252270, 75400, 252530)
[36700, 126135, 37700, 126265] [0, -5400]
('addPin', '39', False, 0)
('addShape2Pin', 39, 0, 152200, 201070, 154200, 201330)
[76100, 100535, 77100, 100665] [0, -5400]
('addPin', '40', False, 0)
('addShape2Pin', 40, 0, 119000, 122670, 121000, 122930)
[59500, 61335, 60500, 61465] [0, -5400]
('addPin', '41', False, 0)
('addShape2Pin', 41, 0, 246200, 162670, 248200, 162930)
[123100, 81335, 124100, 81465] [0, -5400]
('addPin', '42', False, 0)
('addShape2Pin', 42, 0, 143400, 14270, 145400, 14530)
[71700, 7135, 72700, 7265] [0, -5400]
('addPin', '43', False, 0)
('addShape2Pin', 43, 1, 93100, 102480, 154900, 102900)
[46550, 51240, 77450, 51450] [0, -5400]
('addPin', '44', False, 0)
('addShape2Pin', 44, 0, 93800, 201070, 95800, 201330)
[46900, 100535, 47900, 100665] [0, -5400]
('addPin', '45', False, 0)
('addShape2Pin', 45, 0, -200, 162670, 1800, 162930)
[-100, 81335, 900, 81465] [0, -5400]
('addPin', '46', False, 0)
('addShape2Pin', 46, 0, 127000, 122670, 129000, 122930)
[63500, 61335, 64500, 61465] [0, -5400]
('addPin', '47', False, 0)
('addShape2Pin', 47, 0, 102600, 14270, 104600, 14530)
[51300, 7135, 52300, 7265] [0, -5400]
('addPin', '48', False, 0)
('addShape2Pin', 48, 1, 93100, 33500, 154900, 33920)
[46550, 16750, 77450, 16960] [0, -5400]
('addPin', '49', False, 0)
('addShape2Pin', 49, 0, 119000, 110670, 121000, 110930)
[59500, 55335, 60500, 55465] [0, -5400]
('addPin', '50', False, 0)
('addShape2Pin', 50, 0, 163400, 353870, 165400, 354130)
[81700, 176935, 82700, 177065] [0, -5400]
('addPin', '51', False, 0)
('addShape2Pin', 51, 0, 127000, 110670, 129000, 110930)
[63500, 55335, 64500, 55465] [0, -5400]
('addPin', '52', False, 0)
('addShape2Pin', 52, 0, 82600, 353870, 84600, 354130)
[41300, 176935, 42300, 177065] [0, -5400]
('addPin', '53', False, 0)
('addShape2Pin', 53, 0, 163400, 341870, 165400, 342130)
[81700, 170935, 82700, 171065] [0, -5400]
('addPin', '54', False, 0)
('addShape2Pin', 54, 0, 82600, 341870, 84600, 342130)
[41300, 170935, 42300, 171065] [0, -5400]
('longwire', u'CTDSM_CORE_NEW_schematic', u'clk', 163.93)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'clk', 0.18)
('setvia', 4, 2, 2)
('addNet netname', u'clk', 'width', 360, 'cuts', 4, 'isPower', False, 'rows', 2, 'cols', 2)
('addPin2Net ', 0, 0)
('addPin2Net ', 1, 0)
('addPin2Net ', 2, 0)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'clkb1', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'clkb1', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 3, 1)
('addPin2Net ', 4, 1)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'clkb2', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'clkb2', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 5, 2)
('addPin2Net ', 6, 2)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'ibias1', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'ibias1', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 7, 3)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'ibias2', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'ibias2', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 8, 4)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'outm', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'outm', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 9, 5)
('addPin2Net ', 10, 5)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'outp', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'outp', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 11, 6)
('addPin2Net ', 12, 6)
('longwire', u'CTDSM_CORE_NEW_schematic', u'rstb', 124.2)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'rstb', 0.3)
('setvia', 9, 3, 3)
('addNet netname', u'rstb', 'width', 600, 'cuts', 9, 'isPower', False, 'rows', 3, 'cols', 3)
('addPin2Net ', 13, 7)
('addPin2Net ', 14, 7)
('addPin2Net ', 15, 7)
('addPin2Net ', 16, 7)
('longwire', u'CTDSM_CORE_NEW_schematic', u'vdda', 195.445)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vdda', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vdda', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 17, 8)
('addPin2Net ', 17, 8)
('addPin2Net ', 17, 8)
('addPin2Net ', 17, 8)
('addPin2Net ', 17, 8)
('addPin2Net ', 17, 8)
('addPin2Net ', 17, 8)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vim', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vim', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 18, 9)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vip', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vip', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 19, 10)
('longwire', u'CTDSM_CORE_NEW_schematic', u'vssa', 277.0)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vssa', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vssa', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('addPin2Net ', 20, 11)
('longwire', u'CTDSM_CORE_NEW_schematic', u'vddd', 265.52)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vddd', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vddd', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 21, 12)
('addPin2Net ', 21, 12)
('longwire', u'CTDSM_CORE_NEW_schematic', u'vssd', 126.6)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vssd', 0.5)
('setvia', 9, 3, 3)
('addNet netname', u'vssd', 'width', 1000, 'cuts', 9, 'isPower', True, 'rows', 3, 'cols', 3)
('addPin2Net ', 22, 13)
('addPin2Net ', 22, 13)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vo1m', 0.2)
('setvia', 4, 2, 2)
('addNet netname', u'vo1m', 'width', 400, 'cuts', 4, 'isPower', False, 'rows', 2, 'cols', 2)
('addPin2Net ', 23, 14)
('addPin2Net ', 24, 14)
('addPin2Net ', 25, 14)
('addPin2Net ', 26, 14)
('addPin2Net ', 27, 14)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vo1p', 0.2)
('setvia', 4, 2, 2)
('addNet netname', u'vo1p', 'width', 400, 'cuts', 4, 'isPower', False, 'rows', 2, 'cols', 2)
('addPin2Net ', 28, 15)
('addPin2Net ', 29, 15)
('addPin2Net ', 30, 15)
('addPin2Net ', 31, 15)
('addPin2Net ', 32, 15)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vo2m', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo2m', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 33, 16)
('addPin2Net ', 34, 16)
('addPin2Net ', 35, 16)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vo2p', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'vo2p', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 36, 17)
('addPin2Net ', 37, 17)
('addPin2Net ', 38, 17)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vo3m', 0.2)
('setvia', 4, 2, 2)
('addNet netname', u'vo3m', 'width', 400, 'cuts', 4, 'isPower', False, 'rows', 2, 'cols', 2)
('addPin2Net ', 39, 18)
('addPin2Net ', 40, 18)
('addPin2Net ', 41, 18)
('addPin2Net ', 42, 18)
('addPin2Net ', 43, 18)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'vo3p', 0.2)
('setvia', 4, 2, 2)
('addNet netname', u'vo3p', 'width', 400, 'cuts', 4, 'isPower', False, 'rows', 2, 'cols', 2)
('addPin2Net ', 44, 19)
('addPin2Net ', 45, 19)
('addPin2Net ', 46, 19)
('addPin2Net ', 47, 19)
('addPin2Net ', 48, 19)
('longwire', u'CTDSM_CORE_NEW_schematic', u'net063', 121.73)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'net063', 0.3)
('setvia', 9, 3, 3)
('addNet netname', u'net063', 'width', 600, 'cuts', 9, 'isPower', False, 'rows', 3, 'cols', 3)
('addPin2Net ', 49, 20)
('addPin2Net ', 50, 20)
('longwire', u'CTDSM_CORE_NEW_schematic', u'net062', 121.73)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'net062', 0.3)
('setvia', 9, 3, 3)
('addNet netname', u'net062', 'width', 600, 'cuts', 9, 'isPower', False, 'rows', 3, 'cols', 3)
('addPin2Net ', 51, 21)
('addPin2Net ', 52, 21)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'net051', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net051', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 53, 22)
('setwidth', u'CTDSM_CORE_NEW_schematic', u'net052', 0.1)
('setvia', 2, 1, 2)
('addNet netname', u'net052', 'width', 200, 'cuts', 2, 'isPower', False, 'rows', 1, 'cols', 2)
('addPin2Net ', 54, 23)
('routing grid off set', 0, -10800)
clk added to IO port
clkb1 added to IO port
clkb2 added to IO port
ibias1 added to IO port
ibias2 added to IO port
outm added to IO port
outp added to IO port
rstb added to IO port
vdda added to IO port
vim added to IO port
vip added to IO port
vssa added to IO port
vddd added to IO port
vssd added to IO port
vo1m added to IO port
vo1p added to IO port
vo2m added to IO port
vo2p added to IO port
vo3m added to IO port
vo3p added to IO port
AcsMgr::computeAcs Start Access Points Generation
 vssd vddd vdda vssa
DrGridRoute::solveDR Solved!!!!

DrGridRoute::runNRR	Iteration 0 Unrouted nets 14, net062 net063 vo3p vo3m vo2p vo2m vo1p vo1m outp outm clkb2 clkb1 clk rstb
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net clk, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	Route net clk, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outm, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outm, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outm, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outp, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outp, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outp, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo2m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo2p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clkb1, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clkb1, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clkb1, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clkb2, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clkb2, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net clkb2, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo1m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo1p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net net063 failed!
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net vo3m failed!
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net vo3m, Sym: 0, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3p, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridRoute::ripupSingleNet Ripup net vo3p (fail 1)
DrGridRoute::ripupSingleNet Ripup net vo3m (fail 1)
DrGridRoute::ripupSingleNet Ripup net net063 (fail 1)
DrGridRoute::ripupSingleNet Ripup net net062 (fail 1)

DrGridRoute::runNRR	Iteration 1 Unrouted nets 5, rstb vo3m vo3p net063 net062
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net net063 failed!
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net vo3p failed!
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net vo3p, Sym: 0, SelfSym: 0, StrictDRC: 0 
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3m, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridRoute::ripupSingleNet Ripup net outp (fail 1)
DrGridRoute::ripupSingleNet Ripup net outm (fail 1)
DrGridRoute::ripupSingleNet Ripup net net063 (fail 2)
DrGridRoute::ripupSingleNet Ripup net net062 (fail 2)
DrGridRoute::ripupSingleNet Ripup net vo3m (fail 2)
DrGridRoute::ripupSingleNet Ripup net vo3p (fail 2)

DrGridRoute::runNRR	Iteration 2 Unrouted nets 7, rstb outm outp vo3m vo3p net063 net062
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3p, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3p, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3m, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net vo3m, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outp, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outp, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outp, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outm, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outm, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net outm, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridRoute::ripupSingleNet Ripup net net063 (fail 3)
DrGridRoute::ripupSingleNet Ripup net net062 (fail 3)

DrGridRoute::runNRR	Iteration 3 Unrouted nets 3, rstb net063 net062
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridRoute::ripupSingleNet Ripup net net062 (fail 4)
DrGridRoute::ripupSingleNet Ripup net net063 (fail 4)

DrGridRoute::runNRR	Iteration 4 Unrouted nets 3, rstb net063 net062
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 1, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridRoute::ripupSingleNet Ripup net net062 (fail 5)
DrGridRoute::ripupSingleNet Ripup net net063 (fail 5)

DrGridRoute::runNRR	Iteration 5 Unrouted nets 3, rstb net063 net062
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridRoute::ripupSingleNet Ripup net net063 (fail 6)
DrGridRoute::ripupSingleNet Ripup net net062 (fail 6)

DrGridRoute::runNRR	Iteration 6 Unrouted nets 3, rstb net063 net062
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridRoute::ripupSingleNet Ripup net net062 (fail 7)
DrGridRoute::ripupSingleNet Ripup net net063 (fail 7)

DrGridRoute::runNRR	Iteration 7 Unrouted nets 3, rstb net063 net062
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridRoute::ripupSingleNet Ripup net net063 (fail 8)
DrGridRoute::ripupSingleNet Ripup net net062 (fail 8)

DrGridRoute::runNRR	Iteration 8 Unrouted nets 3, rstb net063 net062
DrGridAstar::run	Route net net062, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net net063, Sym: 0, SelfSym: 0, StrictDRC: 1 
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 1 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridAstar::run	Route net rstb, Sym: 0, SelfSym: 1, StrictDRC: 0 
DrGridAstar::run	ERROR: Route net rstb failed!
DrGridRoute::solveDR Solved!!!!
PostMgr::patchConcaveJogs Jog-1  2 (145400 18270) (145380 18270) (145380 18220) concave
Net clk, wl: 634800, #via: 6, area: 231905300.00, degSym: 0.38
Net clkb1, wl: 203600, #via: 0, area: 40761000.00, degSym: 0.00
Net clkb2, wl: 204400, #via: 0, area: 40921000.00, degSym: 0.00
Net ibias1 1-pin ignored
Net ibias2 1-pin ignored
Net outm, wl: 160000, #via: 2, area: 32554600.00, degSym: 0.00
Net outp, wl: 158800, #via: 0, area: 31801000.00, degSym: 0.00
Net 7 rstb route failed
Net 8 vdda route failed
Net vim 1-pin ignored
Net vip 1-pin ignored
Net 11 vssa route failed
Net 12 vddd route failed
Net 13 vssd route failed
Net vo1m, wl: 309600, #via: 3, area: 125914600.00, degSym: 1.00
Net vo1p, wl: 309600, #via: 3, area: 125914600.00, degSym: 1.00
Net vo2m, wl: 180400, #via: 0, area: 36161000.00, degSym: 1.00
Net vo2p, wl: 180400, #via: 0, area: 36161000.00, degSym: 1.00
Net vo3m, wl: 391600, #via: 8, area: 161030000.00, degSym: 0.96
Net vo3p, wl: 392000, #via: 7, area: 160670800.00, degSym: 0.95
Net net063, wl: 299200, #via: 2, area: 182483800.00, degSym: 0.00
Net net062, wl: 299600, #via: 2, area: 182581300.00, degSym: 0.00
Net net051 1-pin ignored
Net net052 1-pin ignored
Total wl: 3724000, Total #via: 33, Total area: 1388860000.00, Total degSym: 0.53, Avg degSym: 0.48

Writing Routing GDS Layout ./CTDSM_CORE_NEW_schematic.route.gds
Writing Dumb File ./CTDSM_CORE_NEW_schematic.ioPin
('PnR: routing finished ', u'CTDSM_CORE_NEW_schematic')
